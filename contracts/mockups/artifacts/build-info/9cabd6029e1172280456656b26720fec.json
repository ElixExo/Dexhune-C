{
	"id": "9cabd6029e1172280456656b26720fec",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.22",
	"solcLongVersion": "0.8.22+commit.4fc1097e",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/mockups/MockERC20.sol": {
				"content": "// SPDX-License-Identifier: BSD-3-Clause\r\n/// @title Mock contract for ERC20 related tests\r\n/// @dev Allows user balance to be set and retrieved\r\n/*\r\n*    ........................................................\r\n*    .%%%%%...%%%%%%..%%..%%..%%..%%..%%..%%..%%..%%..%%%%%%.\r\n*    .%%..%%..%%.......%%%%...%%..%%..%%..%%..%%%.%%..%%.....\r\n*    .%%..%%..%%%%......%%....%%%%%%..%%..%%..%%.%%%..%%%%...\r\n*    .%%..%%..%%.......%%%%...%%..%%..%%..%%..%%..%%..%%.....\r\n*    .%%%%%...%%%%%%..%%..%%..%%..%%...%%%%...%%..%%..%%%%%%.\r\n*    ........................................................\r\n*/\r\n\r\npragma solidity ^0.8.22;\r\nimport \"../interfaces/IERC20.sol\";\r\n\r\ncontract MockERC20 is IERC20 {\r\n    mapping(address => uint256) balances;\r\n    uint8 private _decimals = 18;\r\n\r\n    function setBalance(address addr, uint256 balance) external {\r\n        balances[addr] = balance;\r\n    }\r\n\r\n    function balanceOf(address account) external view returns (uint256) {\r\n        return balances[account];\r\n    }\r\n\r\n    function name() external pure override returns (string memory) {\r\n        return \"MockERC20\";\r\n    }\r\n\r\n    function symbol() external pure override returns (string memory) {\r\n        return \"MCKERC20\";\r\n    }\r\n\r\n    function decimals() external view override returns (uint8) {\r\n        return _decimals;\r\n    }\r\n\r\n    function setDecimals(uint8 dec) external {\r\n        _decimals = dec;\r\n    }\r\n\r\n    function totalSupply() external pure override returns (uint256) {\r\n        return type(uint256).max;\r\n    }\r\n\r\n    function transfer(\r\n        address to,\r\n        uint256 value\r\n    ) external override returns (bool) {\r\n        require(balances[msg.sender] >= value);\r\n\r\n        balances[msg.sender] -= value;\r\n        balances[to] += value;\r\n\r\n        return true;\r\n    }\r\n\r\n    function allowance(\r\n        address owner,\r\n        address spender\r\n    ) external pure override returns (uint256) {\r\n        return 0;\r\n    }\r\n\r\n    function approve(\r\n        address spender,\r\n        uint256 value\r\n    ) external pure override returns (bool) {\r\n        return true;\r\n    }\r\n\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 value\r\n    ) external override returns (bool) {\r\n        require(balances[from] >= value);\r\n\r\n        balances[from] -= value;\r\n        balances[to] += value;\r\n\r\n        return true;\r\n    }\r\n}"
			},
			"contracts/interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: BSD-3-Clause\r\n/// @title Standard Interface for ERC20 tokens\r\n// Sources: \r\n// https://eips.ethereum.org/EIPS/eip-20\r\n// https://docs.google.com/document/d/1YLPtQxZu1UAvO9cZ1O2RPXBbT0mooh4DYKjA_jp-RLM\r\n// https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol\r\n/*\r\n*    ........................................................\r\n*    .%%%%%...%%%%%%..%%..%%..%%..%%..%%..%%..%%..%%..%%%%%%.\r\n*    .%%..%%..%%.......%%%%...%%..%%..%%..%%..%%%.%%..%%.....\r\n*    .%%..%%..%%%%......%%....%%%%%%..%%..%%..%%.%%%..%%%%...\r\n*    .%%..%%..%%.......%%%%...%%..%%..%%..%%..%%..%%..%%.....\r\n*    .%%%%%...%%%%%%..%%..%%..%%..%%...%%%%...%%..%%..%%%%%%.\r\n*    ........................................................\r\n*/\r\n\r\npragma solidity ^0.8.22;\r\n\r\ninterface IERC20 {\r\n    /**\r\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n     * another (`to`).\r\n     *\r\n     * Note that `value` may be zero.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /**\r\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n     * a call to {approve}. `value` is the new allowance.\r\n     */\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n\r\n\r\n    /**\r\n     * @dev OPTIONAL Returns the name of the token\r\n     */\r\n    function name() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev OPTIONAL Returns the symbol of the token\r\n     */\r\n    function symbol() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev OPTIONAL Returns the amount of decimals supported by the token\r\n     */\r\n    function decimals() external view returns (uint8);\r\n\r\n    /**\r\n     * @dev Returns the value of tokens in existence.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the value of tokens owned by `account`.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transfer(address to, uint256 value) external returns (bool);\r\n\r\n    /**\r\n     * @dev Returns the remaining number of tokens that `spender` will be\r\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n     * zero by default.\r\n     *\r\n     * This value changes when {approve} or {transferFrom} are called.\r\n     */\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\r\n     * caller's tokens.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\r\n     * that someone may use both the old and the new allowance by unfortunate\r\n     * transaction ordering. One possible solution to mitigate this race\r\n     * condition is to first reduce the spender's allowance to 0 and set the\r\n     * desired value afterwards:\r\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address spender, uint256 value) external returns (bool);\r\n\r\n    /**\r\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\r\n     * allowance mechanism. `value` is then deducted from the caller's\r\n     * allowance.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 1000
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/interfaces/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "OPTIONAL Returns the amount of decimals supported by the token"
							},
							"name()": {
								"details": "OPTIONAL Returns the name of the token"
							},
							"symbol()": {
								"details": "OPTIONAL Returns the symbol of the token"
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"OPTIONAL Returns the amount of decimals supported by the token\"},\"name()\":{\"details\":\"OPTIONAL Returns the name of the token\"},\"symbol()\":{\"details\":\"OPTIONAL Returns the symbol of the token\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xccd9915623686bcd46147899b0bc62d959391bc3eb2e3435cf54ad05ed61fed0\",\"license\":\"BSD-3-Clause\",\"urls\":[\"bzz-raw://ca2c50334eb9c3124fb6fb571a59b1ae3b6abb4c71ccae22998517a1cf3749f5\",\"dweb:/ipfs/Qmbf4MNFGN5dD1qKdSnwYG3ekCAK15quzvuZpn8c4uDY7e\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/mockups/MockERC20.sol": {
				"MockERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "addr",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"name": "setBalance",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "dec",
									"type": "uint8"
								}
							],
							"name": "setDecimals",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "OPTIONAL Returns the amount of decimals supported by the token"
							},
							"name()": {
								"details": "OPTIONAL Returns the name of the token"
							},
							"symbol()": {
								"details": "OPTIONAL Returns the symbol of the token"
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/mockups/MockERC20.sol\":661:2368  contract MockERC20 is IERC20 {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/mockups/MockERC20.sol\":740:768  uint8 private _decimals = 18 */\n  0x01\n  dup1\n  sload\n  not(0xff)\n  and\n    /* \"contracts/mockups/MockERC20.sol\":766:768  18 */\n  0x12\n    /* \"contracts/mockups/MockERC20.sol\":740:768  uint8 private _decimals = 18 */\n  or\n  swap1\n  sstore\n    /* \"contracts/mockups/MockERC20.sol\":661:2368  contract MockERC20 is IERC20 {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/mockups/MockERC20.sol\":661:2368  contract MockERC20 is IERC20 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_14\n      jumpi\n      dup1\n      0xa9059cbb\n      gt\n      tag_15\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xe30443bc\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_15:\n      dup1\n      0x70a08231\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x7a1395aa\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      dup1\n      0x18160ddd\n      gt\n      tag_16\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_16:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/mockups/MockERC20.sol\":1007:1107  function name() external pure override returns (string memory) {... */\n    tag_3:\n        /* \"contracts/mockups/MockERC20.sol\":1081:1099  return \"MockERC20\" */\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      swap1\n      swap2\n      mstore\n      0x09\n      dup2\n      mstore\n      0x4d6f636b45524332300000000000000000000000000000000000000000000000\n      0x20\n      dup3\n      add\n      mstore\n        /* \"contracts/mockups/MockERC20.sol\":1007:1107  function name() external pure override returns (string memory) {... */\n    tag_17:\n      mload(0x40)\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/mockups/MockERC20.sol\":1942:2084  function approve(... */\n    tag_4:\n      tag_21\n      tag_22\n      calldatasize\n      0x04\n      tag_23\n      jump\t// in\n    tag_22:\n      tag_24\n      jump\t// in\n    tag_21:\n      mload(0x40)\n        /* \"#utility.yul\":1192:1206   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1185:1207   */\n      iszero\n        /* \"#utility.yul\":1167:1208   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1155:1157   */\n      0x20\n        /* \"#utility.yul\":1140:1158   */\n      add\n        /* \"contracts/mockups/MockERC20.sol\":1942:2084  function approve(... */\n      tag_19\n        /* \"#utility.yul\":1027:1214   */\n      jump\n        /* \"contracts/mockups/MockERC20.sol\":1409:1516  function totalSupply() external pure override returns (uint256) {... */\n    tag_5:\n      not(0x00)\n    tag_27:\n      mload(0x40)\n        /* \"#utility.yul\":1365:1390   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1353:1355   */\n      0x20\n        /* \"#utility.yul\":1338:1356   */\n      add\n        /* \"contracts/mockups/MockERC20.sol\":1409:1516  function totalSupply() external pure override returns (uint256) {... */\n      tag_19\n        /* \"#utility.yul\":1219:1396   */\n      jump\n        /* \"contracts/mockups/MockERC20.sol\":2092:2365  function transferFrom(... */\n    tag_6:\n      tag_21\n      tag_32\n      calldatasize\n      0x04\n      tag_33\n      jump\t// in\n    tag_32:\n      tag_34\n      jump\t// in\n        /* \"contracts/mockups/MockERC20.sol\":1224:1318  function decimals() external view override returns (uint8) {... */\n    tag_7:\n        /* \"contracts/mockups/MockERC20.sol\":1301:1310  _decimals */\n      sload(0x01)\n        /* \"contracts/mockups/MockERC20.sol\":1224:1318  function decimals() external view override returns (uint8) {... */\n      mload(0x40)\n        /* \"contracts/mockups/MockERC20.sol\":1301:1310  _decimals */\n      0xff\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1876:1912   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1864:1866   */\n      0x20\n        /* \"#utility.yul\":1849:1867   */\n      add\n        /* \"contracts/mockups/MockERC20.sol\":1224:1318  function decimals() external view override returns (uint8) {... */\n      tag_19\n        /* \"#utility.yul\":1734:1918   */\n      jump\n        /* \"contracts/mockups/MockERC20.sol\":888:999  function balanceOf(address account) external view returns (uint256) {... */\n    tag_8:\n      tag_27\n      tag_41\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_41:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/mockups/MockERC20.sol\":974:991  balances[account] */\n      and\n        /* \"contracts/mockups/MockERC20.sol\":947:954  uint256 */\n      0x00\n        /* \"contracts/mockups/MockERC20.sol\":974:991  balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"contracts/mockups/MockERC20.sol\":888:999  function balanceOf(address account) external view returns (uint256) {... */\n      jump\n        /* \"contracts/mockups/MockERC20.sol\":1326:1401  function setDecimals(uint8 dec) external {... */\n    tag_9:\n      tag_45\n      tag_46\n      calldatasize\n      0x04\n      tag_47\n      jump\t// in\n    tag_46:\n        /* \"contracts/mockups/MockERC20.sol\":1378:1387  _decimals */\n      0x01\n        /* \"contracts/mockups/MockERC20.sol\":1378:1393  _decimals = dec */\n      dup1\n      sload\n      not(0xff)\n      and\n      0xff\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/mockups/MockERC20.sol\":1326:1401  function setDecimals(uint8 dec) external {... */\n      jump\n    tag_45:\n      stop\n        /* \"contracts/mockups/MockERC20.sol\":1115:1216  function symbol() external pure override returns (string memory) {... */\n    tag_10:\n        /* \"contracts/mockups/MockERC20.sol\":1191:1208  return \"MCKERC20\" */\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      swap1\n      swap2\n      mstore\n      0x08\n      dup2\n      mstore\n      0x4d434b4552433230000000000000000000000000000000000000000000000000\n      0x20\n      dup3\n      add\n      mstore\n        /* \"contracts/mockups/MockERC20.sol\":1115:1216  function symbol() external pure override returns (string memory) {... */\n      jump(tag_17)\n        /* \"contracts/mockups/MockERC20.sol\":1524:1782  function transfer(... */\n    tag_11:\n      tag_21\n      tag_53\n      calldatasize\n      0x04\n      tag_23\n      jump\t// in\n    tag_53:\n      tag_54\n      jump\t// in\n        /* \"contracts/mockups/MockERC20.sol\":1790:1934  function allowance(... */\n    tag_12:\n      tag_27\n      tag_57\n      calldatasize\n      0x04\n      tag_58\n      jump\t// in\n    tag_57:\n        /* \"contracts/mockups/MockERC20.sol\":1898:1905  uint256 */\n      0x00\n        /* \"contracts/mockups/MockERC20.sol\":1790:1934  function allowance(... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\n        /* \"contracts/mockups/MockERC20.sol\":777:880  function setBalance(address addr, uint256 balance) external {... */\n    tag_13:\n      tag_45\n      tag_62\n      calldatasize\n      0x04\n      tag_23\n      jump\t// in\n    tag_62:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/mockups/MockERC20.sol\":848:862  balances[addr] */\n      swap1\n      swap2\n      and\n        /* \"contracts/mockups/MockERC20.sol\":848:856  balances */\n      0x00\n        /* \"contracts/mockups/MockERC20.sol\":848:862  balances[addr] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/mockups/MockERC20.sol\":848:872  balances[addr] = balance */\n      sstore\n        /* \"contracts/mockups/MockERC20.sol\":777:880  function setBalance(address addr, uint256 balance) external {... */\n      jump\n        /* \"contracts/mockups/MockERC20.sol\":1942:2084  function approve(... */\n    tag_24:\n        /* \"contracts/mockups/MockERC20.sol\":2072:2076  true */\n      0x01\n        /* \"contracts/mockups/MockERC20.sol\":1942:2084  function approve(... */\n    tag_65:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/mockups/MockERC20.sol\":2092:2365  function transferFrom(... */\n    tag_34:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/mockups/MockERC20.sol\":2241:2255  balances[from] */\n      dup4\n      and\n        /* \"contracts/mockups/MockERC20.sol\":2216:2220  bool */\n      0x00\n        /* \"contracts/mockups/MockERC20.sol\":2241:2255  balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"contracts/mockups/MockERC20.sol\":2241:2264  balances[from] >= value */\n      dup3\n      gt\n      iszero\n        /* \"contracts/mockups/MockERC20.sol\":2233:2265  require(balances[from] >= value) */\n      tag_68\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_68:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/mockups/MockERC20.sol\":2278:2292  balances[from] */\n      dup5\n      and\n        /* \"contracts/mockups/MockERC20.sol\":2278:2286  balances */\n      0x00\n        /* \"contracts/mockups/MockERC20.sol\":2278:2292  balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/mockups/MockERC20.sol\":2278:2301  balances[from] -= value */\n      dup1\n      sload\n        /* \"contracts/mockups/MockERC20.sol\":2296:2301  value */\n      dup5\n      swap3\n        /* \"contracts/mockups/MockERC20.sol\":2278:2286  balances */\n      swap1\n        /* \"contracts/mockups/MockERC20.sol\":2278:2301  balances[from] -= value */\n      tag_69\n      swap1\n        /* \"contracts/mockups/MockERC20.sol\":2296:2301  value */\n      dup5\n      swap1\n        /* \"contracts/mockups/MockERC20.sol\":2278:2301  balances[from] -= value */\n      tag_70\n      jump\t// in\n    tag_69:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/mockups/MockERC20.sol\":2312:2324  balances[to] */\n      dup4\n      and\n        /* \"contracts/mockups/MockERC20.sol\":2312:2320  balances */\n      0x00\n        /* \"contracts/mockups/MockERC20.sol\":2312:2324  balances[to] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/mockups/MockERC20.sol\":2312:2333  balances[to] += value */\n      dup1\n      sload\n        /* \"contracts/mockups/MockERC20.sol\":2328:2333  value */\n      dup5\n      swap3\n        /* \"contracts/mockups/MockERC20.sol\":2312:2320  balances */\n      swap1\n        /* \"contracts/mockups/MockERC20.sol\":2312:2333  balances[to] += value */\n      tag_71\n      swap1\n        /* \"contracts/mockups/MockERC20.sol\":2328:2333  value */\n      dup5\n      swap1\n        /* \"contracts/mockups/MockERC20.sol\":2312:2333  balances[to] += value */\n      tag_72\n      jump\t// in\n    tag_71:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"contracts/mockups/MockERC20.sol\":2353:2357  true */\n      0x01\n      swap6\n        /* \"contracts/mockups/MockERC20.sol\":2092:2365  function transferFrom(... */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/mockups/MockERC20.sol\":1524:1782  function transfer(... */\n    tag_54:\n        /* \"contracts/mockups/MockERC20.sol\":1655:1665  msg.sender */\n      caller\n        /* \"contracts/mockups/MockERC20.sol\":1621:1625  bool */\n      0x00\n        /* \"contracts/mockups/MockERC20.sol\":1646:1666  balances[msg.sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"contracts/mockups/MockERC20.sol\":1646:1675  balances[msg.sender] >= value */\n      dup3\n      gt\n      iszero\n        /* \"contracts/mockups/MockERC20.sol\":1638:1676  require(balances[msg.sender] >= value) */\n      tag_78\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_78:\n        /* \"contracts/mockups/MockERC20.sol\":1698:1708  msg.sender */\n      caller\n        /* \"contracts/mockups/MockERC20.sol\":1689:1697  balances */\n      0x00\n        /* \"contracts/mockups/MockERC20.sol\":1689:1709  balances[msg.sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/mockups/MockERC20.sol\":1689:1718  balances[msg.sender] -= value */\n      dup1\n      sload\n        /* \"contracts/mockups/MockERC20.sol\":1713:1718  value */\n      dup5\n      swap3\n        /* \"contracts/mockups/MockERC20.sol\":1689:1697  balances */\n      swap1\n        /* \"contracts/mockups/MockERC20.sol\":1689:1718  balances[msg.sender] -= value */\n      tag_79\n      swap1\n        /* \"contracts/mockups/MockERC20.sol\":1713:1718  value */\n      dup5\n      swap1\n        /* \"contracts/mockups/MockERC20.sol\":1689:1718  balances[msg.sender] -= value */\n      tag_70\n      jump\t// in\n    tag_79:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/mockups/MockERC20.sol\":1729:1741  balances[to] */\n      dup4\n      and\n        /* \"contracts/mockups/MockERC20.sol\":1729:1737  balances */\n      0x00\n        /* \"contracts/mockups/MockERC20.sol\":1729:1741  balances[to] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/mockups/MockERC20.sol\":1729:1750  balances[to] += value */\n      dup1\n      sload\n        /* \"contracts/mockups/MockERC20.sol\":1745:1750  value */\n      dup5\n      swap3\n        /* \"contracts/mockups/MockERC20.sol\":1729:1737  balances */\n      swap1\n        /* \"contracts/mockups/MockERC20.sol\":1729:1750  balances[to] += value */\n      tag_80\n      swap1\n        /* \"contracts/mockups/MockERC20.sol\":1745:1750  value */\n      dup5\n      swap1\n        /* \"contracts/mockups/MockERC20.sol\":1729:1750  balances[to] += value */\n      tag_72\n      jump\t// in\n    tag_80:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"contracts/mockups/MockERC20.sol\":1770:1774  true */\n      0x01\n      swap5\n        /* \"contracts/mockups/MockERC20.sol\":1524:1782  function transfer(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:562   */\n    tag_20:\n        /* \"#utility.yul\":126:130   */\n      0x00\n        /* \"#utility.yul\":155:157   */\n      0x20\n        /* \"#utility.yul\":184:186   */\n      dup1\n        /* \"#utility.yul\":173:182   */\n      dup4\n        /* \"#utility.yul\":166:187   */\n      mstore\n        /* \"#utility.yul\":216:222   */\n      dup4\n        /* \"#utility.yul\":210:223   */\n      mload\n        /* \"#utility.yul\":259:265   */\n      dup1\n        /* \"#utility.yul\":254:256   */\n      0x20\n        /* \"#utility.yul\":243:252   */\n      dup6\n        /* \"#utility.yul\":239:257   */\n      add\n        /* \"#utility.yul\":232:266   */\n      mstore\n        /* \"#utility.yul\":284:285   */\n      0x00\n        /* \"#utility.yul\":294:434   */\n    tag_87:\n        /* \"#utility.yul\":308:314   */\n      dup2\n        /* \"#utility.yul\":305:306   */\n      dup2\n        /* \"#utility.yul\":302:315   */\n      lt\n        /* \"#utility.yul\":294:434   */\n      iszero\n      tag_89\n      jumpi\n        /* \"#utility.yul\":403:417   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":399:422   */\n      dup4\n      add\n        /* \"#utility.yul\":393:423   */\n      mload\n        /* \"#utility.yul\":369:386   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":388:390   */\n      0x40\n        /* \"#utility.yul\":365:391   */\n      add\n        /* \"#utility.yul\":358:424   */\n      mstore\n        /* \"#utility.yul\":323:333   */\n      dup3\n      add\n        /* \"#utility.yul\":294:434   */\n      jump(tag_87)\n    tag_89:\n        /* \"#utility.yul\":298:301   */\n      pop\n        /* \"#utility.yul\":483:484   */\n      0x00\n        /* \"#utility.yul\":478:480   */\n      0x40\n        /* \"#utility.yul\":469:475   */\n      dup3\n        /* \"#utility.yul\":458:467   */\n      dup7\n        /* \"#utility.yul\":454:476   */\n      add\n        /* \"#utility.yul\":450:481   */\n      add\n        /* \"#utility.yul\":443:485   */\n      mstore\n        /* \"#utility.yul\":553:555   */\n      0x40\n        /* \"#utility.yul\":546:548   */\n      0x1f\n        /* \"#utility.yul\":542:549   */\n      not\n        /* \"#utility.yul\":537:539   */\n      0x1f\n        /* \"#utility.yul\":529:535   */\n      dup4\n        /* \"#utility.yul\":525:540   */\n      add\n        /* \"#utility.yul\":521:550   */\n      and\n        /* \"#utility.yul\":510:519   */\n      dup6\n        /* \"#utility.yul\":506:551   */\n      add\n        /* \"#utility.yul\":502:556   */\n      add\n        /* \"#utility.yul\":494:556   */\n      swap3\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":14:562   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":567:763   */\n    tag_83:\n        /* \"#utility.yul\":635:655   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":684:738   */\n      dup2\n      and\n        /* \"#utility.yul\":674:739   */\n      dup2\n      eq\n        /* \"#utility.yul\":664:757   */\n      tag_91\n      jumpi\n        /* \"#utility.yul\":753:754   */\n      0x00\n        /* \"#utility.yul\":750:751   */\n      dup1\n        /* \"#utility.yul\":743:755   */\n      revert\n        /* \"#utility.yul\":664:757   */\n    tag_91:\n        /* \"#utility.yul\":567:763   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":768:1022   */\n    tag_23:\n        /* \"#utility.yul\":836:842   */\n      0x00\n        /* \"#utility.yul\":844:850   */\n      dup1\n        /* \"#utility.yul\":897:899   */\n      0x40\n        /* \"#utility.yul\":885:894   */\n      dup4\n        /* \"#utility.yul\":876:883   */\n      dup6\n        /* \"#utility.yul\":872:895   */\n      sub\n        /* \"#utility.yul\":868:900   */\n      slt\n        /* \"#utility.yul\":865:917   */\n      iszero\n      tag_93\n      jumpi\n        /* \"#utility.yul\":913:914   */\n      0x00\n        /* \"#utility.yul\":910:911   */\n      dup1\n        /* \"#utility.yul\":903:915   */\n      revert\n        /* \"#utility.yul\":865:917   */\n    tag_93:\n        /* \"#utility.yul\":936:965   */\n      tag_94\n        /* \"#utility.yul\":955:964   */\n      dup4\n        /* \"#utility.yul\":936:965   */\n      tag_83\n      jump\t// in\n    tag_94:\n        /* \"#utility.yul\":926:965   */\n      swap5\n        /* \"#utility.yul\":1012:1014   */\n      0x20\n        /* \"#utility.yul\":997:1015   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":984:1016   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":768:1022   */\n      jump\t// out\n        /* \"#utility.yul\":1401:1729   */\n    tag_33:\n        /* \"#utility.yul\":1478:1484   */\n      0x00\n        /* \"#utility.yul\":1486:1492   */\n      dup1\n        /* \"#utility.yul\":1494:1500   */\n      0x00\n        /* \"#utility.yul\":1547:1549   */\n      0x60\n        /* \"#utility.yul\":1535:1544   */\n      dup5\n        /* \"#utility.yul\":1526:1533   */\n      dup7\n        /* \"#utility.yul\":1522:1545   */\n      sub\n        /* \"#utility.yul\":1518:1550   */\n      slt\n        /* \"#utility.yul\":1515:1567   */\n      iszero\n      tag_98\n      jumpi\n        /* \"#utility.yul\":1563:1564   */\n      0x00\n        /* \"#utility.yul\":1560:1561   */\n      dup1\n        /* \"#utility.yul\":1553:1565   */\n      revert\n        /* \"#utility.yul\":1515:1567   */\n    tag_98:\n        /* \"#utility.yul\":1586:1615   */\n      tag_99\n        /* \"#utility.yul\":1605:1614   */\n      dup5\n        /* \"#utility.yul\":1586:1615   */\n      tag_83\n      jump\t// in\n    tag_99:\n        /* \"#utility.yul\":1576:1615   */\n      swap3\n      pop\n        /* \"#utility.yul\":1634:1672   */\n      tag_100\n        /* \"#utility.yul\":1668:1670   */\n      0x20\n        /* \"#utility.yul\":1657:1666   */\n      dup6\n        /* \"#utility.yul\":1653:1671   */\n      add\n        /* \"#utility.yul\":1634:1672   */\n      tag_83\n      jump\t// in\n    tag_100:\n        /* \"#utility.yul\":1624:1672   */\n      swap2\n      pop\n        /* \"#utility.yul\":1719:1721   */\n      0x40\n        /* \"#utility.yul\":1708:1717   */\n      dup5\n        /* \"#utility.yul\":1704:1722   */\n      add\n        /* \"#utility.yul\":1691:1723   */\n      calldataload\n        /* \"#utility.yul\":1681:1723   */\n      swap1\n      pop\n        /* \"#utility.yul\":1401:1729   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1923:2109   */\n    tag_42:\n        /* \"#utility.yul\":1982:1988   */\n      0x00\n        /* \"#utility.yul\":2035:2037   */\n      0x20\n        /* \"#utility.yul\":2023:2032   */\n      dup3\n        /* \"#utility.yul\":2014:2021   */\n      dup5\n        /* \"#utility.yul\":2010:2033   */\n      sub\n        /* \"#utility.yul\":2006:2038   */\n      slt\n        /* \"#utility.yul\":2003:2055   */\n      iszero\n      tag_103\n      jumpi\n        /* \"#utility.yul\":2051:2052   */\n      0x00\n        /* \"#utility.yul\":2048:2049   */\n      dup1\n        /* \"#utility.yul\":2041:2053   */\n      revert\n        /* \"#utility.yul\":2003:2055   */\n    tag_103:\n        /* \"#utility.yul\":2074:2103   */\n      tag_104\n        /* \"#utility.yul\":2093:2102   */\n      dup3\n        /* \"#utility.yul\":2074:2103   */\n      tag_83\n      jump\t// in\n    tag_104:\n        /* \"#utility.yul\":2064:2103   */\n      swap4\n        /* \"#utility.yul\":1923:2109   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2114:2383   */\n    tag_47:\n        /* \"#utility.yul\":2171:2177   */\n      0x00\n        /* \"#utility.yul\":2224:2226   */\n      0x20\n        /* \"#utility.yul\":2212:2221   */\n      dup3\n        /* \"#utility.yul\":2203:2210   */\n      dup5\n        /* \"#utility.yul\":2199:2222   */\n      sub\n        /* \"#utility.yul\":2195:2227   */\n      slt\n        /* \"#utility.yul\":2192:2244   */\n      iszero\n      tag_106\n      jumpi\n        /* \"#utility.yul\":2240:2241   */\n      0x00\n        /* \"#utility.yul\":2237:2238   */\n      dup1\n        /* \"#utility.yul\":2230:2242   */\n      revert\n        /* \"#utility.yul\":2192:2244   */\n    tag_106:\n        /* \"#utility.yul\":2279:2288   */\n      dup2\n        /* \"#utility.yul\":2266:2289   */\n      calldataload\n        /* \"#utility.yul\":2329:2333   */\n      0xff\n        /* \"#utility.yul\":2322:2327   */\n      dup2\n        /* \"#utility.yul\":2318:2334   */\n      and\n        /* \"#utility.yul\":2311:2316   */\n      dup2\n        /* \"#utility.yul\":2308:2335   */\n      eq\n        /* \"#utility.yul\":2298:2353   */\n      tag_104\n      jumpi\n        /* \"#utility.yul\":2349:2350   */\n      0x00\n        /* \"#utility.yul\":2346:2347   */\n      dup1\n        /* \"#utility.yul\":2339:2351   */\n      revert\n        /* \"#utility.yul\":2388:2648   */\n    tag_58:\n        /* \"#utility.yul\":2456:2462   */\n      0x00\n        /* \"#utility.yul\":2464:2470   */\n      dup1\n        /* \"#utility.yul\":2517:2519   */\n      0x40\n        /* \"#utility.yul\":2505:2514   */\n      dup4\n        /* \"#utility.yul\":2496:2503   */\n      dup6\n        /* \"#utility.yul\":2492:2515   */\n      sub\n        /* \"#utility.yul\":2488:2520   */\n      slt\n        /* \"#utility.yul\":2485:2537   */\n      iszero\n      tag_109\n      jumpi\n        /* \"#utility.yul\":2533:2534   */\n      0x00\n        /* \"#utility.yul\":2530:2531   */\n      dup1\n        /* \"#utility.yul\":2523:2535   */\n      revert\n        /* \"#utility.yul\":2485:2537   */\n    tag_109:\n        /* \"#utility.yul\":2556:2585   */\n      tag_110\n        /* \"#utility.yul\":2575:2584   */\n      dup4\n        /* \"#utility.yul\":2556:2585   */\n      tag_83\n      jump\t// in\n    tag_110:\n        /* \"#utility.yul\":2546:2585   */\n      swap2\n      pop\n        /* \"#utility.yul\":2604:2642   */\n      tag_111\n        /* \"#utility.yul\":2638:2640   */\n      0x20\n        /* \"#utility.yul\":2627:2636   */\n      dup5\n        /* \"#utility.yul\":2623:2641   */\n      add\n        /* \"#utility.yul\":2604:2642   */\n      tag_83\n      jump\t// in\n    tag_111:\n        /* \"#utility.yul\":2594:2642   */\n      swap1\n      pop\n        /* \"#utility.yul\":2388:2648   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2653:2837   */\n    tag_84:\n        /* \"#utility.yul\":2705:2782   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2702:2703   */\n      0x00\n        /* \"#utility.yul\":2695:2783   */\n      mstore\n        /* \"#utility.yul\":2802:2806   */\n      0x11\n        /* \"#utility.yul\":2799:2800   */\n      0x04\n        /* \"#utility.yul\":2792:2807   */\n      mstore\n        /* \"#utility.yul\":2826:2830   */\n      0x24\n        /* \"#utility.yul\":2823:2824   */\n      0x00\n        /* \"#utility.yul\":2816:2831   */\n      revert\n        /* \"#utility.yul\":2842:2970   */\n    tag_70:\n        /* \"#utility.yul\":2909:2918   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":2930:2941   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":2927:2964   */\n      iszero\n      tag_65\n      jumpi\n        /* \"#utility.yul\":2944:2962   */\n      tag_65\n      tag_84\n      jump\t// in\n        /* \"#utility.yul\":2975:3100   */\n    tag_72:\n        /* \"#utility.yul\":3040:3049   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":3061:3071   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":3058:3094   */\n      iszero\n      tag_65\n      jumpi\n        /* \"#utility.yul\":3074:3092   */\n      tag_65\n      tag_84\n      jump\t// in\n\n    auxdata: 0xa2646970667358221220fc8bc7063cf5f543633b10f16653de9cc1d19a543b590aa5469fa883bbcec09e64736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60806040526001805460ff1916601217905534801561001c575f80fd5b506105098061002a5f395ff3fe608060405234801561000f575f80fd5b50600436106100c4575f3560e01c806370a082311161007d578063a9059cbb11610058578063a9059cbb146101f6578063dd62ed3e14610209578063e30443bc1461021e575f80fd5b806370a082311461016f5780637a1395aa1461019757806395d89b41146101bd575f80fd5b806318160ddd116100ad57806318160ddd1461013657806323b872dd14610147578063313ce5671461015a575f80fd5b806306fdde03146100c8578063095ea7b314610113575b5f80fd5b60408051808201909152600981527f4d6f636b4552433230000000000000000000000000000000000000000000000060208201525b60405161010a9190610347565b60405180910390f35b6101266101213660046103ae565b610247565b604051901515815260200161010a565b5f195b60405190815260200161010a565b6101266101553660046103d6565b610250565b60015460405160ff909116815260200161010a565b61013961017d36600461040f565b6001600160a01b03165f9081526020819052604090205490565b6101bb6101a536600461042f565b6001805460ff191660ff92909216919091179055565b005b60408051808201909152600881527f4d434b455243323000000000000000000000000000000000000000000000000060208201526100fd565b6101266102043660046103ae565b6102d5565b61013961021736600461044f565b5f92915050565b6101bb61022c3660046103ae565b6001600160a01b039091165f90815260208190526040902055565b60015b92915050565b6001600160a01b0383165f90815260208190526040812054821115610273575f80fd5b6001600160a01b0384165f908152602081905260408120805484929061029a9084906104ad565b90915550506001600160a01b0383165f90815260208190526040812080548492906102c69084906104c0565b90915550600195945050505050565b335f908152602081905260408120548211156102ef575f80fd5b335f908152602081905260408120805484929061030d9084906104ad565b90915550506001600160a01b0383165f90815260208190526040812080548492906103399084906104c0565b909155506001949350505050565b5f602080835283518060208501525f5b8181101561037357858101830151858201604001528201610357565b505f604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146103a9575f80fd5b919050565b5f80604083850312156103bf575f80fd5b6103c883610393565b946020939093013593505050565b5f805f606084860312156103e8575f80fd5b6103f184610393565b92506103ff60208501610393565b9150604084013590509250925092565b5f6020828403121561041f575f80fd5b61042882610393565b9392505050565b5f6020828403121561043f575f80fd5b813560ff81168114610428575f80fd5b5f8060408385031215610460575f80fd5b61046983610393565b915061047760208401610393565b90509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b8181038181111561024a5761024a610480565b8082018082111561024a5761024a61048056fea2646970667358221220fc8bc7063cf5f543633b10f16653de9cc1d19a543b590aa5469fa883bbcec09e64736f6c63430008160033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x12 OR SWAP1 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x1C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x509 DUP1 PUSH2 0x2A PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xC4 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x7D JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x58 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1F6 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0xE30443BC EQ PUSH2 0x21E JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x16F JUMPI DUP1 PUSH4 0x7A1395AA EQ PUSH2 0x197 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1BD JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0xAD JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x147 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x15A JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xC8 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x113 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x9 DUP2 MSTORE PUSH32 0x4D6F636B45524332300000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10A SWAP2 SWAP1 PUSH2 0x347 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x126 PUSH2 0x121 CALLDATASIZE PUSH1 0x4 PUSH2 0x3AE JUMP JUMPDEST PUSH2 0x247 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10A JUMP JUMPDEST PUSH0 NOT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10A JUMP JUMPDEST PUSH2 0x126 PUSH2 0x155 CALLDATASIZE PUSH1 0x4 PUSH2 0x3D6 JUMP JUMPDEST PUSH2 0x250 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10A JUMP JUMPDEST PUSH2 0x139 PUSH2 0x17D CALLDATASIZE PUSH1 0x4 PUSH2 0x40F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1BB PUSH2 0x1A5 CALLDATASIZE PUSH1 0x4 PUSH2 0x42F JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0xFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST STOP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x8 DUP2 MSTORE PUSH32 0x4D434B4552433230000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0xFD JUMP JUMPDEST PUSH2 0x126 PUSH2 0x204 CALLDATASIZE PUSH1 0x4 PUSH2 0x3AE JUMP JUMPDEST PUSH2 0x2D5 JUMP JUMPDEST PUSH2 0x139 PUSH2 0x217 CALLDATASIZE PUSH1 0x4 PUSH2 0x44F JUMP JUMPDEST PUSH0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1BB PUSH2 0x22C CALLDATASIZE PUSH1 0x4 PUSH2 0x3AE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE JUMP JUMPDEST PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x273 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x29A SWAP1 DUP5 SWAP1 PUSH2 0x4AD JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x2C6 SWAP1 DUP5 SWAP1 PUSH2 0x4C0 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH1 0x1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x2EF JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x30D SWAP1 DUP5 SWAP1 PUSH2 0x4AD JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x339 SWAP1 DUP5 SWAP1 PUSH2 0x4C0 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 PUSH1 0x20 DUP6 ADD MSTORE PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x373 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x357 JUMP JUMPDEST POP PUSH0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x3A9 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3BF JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x3C8 DUP4 PUSH2 0x393 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3E8 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x3F1 DUP5 PUSH2 0x393 JUMP JUMPDEST SWAP3 POP PUSH2 0x3FF PUSH1 0x20 DUP6 ADD PUSH2 0x393 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x41F JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x428 DUP3 PUSH2 0x393 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x43F JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x428 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x460 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x469 DUP4 PUSH2 0x393 JUMP JUMPDEST SWAP2 POP PUSH2 0x477 PUSH1 0x20 DUP5 ADD PUSH2 0x393 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x24A JUMPI PUSH2 0x24A PUSH2 0x480 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x24A JUMPI PUSH2 0x24A PUSH2 0x480 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFC DUP12 0xC7 MOD EXTCODECOPY CREATE2 CREATE2 NUMBER PUSH4 0x3B10F166 MSTORE8 0xDE SWAP13 0xC1 0xD1 SWAP11 SLOAD EXTCODESIZE MSIZE EXP 0xA5 CHAINID SWAP16 0xA8 DUP4 0xBB 0xCE 0xC0 SWAP15 PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "661:1707:1:-:0;;;740:28;;;-1:-1:-1;;740:28:1;766:2;740:28;;;661:1707;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@allowance_230": {
									"entryPoint": null,
									"id": 230,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_243": {
									"entryPoint": 583,
									"id": 243,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_132": {
									"entryPoint": null,
									"id": 132,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_159": {
									"entryPoint": null,
									"id": 159,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@name_141": {
									"entryPoint": null,
									"id": 141,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@setBalance_120": {
									"entryPoint": null,
									"id": 120,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setDecimals_169": {
									"entryPoint": null,
									"id": 169,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@symbol_150": {
									"entryPoint": null,
									"id": 150,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_182": {
									"entryPoint": null,
									"id": 182,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_278": {
									"entryPoint": 592,
									"id": 278,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_217": {
									"entryPoint": 725,
									"id": 217,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 915,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1039,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 1103,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 982,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 942,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint8": {
									"entryPoint": 1071,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 839,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1216,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 1197,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1152,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:3102:2",
										"nodeType": "YulBlock",
										"src": "0:3102:2",
										"statements": [
											{
												"nativeSrc": "6:3:2",
												"nodeType": "YulBlock",
												"src": "6:3:2",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "135:427:2",
													"nodeType": "YulBlock",
													"src": "135:427:2",
													"statements": [
														{
															"nativeSrc": "145:12:2",
															"nodeType": "YulVariableDeclaration",
															"src": "145:12:2",
															"value": {
																"kind": "number",
																"nativeSrc": "155:2:2",
																"nodeType": "YulLiteral",
																"src": "155:2:2",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "149:2:2",
																	"nodeType": "YulTypedName",
																	"src": "149:2:2",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "173:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "173:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "184:2:2",
																		"nodeType": "YulLiteral",
																		"src": "184:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "166:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:2"
																},
																"nativeSrc": "166:21:2",
																"nodeType": "YulFunctionCall",
																"src": "166:21:2"
															},
															"nativeSrc": "166:21:2",
															"nodeType": "YulExpressionStatement",
															"src": "166:21:2"
														},
														{
															"nativeSrc": "196:27:2",
															"nodeType": "YulVariableDeclaration",
															"src": "196:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "216:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "216:6:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "210:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "210:5:2"
																},
																"nativeSrc": "210:13:2",
																"nodeType": "YulFunctionCall",
																"src": "210:13:2"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "200:6:2",
																	"nodeType": "YulTypedName",
																	"src": "200:6:2",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "243:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "243:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "254:2:2",
																				"nodeType": "YulLiteral",
																				"src": "254:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "239:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "239:3:2"
																		},
																		"nativeSrc": "239:18:2",
																		"nodeType": "YulFunctionCall",
																		"src": "239:18:2"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "259:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "259:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "232:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "232:6:2"
																},
																"nativeSrc": "232:34:2",
																"nodeType": "YulFunctionCall",
																"src": "232:34:2"
															},
															"nativeSrc": "232:34:2",
															"nodeType": "YulExpressionStatement",
															"src": "232:34:2"
														},
														{
															"nativeSrc": "275:10:2",
															"nodeType": "YulVariableDeclaration",
															"src": "275:10:2",
															"value": {
																"kind": "number",
																"nativeSrc": "284:1:2",
																"nodeType": "YulLiteral",
																"src": "284:1:2",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "279:1:2",
																	"nodeType": "YulTypedName",
																	"src": "279:1:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "344:90:2",
																"nodeType": "YulBlock",
																"src": "344:90:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nativeSrc": "373:9:2",
																									"nodeType": "YulIdentifier",
																									"src": "373:9:2"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "384:1:2",
																									"nodeType": "YulIdentifier",
																									"src": "384:1:2"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "369:3:2",
																								"nodeType": "YulIdentifier",
																								"src": "369:3:2"
																							},
																							"nativeSrc": "369:17:2",
																							"nodeType": "YulFunctionCall",
																							"src": "369:17:2"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "388:2:2",
																							"nodeType": "YulLiteral",
																							"src": "388:2:2",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "365:3:2",
																						"nodeType": "YulIdentifier",
																						"src": "365:3:2"
																					},
																					"nativeSrc": "365:26:2",
																					"nodeType": "YulFunctionCall",
																					"src": "365:26:2"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nativeSrc": "407:6:2",
																											"nodeType": "YulIdentifier",
																											"src": "407:6:2"
																										},
																										{
																											"name": "i",
																											"nativeSrc": "415:1:2",
																											"nodeType": "YulIdentifier",
																											"src": "415:1:2"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nativeSrc": "403:3:2",
																										"nodeType": "YulIdentifier",
																										"src": "403:3:2"
																									},
																									"nativeSrc": "403:14:2",
																									"nodeType": "YulFunctionCall",
																									"src": "403:14:2"
																								},
																								{
																									"name": "_1",
																									"nativeSrc": "419:2:2",
																									"nodeType": "YulIdentifier",
																									"src": "419:2:2"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "399:3:2",
																								"nodeType": "YulIdentifier",
																								"src": "399:3:2"
																							},
																							"nativeSrc": "399:23:2",
																							"nodeType": "YulFunctionCall",
																							"src": "399:23:2"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "393:5:2",
																						"nodeType": "YulIdentifier",
																						"src": "393:5:2"
																					},
																					"nativeSrc": "393:30:2",
																					"nodeType": "YulFunctionCall",
																					"src": "393:30:2"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "358:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "358:6:2"
																			},
																			"nativeSrc": "358:66:2",
																			"nodeType": "YulFunctionCall",
																			"src": "358:66:2"
																		},
																		"nativeSrc": "358:66:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "358:66:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "305:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "305:1:2"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "308:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "308:6:2"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "302:2:2",
																	"nodeType": "YulIdentifier",
																	"src": "302:2:2"
																},
																"nativeSrc": "302:13:2",
																"nodeType": "YulFunctionCall",
																"src": "302:13:2"
															},
															"nativeSrc": "294:140:2",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "316:19:2",
																"nodeType": "YulBlock",
																"src": "316:19:2",
																"statements": [
																	{
																		"nativeSrc": "318:15:2",
																		"nodeType": "YulAssignment",
																		"src": "318:15:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "327:1:2",
																					"nodeType": "YulIdentifier",
																					"src": "327:1:2"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "330:2:2",
																					"nodeType": "YulIdentifier",
																					"src": "330:2:2"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "323:3:2",
																				"nodeType": "YulIdentifier",
																				"src": "323:3:2"
																			},
																			"nativeSrc": "323:10:2",
																			"nodeType": "YulFunctionCall",
																			"src": "323:10:2"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "318:1:2",
																				"nodeType": "YulIdentifier",
																				"src": "318:1:2"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "298:3:2",
																"nodeType": "YulBlock",
																"src": "298:3:2",
																"statements": []
															},
															"src": "294:140:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "458:9:2",
																						"nodeType": "YulIdentifier",
																						"src": "458:9:2"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "469:6:2",
																						"nodeType": "YulIdentifier",
																						"src": "469:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "454:3:2",
																					"nodeType": "YulIdentifier",
																					"src": "454:3:2"
																				},
																				"nativeSrc": "454:22:2",
																				"nodeType": "YulFunctionCall",
																				"src": "454:22:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "478:2:2",
																				"nodeType": "YulLiteral",
																				"src": "478:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "450:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "450:3:2"
																		},
																		"nativeSrc": "450:31:2",
																		"nodeType": "YulFunctionCall",
																		"src": "450:31:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "483:1:2",
																		"nodeType": "YulLiteral",
																		"src": "483:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "443:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "443:6:2"
																},
																"nativeSrc": "443:42:2",
																"nodeType": "YulFunctionCall",
																"src": "443:42:2"
															},
															"nativeSrc": "443:42:2",
															"nodeType": "YulExpressionStatement",
															"src": "443:42:2"
														},
														{
															"nativeSrc": "494:62:2",
															"nodeType": "YulAssignment",
															"src": "494:62:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "510:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "510:9:2"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "529:6:2",
																								"nodeType": "YulIdentifier",
																								"src": "529:6:2"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "537:2:2",
																								"nodeType": "YulLiteral",
																								"src": "537:2:2",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "525:3:2",
																							"nodeType": "YulIdentifier",
																							"src": "525:3:2"
																						},
																						"nativeSrc": "525:15:2",
																						"nodeType": "YulFunctionCall",
																						"src": "525:15:2"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "546:2:2",
																								"nodeType": "YulLiteral",
																								"src": "546:2:2",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "542:3:2",
																							"nodeType": "YulIdentifier",
																							"src": "542:3:2"
																						},
																						"nativeSrc": "542:7:2",
																						"nodeType": "YulFunctionCall",
																						"src": "542:7:2"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "521:3:2",
																					"nodeType": "YulIdentifier",
																					"src": "521:3:2"
																				},
																				"nativeSrc": "521:29:2",
																				"nodeType": "YulFunctionCall",
																				"src": "521:29:2"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "506:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "506:3:2"
																		},
																		"nativeSrc": "506:45:2",
																		"nodeType": "YulFunctionCall",
																		"src": "506:45:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "553:2:2",
																		"nodeType": "YulLiteral",
																		"src": "553:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "502:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "502:3:2"
																},
																"nativeSrc": "502:54:2",
																"nodeType": "YulFunctionCall",
																"src": "502:54:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "494:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "494:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14:548:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "104:9:2",
														"nodeType": "YulTypedName",
														"src": "104:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "115:6:2",
														"nodeType": "YulTypedName",
														"src": "115:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "126:4:2",
														"nodeType": "YulTypedName",
														"src": "126:4:2",
														"type": ""
													}
												],
												"src": "14:548:2"
											},
											{
												"body": {
													"nativeSrc": "616:147:2",
													"nodeType": "YulBlock",
													"src": "616:147:2",
													"statements": [
														{
															"nativeSrc": "626:29:2",
															"nodeType": "YulAssignment",
															"src": "626:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "648:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "648:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "635:12:2",
																	"nodeType": "YulIdentifier",
																	"src": "635:12:2"
																},
																"nativeSrc": "635:20:2",
																"nodeType": "YulFunctionCall",
																"src": "635:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "626:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "626:5:2"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "741:16:2",
																"nodeType": "YulBlock",
																"src": "741:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "750:1:2",
																					"nodeType": "YulLiteral",
																					"src": "750:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "753:1:2",
																					"nodeType": "YulLiteral",
																					"src": "753:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "743:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "743:6:2"
																			},
																			"nativeSrc": "743:12:2",
																			"nodeType": "YulFunctionCall",
																			"src": "743:12:2"
																		},
																		"nativeSrc": "743:12:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "743:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "677:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "677:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "688:5:2",
																						"nodeType": "YulIdentifier",
																						"src": "688:5:2"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "695:42:2",
																						"nodeType": "YulLiteral",
																						"src": "695:42:2",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "684:3:2",
																					"nodeType": "YulIdentifier",
																					"src": "684:3:2"
																				},
																				"nativeSrc": "684:54:2",
																				"nodeType": "YulFunctionCall",
																				"src": "684:54:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "674:2:2",
																			"nodeType": "YulIdentifier",
																			"src": "674:2:2"
																		},
																		"nativeSrc": "674:65:2",
																		"nodeType": "YulFunctionCall",
																		"src": "674:65:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "667:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "667:6:2"
																},
																"nativeSrc": "667:73:2",
																"nodeType": "YulFunctionCall",
																"src": "667:73:2"
															},
															"nativeSrc": "664:93:2",
															"nodeType": "YulIf",
															"src": "664:93:2"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "567:196:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "595:6:2",
														"nodeType": "YulTypedName",
														"src": "595:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "606:5:2",
														"nodeType": "YulTypedName",
														"src": "606:5:2",
														"type": ""
													}
												],
												"src": "567:196:2"
											},
											{
												"body": {
													"nativeSrc": "855:167:2",
													"nodeType": "YulBlock",
													"src": "855:167:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "901:16:2",
																"nodeType": "YulBlock",
																"src": "901:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "910:1:2",
																					"nodeType": "YulLiteral",
																					"src": "910:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "913:1:2",
																					"nodeType": "YulLiteral",
																					"src": "913:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "903:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "903:6:2"
																			},
																			"nativeSrc": "903:12:2",
																			"nodeType": "YulFunctionCall",
																			"src": "903:12:2"
																		},
																		"nativeSrc": "903:12:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "903:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "876:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "876:7:2"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "885:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "885:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "872:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "872:3:2"
																		},
																		"nativeSrc": "872:23:2",
																		"nodeType": "YulFunctionCall",
																		"src": "872:23:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "897:2:2",
																		"nodeType": "YulLiteral",
																		"src": "897:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "868:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "868:3:2"
																},
																"nativeSrc": "868:32:2",
																"nodeType": "YulFunctionCall",
																"src": "868:32:2"
															},
															"nativeSrc": "865:52:2",
															"nodeType": "YulIf",
															"src": "865:52:2"
														},
														{
															"nativeSrc": "926:39:2",
															"nodeType": "YulAssignment",
															"src": "926:39:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "955:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "955:9:2"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "936:18:2",
																	"nodeType": "YulIdentifier",
																	"src": "936:18:2"
																},
																"nativeSrc": "936:29:2",
																"nodeType": "YulFunctionCall",
																"src": "936:29:2"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "926:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "926:6:2"
																}
															]
														},
														{
															"nativeSrc": "974:42:2",
															"nodeType": "YulAssignment",
															"src": "974:42:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1001:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "1001:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1012:2:2",
																				"nodeType": "YulLiteral",
																				"src": "1012:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "997:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "997:3:2"
																		},
																		"nativeSrc": "997:18:2",
																		"nodeType": "YulFunctionCall",
																		"src": "997:18:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "984:12:2",
																	"nodeType": "YulIdentifier",
																	"src": "984:12:2"
																},
																"nativeSrc": "984:32:2",
																"nodeType": "YulFunctionCall",
																"src": "984:32:2"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "974:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "974:6:2"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "768:254:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "813:9:2",
														"nodeType": "YulTypedName",
														"src": "813:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "824:7:2",
														"nodeType": "YulTypedName",
														"src": "824:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "836:6:2",
														"nodeType": "YulTypedName",
														"src": "836:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "844:6:2",
														"nodeType": "YulTypedName",
														"src": "844:6:2",
														"type": ""
													}
												],
												"src": "768:254:2"
											},
											{
												"body": {
													"nativeSrc": "1122:92:2",
													"nodeType": "YulBlock",
													"src": "1122:92:2",
													"statements": [
														{
															"nativeSrc": "1132:26:2",
															"nodeType": "YulAssignment",
															"src": "1132:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1144:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "1144:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1155:2:2",
																		"nodeType": "YulLiteral",
																		"src": "1155:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1140:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "1140:3:2"
																},
																"nativeSrc": "1140:18:2",
																"nodeType": "YulFunctionCall",
																"src": "1140:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1132:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "1132:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1174:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "1174:9:2"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "1199:6:2",
																						"nodeType": "YulIdentifier",
																						"src": "1199:6:2"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1192:6:2",
																					"nodeType": "YulIdentifier",
																					"src": "1192:6:2"
																				},
																				"nativeSrc": "1192:14:2",
																				"nodeType": "YulFunctionCall",
																				"src": "1192:14:2"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1185:6:2",
																			"nodeType": "YulIdentifier",
																			"src": "1185:6:2"
																		},
																		"nativeSrc": "1185:22:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1185:22:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1167:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1167:6:2"
																},
																"nativeSrc": "1167:41:2",
																"nodeType": "YulFunctionCall",
																"src": "1167:41:2"
															},
															"nativeSrc": "1167:41:2",
															"nodeType": "YulExpressionStatement",
															"src": "1167:41:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1027:187:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1091:9:2",
														"nodeType": "YulTypedName",
														"src": "1091:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1102:6:2",
														"nodeType": "YulTypedName",
														"src": "1102:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1113:4:2",
														"nodeType": "YulTypedName",
														"src": "1113:4:2",
														"type": ""
													}
												],
												"src": "1027:187:2"
											},
											{
												"body": {
													"nativeSrc": "1320:76:2",
													"nodeType": "YulBlock",
													"src": "1320:76:2",
													"statements": [
														{
															"nativeSrc": "1330:26:2",
															"nodeType": "YulAssignment",
															"src": "1330:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1342:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "1342:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1353:2:2",
																		"nodeType": "YulLiteral",
																		"src": "1353:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1338:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "1338:3:2"
																},
																"nativeSrc": "1338:18:2",
																"nodeType": "YulFunctionCall",
																"src": "1338:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1330:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "1330:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1372:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "1372:9:2"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1383:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "1383:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1365:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1365:6:2"
																},
																"nativeSrc": "1365:25:2",
																"nodeType": "YulFunctionCall",
																"src": "1365:25:2"
															},
															"nativeSrc": "1365:25:2",
															"nodeType": "YulExpressionStatement",
															"src": "1365:25:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1219:177:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1289:9:2",
														"nodeType": "YulTypedName",
														"src": "1289:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1300:6:2",
														"nodeType": "YulTypedName",
														"src": "1300:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1311:4:2",
														"nodeType": "YulTypedName",
														"src": "1311:4:2",
														"type": ""
													}
												],
												"src": "1219:177:2"
											},
											{
												"body": {
													"nativeSrc": "1505:224:2",
													"nodeType": "YulBlock",
													"src": "1505:224:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "1551:16:2",
																"nodeType": "YulBlock",
																"src": "1551:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1560:1:2",
																					"nodeType": "YulLiteral",
																					"src": "1560:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1563:1:2",
																					"nodeType": "YulLiteral",
																					"src": "1563:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1553:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "1553:6:2"
																			},
																			"nativeSrc": "1553:12:2",
																			"nodeType": "YulFunctionCall",
																			"src": "1553:12:2"
																		},
																		"nativeSrc": "1553:12:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "1553:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1526:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "1526:7:2"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1535:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "1535:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1522:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "1522:3:2"
																		},
																		"nativeSrc": "1522:23:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1522:23:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1547:2:2",
																		"nodeType": "YulLiteral",
																		"src": "1547:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1518:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "1518:3:2"
																},
																"nativeSrc": "1518:32:2",
																"nodeType": "YulFunctionCall",
																"src": "1518:32:2"
															},
															"nativeSrc": "1515:52:2",
															"nodeType": "YulIf",
															"src": "1515:52:2"
														},
														{
															"nativeSrc": "1576:39:2",
															"nodeType": "YulAssignment",
															"src": "1576:39:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1605:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "1605:9:2"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1586:18:2",
																	"nodeType": "YulIdentifier",
																	"src": "1586:18:2"
																},
																"nativeSrc": "1586:29:2",
																"nodeType": "YulFunctionCall",
																"src": "1586:29:2"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1576:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1576:6:2"
																}
															]
														},
														{
															"nativeSrc": "1624:48:2",
															"nodeType": "YulAssignment",
															"src": "1624:48:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1657:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "1657:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1668:2:2",
																				"nodeType": "YulLiteral",
																				"src": "1668:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1653:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "1653:3:2"
																		},
																		"nativeSrc": "1653:18:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1653:18:2"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1634:18:2",
																	"nodeType": "YulIdentifier",
																	"src": "1634:18:2"
																},
																"nativeSrc": "1634:38:2",
																"nodeType": "YulFunctionCall",
																"src": "1634:38:2"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1624:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1624:6:2"
																}
															]
														},
														{
															"nativeSrc": "1681:42:2",
															"nodeType": "YulAssignment",
															"src": "1681:42:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1708:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "1708:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1719:2:2",
																				"nodeType": "YulLiteral",
																				"src": "1719:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1704:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "1704:3:2"
																		},
																		"nativeSrc": "1704:18:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1704:18:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1691:12:2",
																	"nodeType": "YulIdentifier",
																	"src": "1691:12:2"
																},
																"nativeSrc": "1691:32:2",
																"nodeType": "YulFunctionCall",
																"src": "1691:32:2"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "1681:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1681:6:2"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "1401:328:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1455:9:2",
														"nodeType": "YulTypedName",
														"src": "1455:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1466:7:2",
														"nodeType": "YulTypedName",
														"src": "1466:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1478:6:2",
														"nodeType": "YulTypedName",
														"src": "1478:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1486:6:2",
														"nodeType": "YulTypedName",
														"src": "1486:6:2",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1494:6:2",
														"nodeType": "YulTypedName",
														"src": "1494:6:2",
														"type": ""
													}
												],
												"src": "1401:328:2"
											},
											{
												"body": {
													"nativeSrc": "1831:87:2",
													"nodeType": "YulBlock",
													"src": "1831:87:2",
													"statements": [
														{
															"nativeSrc": "1841:26:2",
															"nodeType": "YulAssignment",
															"src": "1841:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1853:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "1853:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1864:2:2",
																		"nodeType": "YulLiteral",
																		"src": "1864:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1849:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "1849:3:2"
																},
																"nativeSrc": "1849:18:2",
																"nodeType": "YulFunctionCall",
																"src": "1849:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1841:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "1841:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1883:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "1883:9:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1898:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "1898:6:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1906:4:2",
																				"nodeType": "YulLiteral",
																				"src": "1906:4:2",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1894:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "1894:3:2"
																		},
																		"nativeSrc": "1894:17:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1894:17:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1876:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1876:6:2"
																},
																"nativeSrc": "1876:36:2",
																"nodeType": "YulFunctionCall",
																"src": "1876:36:2"
															},
															"nativeSrc": "1876:36:2",
															"nodeType": "YulExpressionStatement",
															"src": "1876:36:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "1734:184:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1800:9:2",
														"nodeType": "YulTypedName",
														"src": "1800:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1811:6:2",
														"nodeType": "YulTypedName",
														"src": "1811:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1822:4:2",
														"nodeType": "YulTypedName",
														"src": "1822:4:2",
														"type": ""
													}
												],
												"src": "1734:184:2"
											},
											{
												"body": {
													"nativeSrc": "1993:116:2",
													"nodeType": "YulBlock",
													"src": "1993:116:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "2039:16:2",
																"nodeType": "YulBlock",
																"src": "2039:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2048:1:2",
																					"nodeType": "YulLiteral",
																					"src": "2048:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2051:1:2",
																					"nodeType": "YulLiteral",
																					"src": "2051:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2041:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "2041:6:2"
																			},
																			"nativeSrc": "2041:12:2",
																			"nodeType": "YulFunctionCall",
																			"src": "2041:12:2"
																		},
																		"nativeSrc": "2041:12:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "2041:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2014:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "2014:7:2"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2023:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "2023:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2010:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "2010:3:2"
																		},
																		"nativeSrc": "2010:23:2",
																		"nodeType": "YulFunctionCall",
																		"src": "2010:23:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2035:2:2",
																		"nodeType": "YulLiteral",
																		"src": "2035:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2006:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "2006:3:2"
																},
																"nativeSrc": "2006:32:2",
																"nodeType": "YulFunctionCall",
																"src": "2006:32:2"
															},
															"nativeSrc": "2003:52:2",
															"nodeType": "YulIf",
															"src": "2003:52:2"
														},
														{
															"nativeSrc": "2064:39:2",
															"nodeType": "YulAssignment",
															"src": "2064:39:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2093:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "2093:9:2"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2074:18:2",
																	"nodeType": "YulIdentifier",
																	"src": "2074:18:2"
																},
																"nativeSrc": "2074:29:2",
																"nodeType": "YulFunctionCall",
																"src": "2074:29:2"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2064:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "2064:6:2"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "1923:186:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1959:9:2",
														"nodeType": "YulTypedName",
														"src": "1959:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1970:7:2",
														"nodeType": "YulTypedName",
														"src": "1970:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1982:6:2",
														"nodeType": "YulTypedName",
														"src": "1982:6:2",
														"type": ""
													}
												],
												"src": "1923:186:2"
											},
											{
												"body": {
													"nativeSrc": "2182:201:2",
													"nodeType": "YulBlock",
													"src": "2182:201:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "2228:16:2",
																"nodeType": "YulBlock",
																"src": "2228:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2237:1:2",
																					"nodeType": "YulLiteral",
																					"src": "2237:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2240:1:2",
																					"nodeType": "YulLiteral",
																					"src": "2240:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2230:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "2230:6:2"
																			},
																			"nativeSrc": "2230:12:2",
																			"nodeType": "YulFunctionCall",
																			"src": "2230:12:2"
																		},
																		"nativeSrc": "2230:12:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "2230:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2203:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "2203:7:2"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2212:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "2212:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2199:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "2199:3:2"
																		},
																		"nativeSrc": "2199:23:2",
																		"nodeType": "YulFunctionCall",
																		"src": "2199:23:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2224:2:2",
																		"nodeType": "YulLiteral",
																		"src": "2224:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2195:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "2195:3:2"
																},
																"nativeSrc": "2195:32:2",
																"nodeType": "YulFunctionCall",
																"src": "2195:32:2"
															},
															"nativeSrc": "2192:52:2",
															"nodeType": "YulIf",
															"src": "2192:52:2"
														},
														{
															"nativeSrc": "2253:36:2",
															"nodeType": "YulVariableDeclaration",
															"src": "2253:36:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2279:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "2279:9:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2266:12:2",
																	"nodeType": "YulIdentifier",
																	"src": "2266:12:2"
																},
																"nativeSrc": "2266:23:2",
																"nodeType": "YulFunctionCall",
																"src": "2266:23:2"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2257:5:2",
																	"nodeType": "YulTypedName",
																	"src": "2257:5:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2337:16:2",
																"nodeType": "YulBlock",
																"src": "2337:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2346:1:2",
																					"nodeType": "YulLiteral",
																					"src": "2346:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2349:1:2",
																					"nodeType": "YulLiteral",
																					"src": "2349:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2339:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "2339:6:2"
																			},
																			"nativeSrc": "2339:12:2",
																			"nodeType": "YulFunctionCall",
																			"src": "2339:12:2"
																		},
																		"nativeSrc": "2339:12:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "2339:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2311:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "2311:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2322:5:2",
																						"nodeType": "YulIdentifier",
																						"src": "2322:5:2"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2329:4:2",
																						"nodeType": "YulLiteral",
																						"src": "2329:4:2",
																						"type": "",
																						"value": "0xff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "2318:3:2",
																					"nodeType": "YulIdentifier",
																					"src": "2318:3:2"
																				},
																				"nativeSrc": "2318:16:2",
																				"nodeType": "YulFunctionCall",
																				"src": "2318:16:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2308:2:2",
																			"nodeType": "YulIdentifier",
																			"src": "2308:2:2"
																		},
																		"nativeSrc": "2308:27:2",
																		"nodeType": "YulFunctionCall",
																		"src": "2308:27:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2301:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "2301:6:2"
																},
																"nativeSrc": "2301:35:2",
																"nodeType": "YulFunctionCall",
																"src": "2301:35:2"
															},
															"nativeSrc": "2298:55:2",
															"nodeType": "YulIf",
															"src": "2298:55:2"
														},
														{
															"nativeSrc": "2362:15:2",
															"nodeType": "YulAssignment",
															"src": "2362:15:2",
															"value": {
																"name": "value",
																"nativeSrc": "2372:5:2",
																"nodeType": "YulIdentifier",
																"src": "2372:5:2"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2362:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "2362:6:2"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint8",
												"nativeSrc": "2114:269:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2148:9:2",
														"nodeType": "YulTypedName",
														"src": "2148:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2159:7:2",
														"nodeType": "YulTypedName",
														"src": "2159:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2171:6:2",
														"nodeType": "YulTypedName",
														"src": "2171:6:2",
														"type": ""
													}
												],
												"src": "2114:269:2"
											},
											{
												"body": {
													"nativeSrc": "2475:173:2",
													"nodeType": "YulBlock",
													"src": "2475:173:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "2521:16:2",
																"nodeType": "YulBlock",
																"src": "2521:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2530:1:2",
																					"nodeType": "YulLiteral",
																					"src": "2530:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2533:1:2",
																					"nodeType": "YulLiteral",
																					"src": "2533:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2523:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "2523:6:2"
																			},
																			"nativeSrc": "2523:12:2",
																			"nodeType": "YulFunctionCall",
																			"src": "2523:12:2"
																		},
																		"nativeSrc": "2523:12:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "2523:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2496:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "2496:7:2"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2505:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "2505:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2492:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "2492:3:2"
																		},
																		"nativeSrc": "2492:23:2",
																		"nodeType": "YulFunctionCall",
																		"src": "2492:23:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2517:2:2",
																		"nodeType": "YulLiteral",
																		"src": "2517:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2488:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "2488:3:2"
																},
																"nativeSrc": "2488:32:2",
																"nodeType": "YulFunctionCall",
																"src": "2488:32:2"
															},
															"nativeSrc": "2485:52:2",
															"nodeType": "YulIf",
															"src": "2485:52:2"
														},
														{
															"nativeSrc": "2546:39:2",
															"nodeType": "YulAssignment",
															"src": "2546:39:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2575:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "2575:9:2"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2556:18:2",
																	"nodeType": "YulIdentifier",
																	"src": "2556:18:2"
																},
																"nativeSrc": "2556:29:2",
																"nodeType": "YulFunctionCall",
																"src": "2556:29:2"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2546:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "2546:6:2"
																}
															]
														},
														{
															"nativeSrc": "2594:48:2",
															"nodeType": "YulAssignment",
															"src": "2594:48:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2627:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "2627:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2638:2:2",
																				"nodeType": "YulLiteral",
																				"src": "2638:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2623:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "2623:3:2"
																		},
																		"nativeSrc": "2623:18:2",
																		"nodeType": "YulFunctionCall",
																		"src": "2623:18:2"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2604:18:2",
																	"nodeType": "YulIdentifier",
																	"src": "2604:18:2"
																},
																"nativeSrc": "2604:38:2",
																"nodeType": "YulFunctionCall",
																"src": "2604:38:2"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2594:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "2594:6:2"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "2388:260:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2433:9:2",
														"nodeType": "YulTypedName",
														"src": "2433:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2444:7:2",
														"nodeType": "YulTypedName",
														"src": "2444:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2456:6:2",
														"nodeType": "YulTypedName",
														"src": "2456:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2464:6:2",
														"nodeType": "YulTypedName",
														"src": "2464:6:2",
														"type": ""
													}
												],
												"src": "2388:260:2"
											},
											{
												"body": {
													"nativeSrc": "2685:152:2",
													"nodeType": "YulBlock",
													"src": "2685:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2702:1:2",
																		"nodeType": "YulLiteral",
																		"src": "2702:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2705:77:2",
																		"nodeType": "YulLiteral",
																		"src": "2705:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2695:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "2695:6:2"
																},
																"nativeSrc": "2695:88:2",
																"nodeType": "YulFunctionCall",
																"src": "2695:88:2"
															},
															"nativeSrc": "2695:88:2",
															"nodeType": "YulExpressionStatement",
															"src": "2695:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2799:1:2",
																		"nodeType": "YulLiteral",
																		"src": "2799:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2802:4:2",
																		"nodeType": "YulLiteral",
																		"src": "2802:4:2",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2792:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "2792:6:2"
																},
																"nativeSrc": "2792:15:2",
																"nodeType": "YulFunctionCall",
																"src": "2792:15:2"
															},
															"nativeSrc": "2792:15:2",
															"nodeType": "YulExpressionStatement",
															"src": "2792:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2823:1:2",
																		"nodeType": "YulLiteral",
																		"src": "2823:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2826:4:2",
																		"nodeType": "YulLiteral",
																		"src": "2826:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2816:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "2816:6:2"
																},
																"nativeSrc": "2816:15:2",
																"nodeType": "YulFunctionCall",
																"src": "2816:15:2"
															},
															"nativeSrc": "2816:15:2",
															"nodeType": "YulExpressionStatement",
															"src": "2816:15:2"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "2653:184:2",
												"nodeType": "YulFunctionDefinition",
												"src": "2653:184:2"
											},
											{
												"body": {
													"nativeSrc": "2891:79:2",
													"nodeType": "YulBlock",
													"src": "2891:79:2",
													"statements": [
														{
															"nativeSrc": "2901:17:2",
															"nodeType": "YulAssignment",
															"src": "2901:17:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2913:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "2913:1:2"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "2916:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "2916:1:2"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "2909:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "2909:3:2"
																},
																"nativeSrc": "2909:9:2",
																"nodeType": "YulFunctionCall",
																"src": "2909:9:2"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "2901:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "2901:4:2"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2942:22:2",
																"nodeType": "YulBlock",
																"src": "2942:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "2944:16:2",
																				"nodeType": "YulIdentifier",
																				"src": "2944:16:2"
																			},
																			"nativeSrc": "2944:18:2",
																			"nodeType": "YulFunctionCall",
																			"src": "2944:18:2"
																		},
																		"nativeSrc": "2944:18:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "2944:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "2933:4:2",
																		"nodeType": "YulIdentifier",
																		"src": "2933:4:2"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "2939:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "2939:1:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2930:2:2",
																	"nodeType": "YulIdentifier",
																	"src": "2930:2:2"
																},
																"nativeSrc": "2930:11:2",
																"nodeType": "YulFunctionCall",
																"src": "2930:11:2"
															},
															"nativeSrc": "2927:37:2",
															"nodeType": "YulIf",
															"src": "2927:37:2"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "2842:128:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "2873:1:2",
														"nodeType": "YulTypedName",
														"src": "2873:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "2876:1:2",
														"nodeType": "YulTypedName",
														"src": "2876:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "2882:4:2",
														"nodeType": "YulTypedName",
														"src": "2882:4:2",
														"type": ""
													}
												],
												"src": "2842:128:2"
											},
											{
												"body": {
													"nativeSrc": "3023:77:2",
													"nodeType": "YulBlock",
													"src": "3023:77:2",
													"statements": [
														{
															"nativeSrc": "3033:16:2",
															"nodeType": "YulAssignment",
															"src": "3033:16:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3044:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "3044:1:2"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3047:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "3047:1:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3040:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "3040:3:2"
																},
																"nativeSrc": "3040:9:2",
																"nodeType": "YulFunctionCall",
																"src": "3040:9:2"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "3033:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "3033:3:2"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3072:22:2",
																"nodeType": "YulBlock",
																"src": "3072:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "3074:16:2",
																				"nodeType": "YulIdentifier",
																				"src": "3074:16:2"
																			},
																			"nativeSrc": "3074:18:2",
																			"nodeType": "YulFunctionCall",
																			"src": "3074:18:2"
																		},
																		"nativeSrc": "3074:18:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "3074:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3064:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "3064:1:2"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "3067:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "3067:3:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3061:2:2",
																	"nodeType": "YulIdentifier",
																	"src": "3061:2:2"
																},
																"nativeSrc": "3061:10:2",
																"nodeType": "YulFunctionCall",
																"src": "3061:10:2"
															},
															"nativeSrc": "3058:36:2",
															"nodeType": "YulIf",
															"src": "3058:36:2"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "2975:125:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3006:1:2",
														"nodeType": "YulTypedName",
														"src": "3006:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3009:1:2",
														"nodeType": "YulTypedName",
														"src": "3009:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "3015:3:2",
														"nodeType": "YulTypedName",
														"src": "3015:3:2",
														"type": ""
													}
												],
												"src": "2975:125:2"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_uint8(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n}",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106100c4575f3560e01c806370a082311161007d578063a9059cbb11610058578063a9059cbb146101f6578063dd62ed3e14610209578063e30443bc1461021e575f80fd5b806370a082311461016f5780637a1395aa1461019757806395d89b41146101bd575f80fd5b806318160ddd116100ad57806318160ddd1461013657806323b872dd14610147578063313ce5671461015a575f80fd5b806306fdde03146100c8578063095ea7b314610113575b5f80fd5b60408051808201909152600981527f4d6f636b4552433230000000000000000000000000000000000000000000000060208201525b60405161010a9190610347565b60405180910390f35b6101266101213660046103ae565b610247565b604051901515815260200161010a565b5f195b60405190815260200161010a565b6101266101553660046103d6565b610250565b60015460405160ff909116815260200161010a565b61013961017d36600461040f565b6001600160a01b03165f9081526020819052604090205490565b6101bb6101a536600461042f565b6001805460ff191660ff92909216919091179055565b005b60408051808201909152600881527f4d434b455243323000000000000000000000000000000000000000000000000060208201526100fd565b6101266102043660046103ae565b6102d5565b61013961021736600461044f565b5f92915050565b6101bb61022c3660046103ae565b6001600160a01b039091165f90815260208190526040902055565b60015b92915050565b6001600160a01b0383165f90815260208190526040812054821115610273575f80fd5b6001600160a01b0384165f908152602081905260408120805484929061029a9084906104ad565b90915550506001600160a01b0383165f90815260208190526040812080548492906102c69084906104c0565b90915550600195945050505050565b335f908152602081905260408120548211156102ef575f80fd5b335f908152602081905260408120805484929061030d9084906104ad565b90915550506001600160a01b0383165f90815260208190526040812080548492906103399084906104c0565b909155506001949350505050565b5f602080835283518060208501525f5b8181101561037357858101830151858201604001528201610357565b505f604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146103a9575f80fd5b919050565b5f80604083850312156103bf575f80fd5b6103c883610393565b946020939093013593505050565b5f805f606084860312156103e8575f80fd5b6103f184610393565b92506103ff60208501610393565b9150604084013590509250925092565b5f6020828403121561041f575f80fd5b61042882610393565b9392505050565b5f6020828403121561043f575f80fd5b813560ff81168114610428575f80fd5b5f8060408385031215610460575f80fd5b61046983610393565b915061047760208401610393565b90509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b8181038181111561024a5761024a610480565b8082018082111561024a5761024a61048056fea2646970667358221220fc8bc7063cf5f543633b10f16653de9cc1d19a543b590aa5469fa883bbcec09e64736f6c63430008160033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xC4 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x7D JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x58 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1F6 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0xE30443BC EQ PUSH2 0x21E JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x16F JUMPI DUP1 PUSH4 0x7A1395AA EQ PUSH2 0x197 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1BD JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0xAD JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x147 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x15A JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xC8 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x113 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x9 DUP2 MSTORE PUSH32 0x4D6F636B45524332300000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10A SWAP2 SWAP1 PUSH2 0x347 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x126 PUSH2 0x121 CALLDATASIZE PUSH1 0x4 PUSH2 0x3AE JUMP JUMPDEST PUSH2 0x247 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10A JUMP JUMPDEST PUSH0 NOT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10A JUMP JUMPDEST PUSH2 0x126 PUSH2 0x155 CALLDATASIZE PUSH1 0x4 PUSH2 0x3D6 JUMP JUMPDEST PUSH2 0x250 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10A JUMP JUMPDEST PUSH2 0x139 PUSH2 0x17D CALLDATASIZE PUSH1 0x4 PUSH2 0x40F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1BB PUSH2 0x1A5 CALLDATASIZE PUSH1 0x4 PUSH2 0x42F JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0xFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST STOP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x8 DUP2 MSTORE PUSH32 0x4D434B4552433230000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0xFD JUMP JUMPDEST PUSH2 0x126 PUSH2 0x204 CALLDATASIZE PUSH1 0x4 PUSH2 0x3AE JUMP JUMPDEST PUSH2 0x2D5 JUMP JUMPDEST PUSH2 0x139 PUSH2 0x217 CALLDATASIZE PUSH1 0x4 PUSH2 0x44F JUMP JUMPDEST PUSH0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1BB PUSH2 0x22C CALLDATASIZE PUSH1 0x4 PUSH2 0x3AE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE JUMP JUMPDEST PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x273 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x29A SWAP1 DUP5 SWAP1 PUSH2 0x4AD JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x2C6 SWAP1 DUP5 SWAP1 PUSH2 0x4C0 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH1 0x1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x2EF JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x30D SWAP1 DUP5 SWAP1 PUSH2 0x4AD JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x339 SWAP1 DUP5 SWAP1 PUSH2 0x4C0 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 PUSH1 0x20 DUP6 ADD MSTORE PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x373 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x357 JUMP JUMPDEST POP PUSH0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x3A9 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3BF JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x3C8 DUP4 PUSH2 0x393 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3E8 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x3F1 DUP5 PUSH2 0x393 JUMP JUMPDEST SWAP3 POP PUSH2 0x3FF PUSH1 0x20 DUP6 ADD PUSH2 0x393 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x41F JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x428 DUP3 PUSH2 0x393 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x43F JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x428 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x460 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x469 DUP4 PUSH2 0x393 JUMP JUMPDEST SWAP2 POP PUSH2 0x477 PUSH1 0x20 DUP5 ADD PUSH2 0x393 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x24A JUMPI PUSH2 0x24A PUSH2 0x480 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x24A JUMPI PUSH2 0x24A PUSH2 0x480 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFC DUP12 0xC7 MOD EXTCODECOPY CREATE2 CREATE2 NUMBER PUSH4 0x3B10F166 MSTORE8 0xDE SWAP13 0xC1 0xD1 SWAP11 SLOAD EXTCODESIZE MSIZE EXP 0xA5 CHAINID SWAP16 0xA8 DUP4 0xBB 0xCE 0xC0 SWAP15 PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "661:1707:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1007:100;1081:18;;;;;;;;;;;;;;;;;1007:100;;;;;;;:::i;:::-;;;;;;;;1942:142;;;;;;:::i;:::-;;:::i;:::-;;;1192:14:2;;1185:22;1167:41;;1155:2;1140:18;1942:142:1;1027:187:2;1409:107:1;-1:-1:-1;;1409:107:1;;;1365:25:2;;;1353:2;1338:18;1409:107:1;1219:177:2;2092:273:1;;;;;;:::i;:::-;;:::i;1224:94::-;1301:9;;1224:94;;1301:9;;;;1876:36:2;;1864:2;1849:18;1224:94:1;1734:184:2;888:111:1;;;;;;:::i;:::-;-1:-1:-1;;;;;974:17:1;947:7;974:17;;;;;;;;;;;;888:111;1326:75;;;;;;:::i;:::-;1378:9;:15;;-1:-1:-1;;1378:15:1;;;;;;;;;;;;1326:75;;;1115:101;1191:17;;;;;;;;;;;;;;;;;1115:101;;1524:258;;;;;;:::i;:::-;;:::i;1790:144::-;;;;;;:::i;:::-;1898:7;1790:144;;;;;777:103;;;;;;:::i;:::-;-1:-1:-1;;;;;848:14:1;;;:8;:14;;;;;;;;;;:24;777:103;1942:142;2072:4;1942:142;;;;;:::o;2092:273::-;-1:-1:-1;;;;;2241:14:1;;2216:4;2241:14;;;;;;;;;;;:23;-1:-1:-1;2241:23:1;2233:32;;;;;;-1:-1:-1;;;;;2278:14:1;;:8;:14;;;;;;;;;;:23;;2296:5;;2278:8;:23;;2296:5;;2278:23;:::i;:::-;;;;-1:-1:-1;;;;;;;2312:12:1;;:8;:12;;;;;;;;;;:21;;2328:5;;2312:8;:21;;2328:5;;2312:21;:::i;:::-;;;;-1:-1:-1;2353:4:1;;2092:273;-1:-1:-1;;;;;2092:273:1:o;1524:258::-;1655:10;1621:4;1646:20;;;;;;;;;;;:29;-1:-1:-1;1646:29:1;1638:38;;;;;;1698:10;1689:8;:20;;;;;;;;;;:29;;1713:5;;1689:8;:29;;1713:5;;1689:29;:::i;:::-;;;;-1:-1:-1;;;;;;;1729:12:1;;:8;:12;;;;;;;;;;:21;;1745:5;;1729:8;:21;;1745:5;;1729:21;:::i;:::-;;;;-1:-1:-1;1770:4:1;;1524:258;-1:-1:-1;;;;1524:258:1:o;14:548:2:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;567:196::-;635:20;;-1:-1:-1;;;;;684:54:2;;674:65;;664:93;;753:1;750;743:12;664:93;567:196;;;:::o;768:254::-;836:6;844;897:2;885:9;876:7;872:23;868:32;865:52;;;913:1;910;903:12;865:52;936:29;955:9;936:29;:::i;:::-;926:39;1012:2;997:18;;;;984:32;;-1:-1:-1;;;768:254:2:o;1401:328::-;1478:6;1486;1494;1547:2;1535:9;1526:7;1522:23;1518:32;1515:52;;;1563:1;1560;1553:12;1515:52;1586:29;1605:9;1586:29;:::i;:::-;1576:39;;1634:38;1668:2;1657:9;1653:18;1634:38;:::i;:::-;1624:48;;1719:2;1708:9;1704:18;1691:32;1681:42;;1401:328;;;;;:::o;1923:186::-;1982:6;2035:2;2023:9;2014:7;2010:23;2006:32;2003:52;;;2051:1;2048;2041:12;2003:52;2074:29;2093:9;2074:29;:::i;:::-;2064:39;1923:186;-1:-1:-1;;;1923:186:2:o;2114:269::-;2171:6;2224:2;2212:9;2203:7;2199:23;2195:32;2192:52;;;2240:1;2237;2230:12;2192:52;2279:9;2266:23;2329:4;2322:5;2318:16;2311:5;2308:27;2298:55;;2349:1;2346;2339:12;2388:260;2456:6;2464;2517:2;2505:9;2496:7;2492:23;2488:32;2485:52;;;2533:1;2530;2523:12;2485:52;2556:29;2575:9;2556:29;:::i;:::-;2546:39;;2604:38;2638:2;2627:9;2623:18;2604:38;:::i;:::-;2594:48;;2388:260;;;;;:::o;2653:184::-;2705:77;2702:1;2695:88;2802:4;2799:1;2792:15;2826:4;2823:1;2816:15;2842:128;2909:9;;;2930:11;;;2927:37;;;2944:18;;:::i;2975:125::-;3040:9;;;3061:10;;;3058:36;;;3074:18;;:::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "257800",
								"executionCost": "24522",
								"totalCost": "282322"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "444",
								"balanceOf(address)": "2560",
								"decimals()": "2355",
								"name()": "infinite",
								"setBalance(address,uint256)": "22570",
								"setDecimals(uint8)": "24531",
								"symbol()": "infinite",
								"totalSupply()": "205",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 661,
									"end": 2368,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 661,
									"end": 2368,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 661,
									"end": 2368,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 740,
									"end": 768,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 740,
									"end": 768,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 740,
									"end": 768,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 740,
									"end": 768,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 766,
									"end": 768,
									"name": "PUSH",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 740,
									"end": 768,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 740,
									"end": 768,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 740,
									"end": 768,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 661,
									"end": 2368,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 661,
									"end": 2368,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 661,
									"end": 2368,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 661,
									"end": 2368,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 661,
									"end": 2368,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 661,
									"end": 2368,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 661,
									"end": 2368,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 661,
									"end": 2368,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 661,
									"end": 2368,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 661,
									"end": 2368,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 661,
									"end": 2368,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 661,
									"end": 2368,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 661,
									"end": 2368,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 661,
									"end": 2368,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 661,
									"end": 2368,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 661,
									"end": 2368,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 661,
									"end": 2368,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 661,
									"end": 2368,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220fc8bc7063cf5f543633b10f16653de9cc1d19a543b590aa5469fa883bbcec09e64736f6c63430008160033",
									".code": [
										{
											"begin": 661,
											"end": 2368,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 661,
											"end": 2368,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 661,
											"end": 2368,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 661,
											"end": 2368,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 661,
											"end": 2368,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 661,
											"end": 2368,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 661,
											"end": 2368,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 661,
											"end": 2368,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 661,
											"end": 2368,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 661,
											"end": 2368,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 661,
											"end": 2368,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 661,
											"end": 2368,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 661,
											"end": 2368,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 661,
											"end": 2368,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 661,
											"end": 2368,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 661,
											"end": 2368,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 661,
											"end": 2368,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 661,
											"end": 2368,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 661,
											"end": 2368,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 661,
											"end": 2368,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 661,
											"end": 2368,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 661,
											"end": 2368,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 661,
											"end": 2368,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 661,
											"end": 2368,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 661,
											"end": 2368,
											"name": "PUSH",
											"source": 1,
											"value": "70A08231"
										},
										{
											"begin": 661,
											"end": 2368,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 661,
											"end": 2368,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 661,
											"end": 2368,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 661,
											"end": 2368,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 661,
											"end": 2368,
											"name": "PUSH",
											"source": 1,
											"value": "A9059CBB"
										},
										{
											"begin": 661,
											"end": 2368,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 661,
											"end": 2368,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 661,
											"end": 2368,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 661,
											"end": 2368,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 661,
											"end": 2368,
											"name": "PUSH",
											"source": 1,
											"value": "A9059CBB"
										},
										{
											"begin": 661,
											"end": 2368,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 661,
											"end": 2368,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 661,
											"end": 2368,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 661,
											"end": 2368,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 661,
											"end": 2368,
											"name": "PUSH",
											"source": 1,
											"value": "DD62ED3E"
										},
										{
											"begin": 661,
											"end": 2368,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 661,
											"end": 2368,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 661,
											"end": 2368,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 661,
											"end": 2368,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 661,
											"end": 2368,
											"name": "PUSH",
											"source": 1,
											"value": "E30443BC"
										},
										{
											"begin": 661,
											"end": 2368,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 661,
											"end": 2368,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 661,
											"end": 2368,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 661,
											"end": 2368,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 661,
											"end": 2368,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 661,
											"end": 2368,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 661,
											"end": 2368,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 661,
											"end": 2368,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 661,
											"end": 2368,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 661,
											"end": 2368,
											"name": "PUSH",
											"source": 1,
											"value": "70A08231"
										},
										{
											"begin": 661,
											"end": 2368,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 661,
											"end": 2368,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 661,
											"end": 2368,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 661,
											"end": 2368,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 661,
											"end": 2368,
											"name": "PUSH",
											"source": 1,
											"value": "7A1395AA"
										},
										{
											"begin": 661,
											"end": 2368,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 661,
											"end": 2368,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 661,
											"end": 2368,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 661,
											"end": 2368,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 661,
											"end": 2368,
											"name": "PUSH",
											"source": 1,
											"value": "95D89B41"
										},
										{
											"begin": 661,
											"end": 2368,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 661,
											"end": 2368,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 661,
											"end": 2368,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 661,
											"end": 2368,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 661,
											"end": 2368,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 661,
											"end": 2368,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 661,
											"end": 2368,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 661,
											"end": 2368,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 661,
											"end": 2368,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 661,
											"end": 2368,
											"name": "PUSH",
											"source": 1,
											"value": "18160DDD"
										},
										{
											"begin": 661,
											"end": 2368,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 661,
											"end": 2368,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 661,
											"end": 2368,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 661,
											"end": 2368,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 661,
											"end": 2368,
											"name": "PUSH",
											"source": 1,
											"value": "18160DDD"
										},
										{
											"begin": 661,
											"end": 2368,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 661,
											"end": 2368,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 661,
											"end": 2368,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 661,
											"end": 2368,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 661,
											"end": 2368,
											"name": "PUSH",
											"source": 1,
											"value": "23B872DD"
										},
										{
											"begin": 661,
											"end": 2368,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 661,
											"end": 2368,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 661,
											"end": 2368,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 661,
											"end": 2368,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 661,
											"end": 2368,
											"name": "PUSH",
											"source": 1,
											"value": "313CE567"
										},
										{
											"begin": 661,
											"end": 2368,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 661,
											"end": 2368,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 661,
											"end": 2368,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 661,
											"end": 2368,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 661,
											"end": 2368,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 661,
											"end": 2368,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 661,
											"end": 2368,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 661,
											"end": 2368,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 661,
											"end": 2368,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 661,
											"end": 2368,
											"name": "PUSH",
											"source": 1,
											"value": "6FDDE03"
										},
										{
											"begin": 661,
											"end": 2368,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 661,
											"end": 2368,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 661,
											"end": 2368,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 661,
											"end": 2368,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 661,
											"end": 2368,
											"name": "PUSH",
											"source": 1,
											"value": "95EA7B3"
										},
										{
											"begin": 661,
											"end": 2368,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 661,
											"end": 2368,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 661,
											"end": 2368,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 661,
											"end": 2368,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 661,
											"end": 2368,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 661,
											"end": 2368,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 661,
											"end": 2368,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 661,
											"end": 2368,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1007,
											"end": 1107,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1007,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1081,
											"end": 1099,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1081,
											"end": 1099,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1081,
											"end": 1099,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1081,
											"end": 1099,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1081,
											"end": 1099,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1081,
											"end": 1099,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1081,
											"end": 1099,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1081,
											"end": 1099,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1081,
											"end": 1099,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1081,
											"end": 1099,
											"name": "PUSH",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1081,
											"end": 1099,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1081,
											"end": 1099,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1081,
											"end": 1099,
											"name": "PUSH",
											"source": 1,
											"value": "4D6F636B45524332300000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1081,
											"end": 1099,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1081,
											"end": 1099,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1081,
											"end": 1099,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1081,
											"end": 1099,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1007,
											"end": 1107,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1007,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1007,
											"end": 1107,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1007,
											"end": 1107,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1007,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 1007,
											"end": 1107,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1007,
											"end": 1107,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1007,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1007,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1007,
											"end": 1107,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 1007,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1007,
											"end": 1107,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1007,
											"end": 1107,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1007,
											"end": 1107,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1007,
											"end": 1107,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1007,
											"end": 1107,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1007,
											"end": 1107,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1007,
											"end": 1107,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1942,
											"end": 2084,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1942,
											"end": 2084,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1942,
											"end": 2084,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1942,
											"end": 2084,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1942,
											"end": 2084,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1942,
											"end": 2084,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1942,
											"end": 2084,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1942,
											"end": 2084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1942,
											"end": 2084,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1942,
											"end": 2084,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1942,
											"end": 2084,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1942,
											"end": 2084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1942,
											"end": 2084,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1942,
											"end": 2084,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1942,
											"end": 2084,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1942,
											"end": 2084,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1192,
											"end": 1206,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1192,
											"end": 1206,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1185,
											"end": 1207,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1167,
											"end": 1208,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1167,
											"end": 1208,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1155,
											"end": 1157,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1140,
											"end": 1158,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1942,
											"end": 2084,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 1027,
											"end": 1214,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1409,
											"end": 1516,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1409,
											"end": 1516,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1409,
											"end": 1516,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1409,
											"end": 1516,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1409,
											"end": 1516,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1409,
											"end": 1516,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1365,
											"end": 1390,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1365,
											"end": 1390,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1365,
											"end": 1390,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1353,
											"end": 1355,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1338,
											"end": 1356,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1409,
											"end": 1516,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 1219,
											"end": 1396,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2092,
											"end": 2365,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 2092,
											"end": 2365,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2092,
											"end": 2365,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 2092,
											"end": 2365,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 2092,
											"end": 2365,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2092,
											"end": 2365,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2092,
											"end": 2365,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 2092,
											"end": 2365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2092,
											"end": 2365,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 2092,
											"end": 2365,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2092,
											"end": 2365,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 2092,
											"end": 2365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1224,
											"end": 1318,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 1224,
											"end": 1318,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1301,
											"end": 1310,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1301,
											"end": 1310,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1224,
											"end": 1318,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1224,
											"end": 1318,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1301,
											"end": 1310,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1301,
											"end": 1310,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1301,
											"end": 1310,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1301,
											"end": 1310,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1876,
											"end": 1912,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1876,
											"end": 1912,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1864,
											"end": 1866,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1867,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1224,
											"end": 1318,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 1734,
											"end": 1918,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 888,
											"end": 999,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 888,
											"end": 999,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 888,
											"end": 999,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 888,
											"end": 999,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 888,
											"end": 999,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 888,
											"end": 999,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 888,
											"end": 999,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 888,
											"end": 999,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 888,
											"end": 999,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 888,
											"end": 999,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 974,
											"end": 991,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 947,
											"end": 954,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 974,
											"end": 991,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 974,
											"end": 991,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 974,
											"end": 991,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 974,
											"end": 991,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 974,
											"end": 991,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 974,
											"end": 991,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 974,
											"end": 991,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 974,
											"end": 991,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 974,
											"end": 991,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 974,
											"end": 991,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 974,
											"end": 991,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 974,
											"end": 991,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 888,
											"end": 999,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1326,
											"end": 1401,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1326,
											"end": 1401,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1326,
											"end": 1401,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 1326,
											"end": 1401,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1326,
											"end": 1401,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1326,
											"end": 1401,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1326,
											"end": 1401,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 1326,
											"end": 1401,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1326,
											"end": 1401,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1326,
											"end": 1401,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1387,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1378,
											"end": 1393,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1393,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1378,
											"end": 1393,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1393,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1378,
											"end": 1393,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1393,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1393,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1393,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1393,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1393,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1393,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1393,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1393,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1393,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1326,
											"end": 1401,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1326,
											"end": 1401,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 1326,
											"end": 1401,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1326,
											"end": 1401,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 1115,
											"end": 1216,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1115,
											"end": 1216,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1191,
											"end": 1208,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1191,
											"end": 1208,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1191,
											"end": 1208,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1191,
											"end": 1208,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1191,
											"end": 1208,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1191,
											"end": 1208,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1191,
											"end": 1208,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1191,
											"end": 1208,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1191,
											"end": 1208,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1191,
											"end": 1208,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 1191,
											"end": 1208,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1191,
											"end": 1208,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1191,
											"end": 1208,
											"name": "PUSH",
											"source": 1,
											"value": "4D434B4552433230000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1191,
											"end": 1208,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1191,
											"end": 1208,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1191,
											"end": 1208,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1191,
											"end": 1208,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1115,
											"end": 1216,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1115,
											"end": 1216,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1524,
											"end": 1782,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1524,
											"end": 1782,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1524,
											"end": 1782,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1524,
											"end": 1782,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1524,
											"end": 1782,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1524,
											"end": 1782,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1524,
											"end": 1782,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1524,
											"end": 1782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1524,
											"end": 1782,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1524,
											"end": 1782,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1524,
											"end": 1782,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1524,
											"end": 1782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1790,
											"end": 1934,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1790,
											"end": 1934,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1790,
											"end": 1934,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1790,
											"end": 1934,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1790,
											"end": 1934,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1790,
											"end": 1934,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1790,
											"end": 1934,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1790,
											"end": 1934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1790,
											"end": 1934,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1790,
											"end": 1934,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1898,
											"end": 1905,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1790,
											"end": 1934,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1790,
											"end": 1934,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1790,
											"end": 1934,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1790,
											"end": 1934,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1790,
											"end": 1934,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 777,
											"end": 880,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 777,
											"end": 880,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 777,
											"end": 880,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 777,
											"end": 880,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 777,
											"end": 880,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 777,
											"end": 880,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 777,
											"end": 880,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 777,
											"end": 880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 777,
											"end": 880,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 777,
											"end": 880,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 848,
											"end": 862,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 848,
											"end": 862,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 848,
											"end": 862,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 848,
											"end": 856,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 848,
											"end": 862,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 848,
											"end": 862,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 848,
											"end": 862,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 848,
											"end": 862,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 848,
											"end": 862,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 848,
											"end": 862,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 848,
											"end": 862,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 848,
											"end": 862,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 848,
											"end": 862,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 848,
											"end": 862,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 848,
											"end": 872,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 777,
											"end": 880,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1942,
											"end": 2084,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1942,
											"end": 2084,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2072,
											"end": 2076,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1942,
											"end": 2084,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 1942,
											"end": 2084,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1942,
											"end": 2084,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1942,
											"end": 2084,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1942,
											"end": 2084,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1942,
											"end": 2084,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1942,
											"end": 2084,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2092,
											"end": 2365,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 2092,
											"end": 2365,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2241,
											"end": 2255,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2241,
											"end": 2255,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2216,
											"end": 2220,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2241,
											"end": 2255,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2241,
											"end": 2255,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2241,
											"end": 2255,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2241,
											"end": 2255,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2241,
											"end": 2255,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2241,
											"end": 2255,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2241,
											"end": 2255,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2241,
											"end": 2255,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2241,
											"end": 2255,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2241,
											"end": 2255,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2241,
											"end": 2255,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2241,
											"end": 2264,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 2241,
											"end": 2264,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2265,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2233,
											"end": 2265,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2265,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2233,
											"end": 2265,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2265,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2265,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2233,
											"end": 2265,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2278,
											"end": 2292,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2278,
											"end": 2292,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2278,
											"end": 2286,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2278,
											"end": 2292,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2278,
											"end": 2292,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2278,
											"end": 2292,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2278,
											"end": 2292,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2278,
											"end": 2292,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2278,
											"end": 2292,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2278,
											"end": 2292,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2278,
											"end": 2292,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2278,
											"end": 2292,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2278,
											"end": 2292,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2278,
											"end": 2301,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2278,
											"end": 2301,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2296,
											"end": 2301,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2296,
											"end": 2301,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2278,
											"end": 2286,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2278,
											"end": 2301,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2278,
											"end": 2301,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2296,
											"end": 2301,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2296,
											"end": 2301,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2278,
											"end": 2301,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 2278,
											"end": 2301,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2278,
											"end": 2301,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2278,
											"end": 2301,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2278,
											"end": 2301,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2278,
											"end": 2301,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2278,
											"end": 2301,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2312,
											"end": 2324,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2312,
											"end": 2324,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2312,
											"end": 2320,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2312,
											"end": 2324,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2312,
											"end": 2324,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2312,
											"end": 2324,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2312,
											"end": 2324,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2312,
											"end": 2324,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2312,
											"end": 2324,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2312,
											"end": 2324,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2312,
											"end": 2324,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2312,
											"end": 2324,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2312,
											"end": 2324,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2312,
											"end": 2333,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2312,
											"end": 2333,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2328,
											"end": 2333,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2328,
											"end": 2333,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2312,
											"end": 2320,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2312,
											"end": 2333,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 2312,
											"end": 2333,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2328,
											"end": 2333,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2328,
											"end": 2333,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2312,
											"end": 2333,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 2312,
											"end": 2333,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2312,
											"end": 2333,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 2312,
											"end": 2333,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2312,
											"end": 2333,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2312,
											"end": 2333,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2312,
											"end": 2333,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2353,
											"end": 2357,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2353,
											"end": 2357,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 2092,
											"end": 2365,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2092,
											"end": 2365,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1524,
											"end": 1782,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1524,
											"end": 1782,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1655,
											"end": 1665,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1621,
											"end": 1625,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1666,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1646,
											"end": 1666,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1646,
											"end": 1666,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1646,
											"end": 1666,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1646,
											"end": 1666,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1646,
											"end": 1666,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1646,
											"end": 1666,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1646,
											"end": 1666,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1646,
											"end": 1666,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1646,
											"end": 1666,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1646,
											"end": 1666,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1646,
											"end": 1675,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 1646,
											"end": 1675,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1676,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 1638,
											"end": 1676,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1676,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 1676,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1676,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1676,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 1638,
											"end": 1676,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1698,
											"end": 1708,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1689,
											"end": 1697,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1689,
											"end": 1709,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1689,
											"end": 1709,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1689,
											"end": 1709,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1689,
											"end": 1709,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1689,
											"end": 1709,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1689,
											"end": 1709,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1689,
											"end": 1709,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1689,
											"end": 1709,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1689,
											"end": 1709,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1689,
											"end": 1709,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1689,
											"end": 1718,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1689,
											"end": 1718,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1713,
											"end": 1718,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1713,
											"end": 1718,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1689,
											"end": 1697,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1689,
											"end": 1718,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 1689,
											"end": 1718,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1713,
											"end": 1718,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1713,
											"end": 1718,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1689,
											"end": 1718,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 1689,
											"end": 1718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1689,
											"end": 1718,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 1689,
											"end": 1718,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1689,
											"end": 1718,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1689,
											"end": 1718,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1689,
											"end": 1718,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1729,
											"end": 1741,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1729,
											"end": 1741,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1729,
											"end": 1737,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1729,
											"end": 1741,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1729,
											"end": 1741,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1729,
											"end": 1741,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1729,
											"end": 1741,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1729,
											"end": 1741,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1729,
											"end": 1741,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1729,
											"end": 1741,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1729,
											"end": 1741,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1729,
											"end": 1741,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1729,
											"end": 1741,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1729,
											"end": 1750,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1729,
											"end": 1750,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1745,
											"end": 1750,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1745,
											"end": 1750,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1729,
											"end": 1737,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1729,
											"end": 1750,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1729,
											"end": 1750,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1745,
											"end": 1750,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1745,
											"end": 1750,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1729,
											"end": 1750,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 1729,
											"end": 1750,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1729,
											"end": 1750,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1729,
											"end": 1750,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1729,
											"end": 1750,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1729,
											"end": 1750,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1729,
											"end": 1750,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1770,
											"end": 1774,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1770,
											"end": 1774,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 1524,
											"end": 1782,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1524,
											"end": 1782,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 562,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 14,
											"end": 562,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 155,
											"end": 157,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 184,
											"end": 186,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 173,
											"end": 182,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 166,
											"end": 187,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 216,
											"end": 222,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 210,
											"end": 223,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 259,
											"end": 265,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 254,
											"end": 256,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 243,
											"end": 252,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 239,
											"end": 257,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 232,
											"end": 266,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 284,
											"end": 285,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 308,
											"end": 314,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 305,
											"end": 306,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 302,
											"end": 315,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 294,
											"end": 434,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 403,
											"end": 417,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 399,
											"end": 422,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 399,
											"end": 422,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 393,
											"end": 423,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 369,
											"end": 386,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 388,
											"end": 390,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 365,
											"end": 391,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 358,
											"end": 424,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 323,
											"end": 333,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 323,
											"end": 333,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 298,
											"end": 301,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 483,
											"end": 484,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 478,
											"end": 480,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 469,
											"end": 475,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 458,
											"end": 467,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 454,
											"end": 476,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 450,
											"end": 481,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 443,
											"end": 485,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 553,
											"end": 555,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 546,
											"end": 548,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 542,
											"end": 549,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 537,
											"end": 539,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 529,
											"end": 535,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 525,
											"end": 540,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 521,
											"end": 550,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 510,
											"end": 519,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 506,
											"end": 551,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 502,
											"end": 556,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 494,
											"end": 556,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14,
											"end": 562,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 14,
											"end": 562,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14,
											"end": 562,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14,
											"end": 562,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 567,
											"end": 763,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 567,
											"end": 763,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 635,
											"end": 655,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 635,
											"end": 655,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 684,
											"end": 738,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 684,
											"end": 738,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 674,
											"end": 739,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 674,
											"end": 739,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 664,
											"end": 757,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 664,
											"end": 757,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 753,
											"end": 754,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 750,
											"end": 751,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 743,
											"end": 755,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 664,
											"end": 757,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 664,
											"end": 757,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 567,
											"end": 763,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 567,
											"end": 763,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 567,
											"end": 763,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 567,
											"end": 763,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 768,
											"end": 1022,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 768,
											"end": 1022,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 836,
											"end": 842,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 844,
											"end": 850,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 897,
											"end": 899,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 885,
											"end": 894,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 876,
											"end": 883,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 872,
											"end": 895,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 868,
											"end": 900,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 865,
											"end": 917,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 865,
											"end": 917,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 865,
											"end": 917,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 913,
											"end": 914,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 910,
											"end": 911,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 903,
											"end": 915,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 865,
											"end": 917,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 865,
											"end": 917,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 936,
											"end": 965,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 955,
											"end": 964,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 936,
											"end": 965,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 936,
											"end": 965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 936,
											"end": 965,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 936,
											"end": 965,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 926,
											"end": 965,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1014,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 997,
											"end": 1015,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 997,
											"end": 1015,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 997,
											"end": 1015,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 997,
											"end": 1015,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 984,
											"end": 1016,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 984,
											"end": 1016,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 768,
											"end": 1022,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1401,
											"end": 1729,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 1401,
											"end": 1729,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1486,
											"end": 1492,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1494,
											"end": 1500,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1547,
											"end": 1549,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1535,
											"end": 1544,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1526,
											"end": 1533,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1522,
											"end": 1545,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1518,
											"end": 1550,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 1515,
											"end": 1567,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1515,
											"end": 1567,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 1515,
											"end": 1567,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1563,
											"end": 1564,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1560,
											"end": 1561,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1553,
											"end": 1565,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1515,
											"end": 1567,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 1515,
											"end": 1567,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1586,
											"end": 1615,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 1605,
											"end": 1614,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1586,
											"end": 1615,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 1586,
											"end": 1615,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1586,
											"end": 1615,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 1586,
											"end": 1615,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1576,
											"end": 1615,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1576,
											"end": 1615,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1634,
											"end": 1672,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1668,
											"end": 1670,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1657,
											"end": 1666,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1653,
											"end": 1671,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1634,
											"end": 1672,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 1634,
											"end": 1672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1634,
											"end": 1672,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1634,
											"end": 1672,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1624,
											"end": 1672,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1624,
											"end": 1672,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1719,
											"end": 1721,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1708,
											"end": 1717,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1704,
											"end": 1722,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 1723,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 1681,
											"end": 1723,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1681,
											"end": 1723,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1401,
											"end": 1729,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1401,
											"end": 1729,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1401,
											"end": 1729,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1401,
											"end": 1729,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1401,
											"end": 1729,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1401,
											"end": 1729,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1923,
											"end": 2109,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 1923,
											"end": 2109,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1982,
											"end": 1988,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2035,
											"end": 2037,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2023,
											"end": 2032,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2021,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2033,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2006,
											"end": 2038,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2055,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 2003,
											"end": 2055,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2051,
											"end": 2052,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2048,
											"end": 2049,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2041,
											"end": 2053,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2055,
											"name": "tag",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 2003,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2103,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 2093,
											"end": 2102,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2103,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 2074,
											"end": 2103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2103,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 2074,
											"end": 2103,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2064,
											"end": 2103,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1923,
											"end": 2109,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1923,
											"end": 2109,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2114,
											"end": 2383,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 2114,
											"end": 2383,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2171,
											"end": 2177,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2224,
											"end": 2226,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2212,
											"end": 2221,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2210,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2199,
											"end": 2222,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2195,
											"end": 2227,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 2192,
											"end": 2244,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2192,
											"end": 2244,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 2192,
											"end": 2244,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2240,
											"end": 2241,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2237,
											"end": 2238,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2230,
											"end": 2242,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2192,
											"end": 2244,
											"name": "tag",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 2192,
											"end": 2244,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2279,
											"end": 2288,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2266,
											"end": 2289,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 2329,
											"end": 2333,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 2322,
											"end": 2327,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2318,
											"end": 2334,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2311,
											"end": 2316,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2308,
											"end": 2335,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2298,
											"end": 2353,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 2298,
											"end": 2353,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2349,
											"end": 2350,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2346,
											"end": 2347,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2339,
											"end": 2351,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2388,
											"end": 2648,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 2388,
											"end": 2648,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2456,
											"end": 2462,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2464,
											"end": 2470,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2517,
											"end": 2519,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2505,
											"end": 2514,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2496,
											"end": 2503,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2492,
											"end": 2515,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2488,
											"end": 2520,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 2485,
											"end": 2537,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2485,
											"end": 2537,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 2485,
											"end": 2537,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2533,
											"end": 2534,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2530,
											"end": 2531,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2523,
											"end": 2535,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2485,
											"end": 2537,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 2485,
											"end": 2537,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2556,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 2575,
											"end": 2584,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2556,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 2556,
											"end": 2585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2556,
											"end": 2585,
											"name": "tag",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 2556,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2546,
											"end": 2585,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2546,
											"end": 2585,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2604,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 2638,
											"end": 2640,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2627,
											"end": 2636,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2623,
											"end": 2641,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2604,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 2604,
											"end": 2642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2604,
											"end": 2642,
											"name": "tag",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 2604,
											"end": 2642,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2594,
											"end": 2642,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2594,
											"end": 2642,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2388,
											"end": 2648,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2388,
											"end": 2648,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2388,
											"end": 2648,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2388,
											"end": 2648,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2388,
											"end": 2648,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2388,
											"end": 2648,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2653,
											"end": 2837,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 2653,
											"end": 2837,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2705,
											"end": 2782,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2702,
											"end": 2703,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2695,
											"end": 2783,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2802,
											"end": 2806,
											"name": "PUSH",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 2799,
											"end": 2800,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2792,
											"end": 2807,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2826,
											"end": 2830,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2823,
											"end": 2824,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2816,
											"end": 2831,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2842,
											"end": 2970,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 2842,
											"end": 2970,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2909,
											"end": 2918,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2909,
											"end": 2918,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2909,
											"end": 2918,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2930,
											"end": 2941,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2930,
											"end": 2941,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2930,
											"end": 2941,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2927,
											"end": 2964,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2927,
											"end": 2964,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2927,
											"end": 2964,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2944,
											"end": 2962,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2944,
											"end": 2962,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 2944,
											"end": 2962,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2975,
											"end": 3100,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 2975,
											"end": 3100,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3040,
											"end": 3049,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3040,
											"end": 3049,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3040,
											"end": 3049,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3061,
											"end": 3071,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3061,
											"end": 3071,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3061,
											"end": 3071,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 3058,
											"end": 3094,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3058,
											"end": 3094,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 3058,
											"end": 3094,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3074,
											"end": 3092,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 3074,
											"end": 3092,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 3074,
											"end": 3092,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"contracts/interfaces/IERC20.sol",
								"contracts/mockups/MockERC20.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"setBalance(address,uint256)": "e30443bc",
							"setDecimals(uint8)": "7a1395aa",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"name\":\"setBalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"dec\",\"type\":\"uint8\"}],\"name\":\"setDecimals\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"OPTIONAL Returns the amount of decimals supported by the token\"},\"name()\":{\"details\":\"OPTIONAL Returns the name of the token\"},\"symbol()\":{\"details\":\"OPTIONAL Returns the symbol of the token\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/mockups/MockERC20.sol\":\"MockERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xccd9915623686bcd46147899b0bc62d959391bc3eb2e3435cf54ad05ed61fed0\",\"license\":\"BSD-3-Clause\",\"urls\":[\"bzz-raw://ca2c50334eb9c3124fb6fb571a59b1ae3b6abb4c71ccae22998517a1cf3749f5\",\"dweb:/ipfs/Qmbf4MNFGN5dD1qKdSnwYG3ekCAK15quzvuZpn8c4uDY7e\"]},\"contracts/mockups/MockERC20.sol\":{\"keccak256\":\"0xbbddc5026fed56386e22cf79bbf70b14d21180d9b03a2eb000311bb71317d517\",\"license\":\"BSD-3-Clause\",\"urls\":[\"bzz-raw://a2e504751d1f72c06181c66d763f4e5f3b9da2180f01931f9a1d34730c5674b9\",\"dweb:/ipfs/QmYTRWh6VtYf6vEznC7PJw1a5UKtDnXGiy3tDmXTEnSyY5\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 103,
								"contract": "contracts/mockups/MockERC20.sol:MockERC20",
								"label": "balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 106,
								"contract": "contracts/mockups/MockERC20.sol:MockERC20",
								"label": "_decimals",
								"offset": 0,
								"slot": "1",
								"type": "t_uint8"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> contracts/mockups/MockERC20.sol:62:9:\n   |\n62 |         address owner,\n   |         ^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 1832,
					"file": "contracts/mockups/MockERC20.sol",
					"start": 1819
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> contracts/mockups/MockERC20.sol:63:9:\n   |\n63 |         address spender\n   |         ^^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 1858,
					"file": "contracts/mockups/MockERC20.sol",
					"start": 1843
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> contracts/mockups/MockERC20.sol:69:9:\n   |\n69 |         address spender,\n   |         ^^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 1984,
					"file": "contracts/mockups/MockERC20.sol",
					"start": 1969
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> contracts/mockups/MockERC20.sol:70:9:\n   |\n70 |         uint256 value\n   |         ^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 2008,
					"file": "contracts/mockups/MockERC20.sol",
					"start": 1995
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							94
						]
					},
					"id": 95,
					"license": "BSD-3-Clause",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".22"
							],
							"nodeType": "PragmaDirective",
							"src": "785:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 94,
							"linearizedBaseContracts": [
								94
							],
							"name": "IERC20",
							"nameLocation": "823:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 2,
										"nodeType": "StructuredDocumentation",
										"src": "837:163:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 10,
									"name": "Transfer",
									"nameLocation": "1012:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1037:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 10,
												"src": "1021:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1021:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 6,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1059:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 10,
												"src": "1043:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 5,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1043:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 8,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1071:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 10,
												"src": "1063:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 7,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1063:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1020:57:0"
									},
									"src": "1006:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 11,
										"nodeType": "StructuredDocumentation",
										"src": "1086:151:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 19,
									"name": "Approval",
									"nameLocation": "1249:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 13,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1274:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "1258:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 12,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1258:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 15,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1297:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "1281:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 14,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1281:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 17,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1314:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "1306:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 16,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1306:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1257:63:0"
									},
									"src": "1243:78:0"
								},
								{
									"documentation": {
										"id": 20,
										"nodeType": "StructuredDocumentation",
										"src": "1331:64:0",
										"text": " @dev OPTIONAL Returns the name of the token"
									},
									"functionSelector": "06fdde03",
									"id": 25,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1410:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1414:2:0"
									},
									"returnParameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "1440:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 22,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1440:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1439:15:0"
									},
									"scope": 94,
									"src": "1401:54:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 26,
										"nodeType": "StructuredDocumentation",
										"src": "1463:66:0",
										"text": " @dev OPTIONAL Returns the symbol of the token"
									},
									"functionSelector": "95d89b41",
									"id": 31,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1544:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1550:2:0"
									},
									"returnParameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "1576:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 28,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1576:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1575:15:0"
									},
									"scope": 94,
									"src": "1535:56:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "1599:88:0",
										"text": " @dev OPTIONAL Returns the amount of decimals supported by the token"
									},
									"functionSelector": "313ce567",
									"id": 37,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "1702:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1710:2:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 37,
												"src": "1736:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 34,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1736:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1735:7:0"
									},
									"scope": 94,
									"src": "1693:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 38,
										"nodeType": "StructuredDocumentation",
										"src": "1751:67:0",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 43,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "1833:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1844:2:0"
									},
									"returnParameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 41,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 43,
												"src": "1870:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 40,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1870:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1869:9:0"
									},
									"scope": 94,
									"src": "1824:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 44,
										"nodeType": "StructuredDocumentation",
										"src": "1887:73:0",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 51,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1975:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1993:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "1985:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 45,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1985:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1984:17:0"
									},
									"returnParameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "2025:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 48,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:9:0"
									},
									"scope": 94,
									"src": "1966:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 52,
										"nodeType": "StructuredDocumentation",
										"src": "2042:219:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 61,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "2276:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 54,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2293:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "2285:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 53,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2285:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2305:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "2297:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 55,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2297:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2284:27:0"
									},
									"returnParameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "2330:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 58,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2330:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2329:6:0"
									},
									"scope": 94,
									"src": "2267:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 62,
										"nodeType": "StructuredDocumentation",
										"src": "2344:270:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 71,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "2629:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2647:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "2639:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2639:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 66,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2662:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "2654:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 65,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2654:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2638:32:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "2694:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 68,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2694:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2693:9:0"
									},
									"scope": 94,
									"src": "2620:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 72,
										"nodeType": "StructuredDocumentation",
										"src": "2711:681:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 81,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3407:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3423:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "3415:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3415:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3440:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "3432:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3432:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3414:32:0"
									},
									"returnParameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "3465:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 78,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3465:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3464:6:0"
									},
									"scope": 94,
									"src": "3398:73:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 82,
										"nodeType": "StructuredDocumentation",
										"src": "3479:305:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 93,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3799:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 84,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3820:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "3812:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 83,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3812:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3834:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "3826:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3826:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 88,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3846:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "3838:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 87,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3838:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3811:41:0"
									},
									"returnParameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "3871:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 90,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3871:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3870:6:0"
									},
									"scope": 94,
									"src": "3790:87:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 95,
							"src": "813:3067:0",
							"usedErrors": [],
							"usedEvents": [
								10,
								19
							]
						}
					],
					"src": "785:3095:0"
				},
				"id": 0
			},
			"contracts/mockups/MockERC20.sol": {
				"ast": {
					"absolutePath": "contracts/mockups/MockERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							94
						],
						"MockERC20": [
							279
						]
					},
					"id": 280,
					"license": "BSD-3-Clause",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 96,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".22"
							],
							"nodeType": "PragmaDirective",
							"src": "597:24:1"
						},
						{
							"absolutePath": "contracts/interfaces/IERC20.sol",
							"file": "../interfaces/IERC20.sol",
							"id": 97,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 280,
							"sourceUnit": 95,
							"src": "623:34:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 98,
										"name": "IERC20",
										"nameLocations": [
											"683:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 94,
										"src": "683:6:1"
									},
									"id": 99,
									"nodeType": "InheritanceSpecifier",
									"src": "683:6:1"
								}
							],
							"canonicalName": "MockERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 279,
							"linearizedBaseContracts": [
								279,
								94
							],
							"name": "MockERC20",
							"nameLocation": "670:9:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 103,
									"mutability": "mutable",
									"name": "balances",
									"nameLocation": "725:8:1",
									"nodeType": "VariableDeclaration",
									"scope": 279,
									"src": "697:36:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 102,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 100,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "705:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "697:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 101,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "716:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 106,
									"mutability": "mutable",
									"name": "_decimals",
									"nameLocation": "754:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 279,
									"src": "740:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 104,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "740:5:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3138",
										"id": 105,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "766:2:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_18_by_1",
											"typeString": "int_const 18"
										},
										"value": "18"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 119,
										"nodeType": "Block",
										"src": "837:43:1",
										"statements": [
											{
												"expression": {
													"id": 117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 113,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 103,
															"src": "848:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 115,
														"indexExpression": {
															"id": 114,
															"name": "addr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 108,
															"src": "857:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "848:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 116,
														"name": "balance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 110,
														"src": "865:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "848:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 118,
												"nodeType": "ExpressionStatement",
												"src": "848:24:1"
											}
										]
									},
									"functionSelector": "e30443bc",
									"id": 120,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setBalance",
									"nameLocation": "786:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 108,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "805:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "797:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 107,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "797:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "819:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "811:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 109,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "811:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "796:31:1"
									},
									"returnParameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "837:0:1"
									},
									"scope": 279,
									"src": "777:103:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										51
									],
									"body": {
										"id": 131,
										"nodeType": "Block",
										"src": "956:43:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 127,
														"name": "balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "974:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 129,
													"indexExpression": {
														"id": 128,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 122,
														"src": "983:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "974:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 126,
												"id": 130,
												"nodeType": "Return",
												"src": "967:24:1"
											}
										]
									},
									"functionSelector": "70a08231",
									"id": 132,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "897:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "915:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "907:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 121,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "907:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "906:17:1"
									},
									"returnParameters": {
										"id": 126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 125,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "947:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 124,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "947:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "946:9:1"
									},
									"scope": 279,
									"src": "888:111:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										25
									],
									"body": {
										"id": 140,
										"nodeType": "Block",
										"src": "1070:37:1",
										"statements": [
											{
												"expression": {
													"hexValue": "4d6f636b4552433230",
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1088:11:1",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_a04369c50c2c5be35c20e48473e254bd44922e8118d2ce4916ec0bf1f27c1a5d",
														"typeString": "literal_string \"MockERC20\""
													},
													"value": "MockERC20"
												},
												"functionReturnParameters": 137,
												"id": 139,
												"nodeType": "Return",
												"src": "1081:18:1"
											}
										]
									},
									"functionSelector": "06fdde03",
									"id": 141,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1016:4:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 134,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1037:8:1"
									},
									"parameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1020:2:1"
									},
									"returnParameters": {
										"id": 137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "1055:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 135,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1055:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1054:15:1"
									},
									"scope": 279,
									"src": "1007:100:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										31
									],
									"body": {
										"id": 149,
										"nodeType": "Block",
										"src": "1180:36:1",
										"statements": [
											{
												"expression": {
													"hexValue": "4d434b4552433230",
													"id": 147,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1198:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_476a5586c1ee98137161f9050dbf5266d26303472694cb4cb8dfadfa870a111b",
														"typeString": "literal_string \"MCKERC20\""
													},
													"value": "MCKERC20"
												},
												"functionReturnParameters": 146,
												"id": 148,
												"nodeType": "Return",
												"src": "1191:17:1"
											}
										]
									},
									"functionSelector": "95d89b41",
									"id": 150,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1124:6:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 143,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1147:8:1"
									},
									"parameters": {
										"id": 142,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1130:2:1"
									},
									"returnParameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "1165:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 144,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1165:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1164:15:1"
									},
									"scope": 279,
									"src": "1115:101:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										37
									],
									"body": {
										"id": 158,
										"nodeType": "Block",
										"src": "1283:35:1",
										"statements": [
											{
												"expression": {
													"id": 156,
													"name": "_decimals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 106,
													"src": "1301:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 155,
												"id": 157,
												"nodeType": "Return",
												"src": "1294:16:1"
											}
										]
									},
									"functionSelector": "313ce567",
									"id": 159,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "1233:8:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 152,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1258:8:1"
									},
									"parameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1241:2:1"
									},
									"returnParameters": {
										"id": 155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 154,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "1276:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 153,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1276:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1275:7:1"
									},
									"scope": 279,
									"src": "1224:94:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 168,
										"nodeType": "Block",
										"src": "1367:34:1",
										"statements": [
											{
												"expression": {
													"id": 166,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 164,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 106,
														"src": "1378:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 165,
														"name": "dec",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 161,
														"src": "1390:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "1378:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 167,
												"nodeType": "ExpressionStatement",
												"src": "1378:15:1"
											}
										]
									},
									"functionSelector": "7a1395aa",
									"id": 169,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setDecimals",
									"nameLocation": "1335:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "dec",
												"nameLocation": "1353:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1347:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 160,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1347:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1346:11:1"
									},
									"returnParameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1367:0:1"
									},
									"scope": 279,
									"src": "1326:75:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										43
									],
									"body": {
										"id": 181,
										"nodeType": "Block",
										"src": "1473:43:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 177,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1496:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 176,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1496:7:1",
																	"typeDescriptions": {}
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																}
															],
															"id": 175,
															"name": "type",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967269,
															"src": "1491:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 178,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1491:13:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_magic_meta_type_t_uint256",
															"typeString": "type(uint256)"
														}
													},
													"id": 179,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "1505:3:1",
													"memberName": "max",
													"nodeType": "MemberAccess",
													"src": "1491:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 174,
												"id": 180,
												"nodeType": "Return",
												"src": "1484:24:1"
											}
										]
									},
									"functionSelector": "18160ddd",
									"id": 182,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "1418:11:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 171,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1446:8:1"
									},
									"parameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1429:2:1"
									},
									"returnParameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "1464:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1464:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1463:9:1"
									},
									"scope": 279,
									"src": "1409:107:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										61
									],
									"body": {
										"id": 216,
										"nodeType": "Block",
										"src": "1627:155:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 198,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 193,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 103,
																	"src": "1646:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 196,
																"indexExpression": {
																	"expression": {
																		"id": 194,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1655:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 195,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1659:6:1",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1655:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1646:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 197,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 186,
																"src": "1670:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1646:29:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 192,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1638:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1638:38:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 200,
												"nodeType": "ExpressionStatement",
												"src": "1638:38:1"
											},
											{
												"expression": {
													"id": 206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 201,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 103,
															"src": "1689:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 204,
														"indexExpression": {
															"expression": {
																"id": 202,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1698:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 203,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1702:6:1",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1698:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1689:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 205,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 186,
														"src": "1713:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1689:29:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 207,
												"nodeType": "ExpressionStatement",
												"src": "1689:29:1"
											},
											{
												"expression": {
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 208,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 103,
															"src": "1729:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 210,
														"indexExpression": {
															"id": 209,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 184,
															"src": "1738:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1729:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 211,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 186,
														"src": "1745:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1729:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 213,
												"nodeType": "ExpressionStatement",
												"src": "1729:21:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 214,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1770:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 191,
												"id": 215,
												"nodeType": "Return",
												"src": "1763:11:1"
											}
										]
									},
									"functionSelector": "a9059cbb",
									"id": 217,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1533:8:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 188,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1603:8:1"
									},
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1560:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "1552:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 183,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1552:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1581:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "1573:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 185,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1573:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1541:52:1"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "1621:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 189,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1621:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:6:1"
									},
									"scope": 279,
									"src": "1524:258:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										71
									],
									"body": {
										"id": 229,
										"nodeType": "Block",
										"src": "1907:27:1",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 227,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1925:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 226,
												"id": 228,
												"nodeType": "Return",
												"src": "1918:8:1"
											}
										]
									},
									"functionSelector": "dd62ed3e",
									"id": 230,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1799:9:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 223,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1880:8:1"
									},
									"parameters": {
										"id": 222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1827:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "1819:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1819:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1851:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "1843:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 220,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1843:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1808:57:1"
									},
									"returnParameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "1898:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 224,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1898:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1897:9:1"
									},
									"scope": 279,
									"src": "1790:144:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										81
									],
									"body": {
										"id": 242,
										"nodeType": "Block",
										"src": "2054:30:1",
										"statements": [
											{
												"expression": {
													"hexValue": "74727565",
													"id": 240,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2072:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 239,
												"id": 241,
												"nodeType": "Return",
												"src": "2065:11:1"
											}
										]
									},
									"functionSelector": "095ea7b3",
									"id": 243,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "1951:7:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 236,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2030:8:1"
									},
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1977:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "1969:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 231,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1969:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2003:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "1995:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 233,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1995:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1958:57:1"
									},
									"returnParameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "2048:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 237,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2048:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2047:6:1"
									},
									"scope": 279,
									"src": "1942:142:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										93
									],
									"body": {
										"id": 277,
										"nodeType": "Block",
										"src": "2222:143:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 260,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 256,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 103,
																	"src": "2241:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 258,
																"indexExpression": {
																	"id": 257,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 245,
																	"src": "2250:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2241:14:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 259,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 249,
																"src": "2259:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2241:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 255,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2233:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 261,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2233:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 262,
												"nodeType": "ExpressionStatement",
												"src": "2233:32:1"
											},
											{
												"expression": {
													"id": 267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 263,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 103,
															"src": "2278:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 265,
														"indexExpression": {
															"id": 264,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 245,
															"src": "2287:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2278:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 266,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 249,
														"src": "2296:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2278:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 268,
												"nodeType": "ExpressionStatement",
												"src": "2278:23:1"
											},
											{
												"expression": {
													"id": 273,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 269,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 103,
															"src": "2312:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 271,
														"indexExpression": {
															"id": 270,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 247,
															"src": "2321:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2312:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 272,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 249,
														"src": "2328:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2312:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 274,
												"nodeType": "ExpressionStatement",
												"src": "2312:21:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 275,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2353:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 254,
												"id": 276,
												"nodeType": "Return",
												"src": "2346:11:1"
											}
										]
									},
									"functionSelector": "23b872dd",
									"id": 278,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2101:12:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 251,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2198:8:1"
									},
									"parameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2132:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "2124:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 244,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2124:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2155:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "2147:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 246,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2147:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2176:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "2168:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 248,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2168:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2113:75:1"
									},
									"returnParameters": {
										"id": 254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 253,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "2216:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 252,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2216:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2215:6:1"
									},
									"scope": 279,
									"src": "2092:273:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 280,
							"src": "661:1707:1",
							"usedErrors": [],
							"usedEvents": [
								10,
								19
							]
						}
					],
					"src": "597:1771:1"
				},
				"id": 1
			}
		}
	}
}