{
	"id": "98c5c9f3546c6141cc1ce79641a539f9",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/DexhuneRoot.sol": {
				"content": "// SPDX-License-Identifier: BSD-3-Clause\r\n/// @title Dexhune Owner and Management Logic\r\n/*\r\n*    ........................................................\r\n*    .%%%%%...%%%%%%..%%..%%..%%..%%..%%..%%..%%..%%..%%%%%%.\r\n*    .%%..%%..%%.......%%%%...%%..%%..%%..%%..%%%.%%..%%.....\r\n*    .%%..%%..%%%%......%%....%%%%%%..%%..%%..%%.%%%..%%%%...\r\n*    .%%..%%..%%.......%%%%...%%..%%..%%..%%..%%..%%..%%.....\r\n*    .%%%%%...%%%%%%..%%..%%..%%..%%...%%%%...%%..%%..%%%%%%.\r\n*    ........................................................\r\n*/\r\n\r\npragma solidity >=0.4.22 <0.9.0;\r\nimport \"./DexhuneBase.sol\";\r\n\r\ncontract DexhuneConfig {\r\n    //  30 seconds or 15 blocks, but in the testnet version we'll do 5 minutes\r\n    uint256 internal constant MAXIMUM_VOTES_PER_PROPOSAL = 1000;\r\n    uint256 internal constant BLOCKS_PER_SECOND = 2;\r\n    /// @dev Total proposal duration in seconds\r\n    uint256 internal constant PROPOSAL_DURATION = 300; // 15 blocks per 30 seconds\r\n    uint256 internal constant PROPOSAL_BLOCKS = BLOCKS_PER_SECOND * PROPOSAL_DURATION;\r\n\r\n    bool public transferCooldown = true;\r\n    uint public cooldownTimeout = BLOCKS_PER_SECOND * 60;\r\n}\r\n\r\nabstract contract DexhuneRoot is DexhuneConfig {\r\n    address public owner;\r\n    address[] nftCollections;\r\n\r\n    constructor() {\r\n        owner = msg.sender;\r\n        nftCollections = new address[](0);\r\n    }\r\n    \r\n    function ensureOwnership() private view {\r\n        require(msg.sender == owner, \"This method can only be called by the owner of this smart contract\");\r\n    }\r\n\r\n    function transferOwnership(address _address) public {\r\n        ensureOwnership();\r\n\r\n        address oldAddress = owner;\r\n        owner = _address;\r\n        emit transferredOwnership(oldAddress, owner);\r\n    }\r\n\r\n    function addNFTCollection(address _contractAddress) public {\r\n        ensureOwnership();\r\n        require(_contractAddress != address(0), \"An NFT collection cannot have an empty address\");\r\n\r\n        uint index = nftCollections.length;\r\n        nftCollections.push(_contractAddress);\r\n        emit addedNFTCollection(index, _contractAddress);\r\n    }\r\n\r\n    \r\n    function removeNFTCollection(uint256 _index) public {\r\n        ensureOwnership();\r\n        \r\n        require(_index >= 0 && _index < nftCollections.length, \"The requested NFT collection does not exist\");\r\n\r\n        address addr = nftCollections[_index];\r\n        \r\n        // https://ethereum.stackexchange.com/a/59234\r\n        nftCollections[_index] = nftCollections[nftCollections.length - 1];\r\n        nftCollections.pop();\r\n        \r\n        emit removedNFTCollection(_index, addr);\r\n    }\r\n\r\n    function setTransferTimeout(bool _enabled) public {\r\n        ensureOwnership();\r\n        transferCooldown = _enabled;\r\n    }\r\n\r\n    function setCooldownTimeout(uint _timeout) public {\r\n        ensureOwnership();\r\n\r\n        cooldownTimeout = _timeout;\r\n    }\r\n\r\n\r\n    /// @notice Ownership of Dexhune has been transferred\r\n    /// @dev Transfers ownership of the contract to another address\r\n    /// @param from Address of the previous owner\r\n    /// @param to Address of the new owner\r\n    event transferredOwnership(address from, address to);\r\n\r\n    /// @notice An NFT collection has been added\r\n    /// @dev Adds an NFT collection\r\n    /// @param id Id of the collection\r\n    event addedNFTCollection(uint256 id, address collectionAddress);\r\n\r\n    /// @notice An NFT collection has been removed\r\n    /// @dev Removes an NFT collection\r\n    /// @param id Id of the collection\r\n    event removedNFTCollection(uint256 id, address collectionAddress);\r\n}"
			},
			"contracts/DexhuneBase.sol": {
				"content": "// SPDX-License-Identifier: BSD-3-Clause\r\n/// @title Dexhune Events and Interfaces\r\n/*\r\n*    ........................................................\r\n*    .%%%%%...%%%%%%..%%..%%..%%..%%..%%..%%..%%..%%..%%%%%%.\r\n*    .%%..%%..%%.......%%%%...%%..%%..%%..%%..%%%.%%..%%.....\r\n*    .%%..%%..%%%%......%%....%%%%%%..%%..%%..%%.%%%..%%%%...\r\n*    .%%..%%..%%.......%%%%...%%..%%..%%..%%..%%..%%..%%.....\r\n*    .%%%%%...%%%%%%..%%..%%..%%..%%...%%%%...%%..%%..%%%%%%.\r\n*    ........................................................\r\n*/\r\n\r\npragma solidity >=0.4.22 <0.9.0;\r\n\r\ncontract DexhuneBase {    \r\n     struct PriceProposal {\r\n        uint256 id;\r\n        string description;\r\n        uint deadline;\r\n        uint256 votesUp;\r\n        uint256 votesDown;\r\n        uint256 value;\r\n        mapping(address => int8) votes;\r\n        bool finalized;\r\n    }\r\n\r\n    struct Account {\r\n        address addr;\r\n        uint256 balance;\r\n        address[] nfts;\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/DexhuneBase.sol": {
				"DexhuneBase": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/DexhuneBase.sol\":571:959  contract DexhuneBase {    ... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/DexhuneBase.sol\":571:959  contract DexhuneBase {    ... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212206caa11e1099550a25a33ac1e643d56405fd9aa99312a935c62363e5681f33ca364736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea26469706673582212206caa11e1099550a25a33ac1e643d56405fd9aa99312a935c62363e5681f33ca364736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH13 0xAA11E1099550A25A33AC1E643D JUMP BLOCKHASH 0x5F 0xD9 0xAA SWAP10 BALANCE 0x2A SWAP4 0x5C PUSH3 0x363E56 DUP2 RETURN EXTCODECOPY LOG3 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "571:388:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea26469706673582212206caa11e1099550a25a33ac1e643d56405fd9aa99312a935c62363e5681f33ca364736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH13 0xAA11E1099550A25A33AC1E643D JUMP BLOCKHASH 0x5F 0xD9 0xAA SWAP10 BALANCE 0x2A SWAP4 0x5C PUSH3 0x363E56 DUP2 RETURN EXTCODECOPY LOG3 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "571:388:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 571,
									"end": 959,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 571,
									"end": 959,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 571,
									"end": 959,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 571,
									"end": 959,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 571,
									"end": 959,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 571,
									"end": 959,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 571,
									"end": 959,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 571,
									"end": 959,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 571,
									"end": 959,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 571,
									"end": 959,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 571,
									"end": 959,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 571,
									"end": 959,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 571,
									"end": 959,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 571,
									"end": 959,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 571,
									"end": 959,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 571,
									"end": 959,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 571,
									"end": 959,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 571,
									"end": 959,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 571,
									"end": 959,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 571,
									"end": 959,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 571,
									"end": 959,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206caa11e1099550a25a33ac1e643d56405fd9aa99312a935c62363e5681f33ca364736f6c63430008120033",
									".code": [
										{
											"begin": 571,
											"end": 959,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 571,
											"end": 959,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 571,
											"end": 959,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 571,
											"end": 959,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 571,
											"end": 959,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 571,
											"end": 959,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"contracts/DexhuneBase.sol",
								"contracts/DexhuneRoot.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DexhuneBase.sol\":\"DexhuneBase\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/DexhuneBase.sol\":{\"keccak256\":\"0x787845030bdec105b35d758918e69bf4b37dac9086fb8b8538ec9e085a840780\",\"license\":\"BSD-3-Clause\",\"urls\":[\"bzz-raw://d7997e80a720dcb31a750c3d7cf6652452d01b9a23b03fbef05234ec3c4a7ebe\",\"dweb:/ipfs/QmajW3QhELKZNNvpDdbwKiFhBpKvk57PkX97A7r5CCG8Z4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/DexhuneRoot.sol": {
				"DexhuneConfig": {
					"abi": [
						{
							"inputs": [],
							"name": "cooldownTimeout",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "transferCooldown",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"PROPOSAL_DURATION": {
								"details": "Total proposal duration in seconds"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/DexhuneRoot.sol\":605:1156  contract DexhuneConfig {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/DexhuneRoot.sol\":1089:1093  true */\n  0x01\n    /* \"contracts/DexhuneRoot.sol\":1058:1093  bool public transferCooldown = true */\n  0x00\n  dup1\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/DexhuneRoot.sol\":1150:1152  60 */\n  0x3c\n    /* \"contracts/DexhuneRoot.sol\":827:828  2 */\n  0x02\n    /* \"contracts/DexhuneRoot.sol\":1130:1152  BLOCKS_PER_SECOND * 60 */\n  tag_1\n  swap2\n  swap1\n  tag_2\n  jump\t// in\ntag_1:\n    /* \"contracts/DexhuneRoot.sol\":1100:1152  uint public cooldownTimeout = BLOCKS_PER_SECOND * 60 */\n  0x01\n  sstore\n    /* \"contracts/DexhuneRoot.sol\":605:1156  contract DexhuneConfig {... */\n  callvalue\n  dup1\n  iszero\n  tag_3\n  jumpi\n  0x00\n  dup1\n  revert\ntag_3:\n  pop\n  jump(tag_4)\n    /* \"#utility.yul\":7:84   */\ntag_5:\n    /* \"#utility.yul\":44:51   */\n  0x00\n    /* \"#utility.yul\":73:78   */\n  dup2\n    /* \"#utility.yul\":62:78   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:84   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":90:270   */\ntag_6:\n    /* \"#utility.yul\":138:215   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":135:136   */\n  0x00\n    /* \"#utility.yul\":128:216   */\n  mstore\n    /* \"#utility.yul\":235:239   */\n  0x11\n    /* \"#utility.yul\":232:233   */\n  0x04\n    /* \"#utility.yul\":225:240   */\n  mstore\n    /* \"#utility.yul\":259:263   */\n  0x24\n    /* \"#utility.yul\":256:257   */\n  0x00\n    /* \"#utility.yul\":249:264   */\n  revert\n    /* \"#utility.yul\":276:686   */\ntag_2:\n    /* \"#utility.yul\":316:323   */\n  0x00\n    /* \"#utility.yul\":339:359   */\n  tag_11\n    /* \"#utility.yul\":357:358   */\n  dup3\n    /* \"#utility.yul\":339:359   */\n  tag_5\n  jump\t// in\ntag_11:\n    /* \"#utility.yul\":334:359   */\n  swap2\n  pop\n    /* \"#utility.yul\":373:393   */\n  tag_12\n    /* \"#utility.yul\":391:392   */\n  dup4\n    /* \"#utility.yul\":373:393   */\n  tag_5\n  jump\t// in\ntag_12:\n    /* \"#utility.yul\":368:393   */\n  swap3\n  pop\n    /* \"#utility.yul\":428:429   */\n  dup3\n    /* \"#utility.yul\":425:426   */\n  dup3\n    /* \"#utility.yul\":421:430   */\n  mul\n    /* \"#utility.yul\":450:480   */\n  tag_13\n    /* \"#utility.yul\":468:479   */\n  dup2\n    /* \"#utility.yul\":450:480   */\n  tag_5\n  jump\t// in\ntag_13:\n    /* \"#utility.yul\":439:480   */\n  swap2\n  pop\n    /* \"#utility.yul\":629:630   */\n  dup3\n    /* \"#utility.yul\":620:627   */\n  dup3\n    /* \"#utility.yul\":616:631   */\n  div\n    /* \"#utility.yul\":613:614   */\n  dup5\n    /* \"#utility.yul\":610:632   */\n  eq\n    /* \"#utility.yul\":590:591   */\n  dup4\n    /* \"#utility.yul\":583:592   */\n  iszero\n    /* \"#utility.yul\":563:646   */\n  or\n    /* \"#utility.yul\":540:679   */\n  tag_14\n  jumpi\n    /* \"#utility.yul\":659:677   */\n  tag_15\n  tag_6\n  jump\t// in\ntag_15:\n    /* \"#utility.yul\":540:679   */\ntag_14:\n    /* \"#utility.yul\":324:686   */\n  pop\n    /* \"#utility.yul\":276:686   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/DexhuneRoot.sol\":605:1156  contract DexhuneConfig {... */\ntag_4:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/DexhuneRoot.sol\":605:1156  contract DexhuneConfig {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x68f16293\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xbbf79246\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/DexhuneRoot.sol\":1058:1093  bool public transferCooldown = true */\n    tag_3:\n      tag_5\n      tag_6\n      jump\t// in\n    tag_5:\n      mload(0x40)\n      tag_7\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_7:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/DexhuneRoot.sol\":1100:1152  uint public cooldownTimeout = BLOCKS_PER_SECOND * 60 */\n    tag_4:\n      tag_9\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      tag_11\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/DexhuneRoot.sol\":1058:1093  bool public transferCooldown = true */\n    tag_6:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/DexhuneRoot.sol\":1100:1152  uint public cooldownTimeout = BLOCKS_PER_SECOND * 60 */\n    tag_10:\n      sload(0x01)\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":7:97   */\n    tag_13:\n        /* \"#utility.yul\":41:48   */\n      0x00\n        /* \"#utility.yul\":84:89   */\n      dup2\n        /* \"#utility.yul\":77:90   */\n      iszero\n        /* \"#utility.yul\":70:91   */\n      iszero\n        /* \"#utility.yul\":59:91   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:97   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":103:212   */\n    tag_14:\n        /* \"#utility.yul\":184:205   */\n      tag_20\n        /* \"#utility.yul\":199:204   */\n      dup2\n        /* \"#utility.yul\":184:205   */\n      tag_13\n      jump\t// in\n    tag_20:\n        /* \"#utility.yul\":179:182   */\n      dup3\n        /* \"#utility.yul\":172:206   */\n      mstore\n        /* \"#utility.yul\":103:212   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":218:428   */\n    tag_8:\n        /* \"#utility.yul\":305:309   */\n      0x00\n        /* \"#utility.yul\":343:345   */\n      0x20\n        /* \"#utility.yul\":332:341   */\n      dup3\n        /* \"#utility.yul\":328:346   */\n      add\n        /* \"#utility.yul\":320:346   */\n      swap1\n      pop\n        /* \"#utility.yul\":356:421   */\n      tag_22\n        /* \"#utility.yul\":418:419   */\n      0x00\n        /* \"#utility.yul\":407:416   */\n      dup4\n        /* \"#utility.yul\":403:420   */\n      add\n        /* \"#utility.yul\":394:400   */\n      dup5\n        /* \"#utility.yul\":356:421   */\n      tag_14\n      jump\t// in\n    tag_22:\n        /* \"#utility.yul\":218:428   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":434:511   */\n    tag_15:\n        /* \"#utility.yul\":471:478   */\n      0x00\n        /* \"#utility.yul\":500:505   */\n      dup2\n        /* \"#utility.yul\":489:505   */\n      swap1\n      pop\n        /* \"#utility.yul\":434:511   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":517:635   */\n    tag_16:\n        /* \"#utility.yul\":604:628   */\n      tag_25\n        /* \"#utility.yul\":622:627   */\n      dup2\n        /* \"#utility.yul\":604:628   */\n      tag_15\n      jump\t// in\n    tag_25:\n        /* \"#utility.yul\":599:602   */\n      dup3\n        /* \"#utility.yul\":592:629   */\n      mstore\n        /* \"#utility.yul\":517:635   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":641:863   */\n    tag_12:\n        /* \"#utility.yul\":734:738   */\n      0x00\n        /* \"#utility.yul\":772:774   */\n      0x20\n        /* \"#utility.yul\":761:770   */\n      dup3\n        /* \"#utility.yul\":757:775   */\n      add\n        /* \"#utility.yul\":749:775   */\n      swap1\n      pop\n        /* \"#utility.yul\":785:856   */\n      tag_27\n        /* \"#utility.yul\":853:854   */\n      0x00\n        /* \"#utility.yul\":842:851   */\n      dup4\n        /* \"#utility.yul\":838:855   */\n      add\n        /* \"#utility.yul\":829:835   */\n      dup5\n        /* \"#utility.yul\":785:856   */\n      tag_16\n      jump\t// in\n    tag_27:\n        /* \"#utility.yul\":641:863   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220fab9433932a4248388a4a06e6fc813733271d1cfec69354c494f94d6d6eee18c64736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"checked_mul_t_uint256": {
									"entryPoint": 122,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 65,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 75,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:689:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:32:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:16:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "73:5:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:2",
														"type": ""
													}
												],
												"src": "7:77:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "118:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "135:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "138:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "128:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "128:88:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "128:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "232:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "235:4:2",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "225:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "225:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "225:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "256:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "259:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "249:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "249:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "249:15:2"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "90:180:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "324:362:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "334:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "357:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "339:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "339:20:2"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "334:1:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "368:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "391:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "373:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "373:20:2"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "368:1:2"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "402:28:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "425:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "428:1:2"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "421:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "421:9:2"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nodeType": "YulTypedName",
																	"src": "406:11:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "439:41:2",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nodeType": "YulIdentifier",
																		"src": "468:11:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "450:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "450:30:2"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "439:7:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "657:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "659:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "659:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "659:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "590:1:2"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "583:6:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "583:9:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "613:1:2"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "620:7:2"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "629:1:2"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "616:3:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "616:15:2"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "610:2:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "610:22:2"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "563:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "563:83:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "543:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "543:113:2"
															},
															"nodeType": "YulIf",
															"src": "540:139:2"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "307:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "310:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "316:7:2",
														"type": ""
													}
												],
												"src": "276:410:2"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405260016000806101000a81548160ff021916908315150217905550603c600261002c919061007a565b60015534801561003b57600080fd5b506100bc565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061008582610041565b915061009083610041565b925082820261009e81610041565b915082820484148315176100b5576100b461004b565b5b5092915050565b61011a806100cb6000396000f3fe6080604052348015600f57600080fd5b506004361060325760003560e01c806368f16293146037578063bbf79246146051575b600080fd5b603d606b565b60405160489190609b565b60405180910390f35b6057607c565b6040516062919060cb565b60405180910390f35b60008054906101000a900460ff1681565b60015481565b60008115159050919050565b6095816082565b82525050565b600060208201905060ae6000830184608e565b92915050565b6000819050919050565b60c58160b4565b82525050565b600060208201905060de600083018460be565b9291505056fea2646970667358221220fab9433932a4248388a4a06e6fc813733271d1cfec69354c494f94d6d6eee18c64736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x3C PUSH1 0x2 PUSH2 0x2C SWAP2 SWAP1 PUSH2 0x7A JUMP JUMPDEST PUSH1 0x1 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x3B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xBC JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x85 DUP3 PUSH2 0x41 JUMP JUMPDEST SWAP2 POP PUSH2 0x90 DUP4 PUSH2 0x41 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x9E DUP2 PUSH2 0x41 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xB5 JUMPI PUSH2 0xB4 PUSH2 0x4B JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x11A DUP1 PUSH2 0xCB PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x32 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x68F16293 EQ PUSH1 0x37 JUMPI DUP1 PUSH4 0xBBF79246 EQ PUSH1 0x51 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3D PUSH1 0x6B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x48 SWAP2 SWAP1 PUSH1 0x9B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x57 PUSH1 0x7C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x62 SWAP2 SWAP1 PUSH1 0xCB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x95 DUP2 PUSH1 0x82 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0xAE PUSH1 0x0 DUP4 ADD DUP5 PUSH1 0x8E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xC5 DUP2 PUSH1 0xB4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0xDE PUSH1 0x0 DUP4 ADD DUP5 PUSH1 0xBE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STATICCALL 0xB9 NUMBER CODECOPY ORIGIN LOG4 0x24 DUP4 DUP9 LOG4 LOG0 PUSH15 0x6FC813733271D1CFEC69354C494F94 0xD6 0xD6 0xEE 0xE1 DUP13 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "605:551:1:-:0;;;1089:4;1058:35;;;;;;;;;;;;;;;;;;;;1150:2;827:1;1130:22;;;;:::i;:::-;1100:52;;605:551;;;;;;;;;;;;7:77:2;44:7;73:5;62:16;;7:77;;;:::o;90:180::-;138:77;135:1;128:88;235:4;232:1;225:15;259:4;256:1;249:15;276:410;316:7;339:20;357:1;339:20;:::i;:::-;334:25;;373:20;391:1;373:20;:::i;:::-;368:25;;428:1;425;421:9;450:30;468:11;450:30;:::i;:::-;439:41;;629:1;620:7;616:15;613:1;610:22;590:1;583:9;563:83;540:139;;659:18;;:::i;:::-;540:139;324:362;276:410;;;;:::o;605:551:1:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@cooldownTimeout_55": {
									"entryPoint": 124,
									"id": 55,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferCooldown_50": {
									"entryPoint": 107,
									"id": 50,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 142,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 190,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 155,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 203,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 130,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 180,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:866:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "49:48:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "59:32:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "84:5:2"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "77:6:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "77:13:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "70:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "70:21:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "59:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "31:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "41:7:2",
														"type": ""
													}
												],
												"src": "7:90:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "162:50:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "179:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "199:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "184:14:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "184:21:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "172:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "172:34:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "172:34:2"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "150:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "157:3:2",
														"type": ""
													}
												],
												"src": "103:109:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "310:118:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "320:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "332:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "343:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "328:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "328:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "320:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "394:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "407:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "418:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "403:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "403:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "356:37:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "356:65:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "356:65:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "282:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "294:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "305:4:2",
														"type": ""
													}
												],
												"src": "218:210:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "479:32:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "489:16:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "500:5:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "489:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "461:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "471:7:2",
														"type": ""
													}
												],
												"src": "434:77:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "582:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "599:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "622:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "604:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "604:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "592:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "592:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "592:37:2"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "570:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "577:3:2",
														"type": ""
													}
												],
												"src": "517:118:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "739:124:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "749:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "761:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "772:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "757:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "757:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "749:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "829:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "842:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "853:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "838:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "838:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "785:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "785:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "785:71:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "711:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "723:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "734:4:2",
														"type": ""
													}
												],
												"src": "641:222:2"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b506004361060325760003560e01c806368f16293146037578063bbf79246146051575b600080fd5b603d606b565b60405160489190609b565b60405180910390f35b6057607c565b6040516062919060cb565b60405180910390f35b60008054906101000a900460ff1681565b60015481565b60008115159050919050565b6095816082565b82525050565b600060208201905060ae6000830184608e565b92915050565b6000819050919050565b60c58160b4565b82525050565b600060208201905060de600083018460be565b9291505056fea2646970667358221220fab9433932a4248388a4a06e6fc813733271d1cfec69354c494f94d6d6eee18c64736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x32 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x68F16293 EQ PUSH1 0x37 JUMPI DUP1 PUSH4 0xBBF79246 EQ PUSH1 0x51 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3D PUSH1 0x6B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x48 SWAP2 SWAP1 PUSH1 0x9B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x57 PUSH1 0x7C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x62 SWAP2 SWAP1 PUSH1 0xCB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x95 DUP2 PUSH1 0x82 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0xAE PUSH1 0x0 DUP4 ADD DUP5 PUSH1 0x8E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xC5 DUP2 PUSH1 0xB4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0xDE PUSH1 0x0 DUP4 ADD DUP5 PUSH1 0xBE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STATICCALL 0xB9 NUMBER CODECOPY ORIGIN LOG4 0x24 DUP4 DUP9 LOG4 LOG0 PUSH15 0x6FC813733271D1CFEC69354C494F94 0xD6 0xD6 0xEE 0xE1 DUP13 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "605:551:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1058:35;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1100:52;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1058:35;;;;;;;;;;;;:::o;1100:52::-;;;;:::o;7:90:2:-;41:7;84:5;77:13;70:21;59:32;;7:90;;;:::o;103:109::-;184:21;199:5;184:21;:::i;:::-;179:3;172:34;103:109;;:::o;218:210::-;305:4;343:2;332:9;328:18;320:26;;356:65;418:1;407:9;403:17;394:6;356:65;:::i;:::-;218:210;;;;:::o;434:77::-;471:7;500:5;489:16;;434:77;;;:::o;517:118::-;604:24;622:5;604:24;:::i;:::-;599:3;592:37;517:118;;:::o;641:222::-;734:4;772:2;761:9;757:18;749:26;;785:71;853:1;842:9;838:17;829:6;785:71;:::i;:::-;641:222;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "56400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"cooldownTimeout()": "2429",
								"transferCooldown()": "2446"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 605,
									"end": 1156,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 605,
									"end": 1156,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 605,
									"end": 1156,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1089,
									"end": 1093,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1058,
									"end": 1093,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1058,
									"end": 1093,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1058,
									"end": 1093,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 1058,
									"end": 1093,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 1058,
									"end": 1093,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1058,
									"end": 1093,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 1058,
									"end": 1093,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1058,
									"end": 1093,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 1058,
									"end": 1093,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 1058,
									"end": 1093,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 1058,
									"end": 1093,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1058,
									"end": 1093,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1058,
									"end": 1093,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1058,
									"end": 1093,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1058,
									"end": 1093,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1058,
									"end": 1093,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 1058,
									"end": 1093,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 1058,
									"end": 1093,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1058,
									"end": 1093,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1058,
									"end": 1093,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1150,
									"end": 1152,
									"name": "PUSH",
									"source": 1,
									"value": "3C"
								},
								{
									"begin": 827,
									"end": 828,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 1130,
									"end": 1152,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1130,
									"end": 1152,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1130,
									"end": 1152,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1130,
									"end": 1152,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 1130,
									"end": 1152,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1130,
									"end": 1152,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1130,
									"end": 1152,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1100,
									"end": 1152,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1100,
									"end": 1152,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 605,
									"end": 1156,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 605,
									"end": 1156,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 605,
									"end": 1156,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 605,
									"end": 1156,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 605,
									"end": 1156,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 605,
									"end": 1156,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 605,
									"end": 1156,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 605,
									"end": 1156,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 605,
									"end": 1156,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 605,
									"end": 1156,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 605,
									"end": 1156,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 605,
									"end": 1156,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 605,
									"end": 1156,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 84,
									"name": "tag",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 7,
									"end": 84,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 44,
									"end": 51,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 78,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 62,
									"end": 78,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 62,
									"end": 78,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7,
									"end": 84,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7,
									"end": 84,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7,
									"end": 84,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7,
									"end": 84,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 90,
									"end": 270,
									"name": "tag",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 90,
									"end": 270,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 138,
									"end": 215,
									"name": "PUSH",
									"source": 2,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 135,
									"end": 136,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 128,
									"end": 216,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 232,
									"end": 233,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 225,
									"end": 240,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 259,
									"end": 263,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 256,
									"end": 257,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 249,
									"end": 264,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 276,
									"end": 686,
									"name": "tag",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 276,
									"end": 686,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 316,
									"end": 323,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 339,
									"end": 359,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 357,
									"end": 358,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 339,
									"end": 359,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 339,
									"end": 359,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 339,
									"end": 359,
									"name": "tag",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 339,
									"end": 359,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 334,
									"end": 359,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 334,
									"end": 359,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 373,
									"end": 393,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 391,
									"end": 392,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 373,
									"end": 393,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 373,
									"end": 393,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 373,
									"end": 393,
									"name": "tag",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 373,
									"end": 393,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 368,
									"end": 393,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 368,
									"end": 393,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 428,
									"end": 429,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 425,
									"end": 426,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 421,
									"end": 430,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 450,
									"end": 480,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 468,
									"end": 479,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 450,
									"end": 480,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 450,
									"end": 480,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 450,
									"end": 480,
									"name": "tag",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 450,
									"end": 480,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 439,
									"end": 480,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 439,
									"end": 480,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 629,
									"end": 630,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 620,
									"end": 627,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 616,
									"end": 631,
									"name": "DIV",
									"source": 2
								},
								{
									"begin": 613,
									"end": 614,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 610,
									"end": 632,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 590,
									"end": 591,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 583,
									"end": 592,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 563,
									"end": 646,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 540,
									"end": 679,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 540,
									"end": 679,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 659,
									"end": 677,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 659,
									"end": 677,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 659,
									"end": 677,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 659,
									"end": 677,
									"name": "tag",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 659,
									"end": 677,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 540,
									"end": 679,
									"name": "tag",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 540,
									"end": 679,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 324,
									"end": 686,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 276,
									"end": 686,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 276,
									"end": 686,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 276,
									"end": 686,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 276,
									"end": 686,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 276,
									"end": 686,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 605,
									"end": 1156,
									"name": "tag",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 605,
									"end": 1156,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 605,
									"end": 1156,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 605,
									"end": 1156,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 605,
									"end": 1156,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 605,
									"end": 1156,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 605,
									"end": 1156,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 605,
									"end": 1156,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 605,
									"end": 1156,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220fab9433932a4248388a4a06e6fc813733271d1cfec69354c494f94d6d6eee18c64736f6c63430008120033",
									".code": [
										{
											"begin": 605,
											"end": 1156,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 605,
											"end": 1156,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 605,
											"end": 1156,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 605,
											"end": 1156,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 605,
											"end": 1156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 605,
											"end": 1156,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 605,
											"end": 1156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 605,
											"end": 1156,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 605,
											"end": 1156,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 605,
											"end": 1156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 605,
											"end": 1156,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 605,
											"end": 1156,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 605,
											"end": 1156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 605,
											"end": 1156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 605,
											"end": 1156,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 605,
											"end": 1156,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 605,
											"end": 1156,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 605,
											"end": 1156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 605,
											"end": 1156,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 605,
											"end": 1156,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 605,
											"end": 1156,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 605,
											"end": 1156,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 605,
											"end": 1156,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 605,
											"end": 1156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 605,
											"end": 1156,
											"name": "PUSH",
											"source": 1,
											"value": "68F16293"
										},
										{
											"begin": 605,
											"end": 1156,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 605,
											"end": 1156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 605,
											"end": 1156,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 605,
											"end": 1156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 605,
											"end": 1156,
											"name": "PUSH",
											"source": 1,
											"value": "BBF79246"
										},
										{
											"begin": 605,
											"end": 1156,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 605,
											"end": 1156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 605,
											"end": 1156,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 605,
											"end": 1156,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 605,
											"end": 1156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 605,
											"end": 1156,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 605,
											"end": 1156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 605,
											"end": 1156,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1058,
											"end": 1093,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1058,
											"end": 1093,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1058,
											"end": 1093,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1058,
											"end": 1093,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1058,
											"end": 1093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1058,
											"end": 1093,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1058,
											"end": 1093,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1058,
											"end": 1093,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1058,
											"end": 1093,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1058,
											"end": 1093,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 1058,
											"end": 1093,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1058,
											"end": 1093,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1058,
											"end": 1093,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 1058,
											"end": 1093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1058,
											"end": 1093,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 1058,
											"end": 1093,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1058,
											"end": 1093,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1058,
											"end": 1093,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1058,
											"end": 1093,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1058,
											"end": 1093,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1058,
											"end": 1093,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1058,
											"end": 1093,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1058,
											"end": 1093,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1100,
											"end": 1152,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1100,
											"end": 1152,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1100,
											"end": 1152,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1100,
											"end": 1152,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1100,
											"end": 1152,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1100,
											"end": 1152,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1100,
											"end": 1152,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1100,
											"end": 1152,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1100,
											"end": 1152,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1100,
											"end": 1152,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1100,
											"end": 1152,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1100,
											"end": 1152,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1100,
											"end": 1152,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1100,
											"end": 1152,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1100,
											"end": 1152,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1100,
											"end": 1152,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1100,
											"end": 1152,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1100,
											"end": 1152,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1100,
											"end": 1152,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1100,
											"end": 1152,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1100,
											"end": 1152,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1100,
											"end": 1152,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1100,
											"end": 1152,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1058,
											"end": 1093,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1058,
											"end": 1093,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1058,
											"end": 1093,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1058,
											"end": 1093,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1058,
											"end": 1093,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1058,
											"end": 1093,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1058,
											"end": 1093,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1058,
											"end": 1093,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1058,
											"end": 1093,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1058,
											"end": 1093,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1058,
											"end": 1093,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1058,
											"end": 1093,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1058,
											"end": 1093,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1058,
											"end": 1093,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1100,
											"end": 1152,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1100,
											"end": 1152,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1100,
											"end": 1152,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1100,
											"end": 1152,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1100,
											"end": 1152,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1100,
											"end": 1152,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 97,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 7,
											"end": 97,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 41,
											"end": 48,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 89,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 77,
											"end": 90,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 70,
											"end": 91,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 59,
											"end": 91,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 59,
											"end": 91,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 97,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7,
											"end": 97,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7,
											"end": 97,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 97,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 103,
											"end": 212,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 103,
											"end": 212,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 184,
											"end": 205,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 199,
											"end": 204,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 184,
											"end": 205,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 184,
											"end": 205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 184,
											"end": 205,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 184,
											"end": 205,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 179,
											"end": 182,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 172,
											"end": 206,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 103,
											"end": 212,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 103,
											"end": 212,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 103,
											"end": 212,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 218,
											"end": 428,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 218,
											"end": 428,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 305,
											"end": 309,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 343,
											"end": 345,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 332,
											"end": 341,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 328,
											"end": 346,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 320,
											"end": 346,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 320,
											"end": 346,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 356,
											"end": 421,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 418,
											"end": 419,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 407,
											"end": 416,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 403,
											"end": 420,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 394,
											"end": 400,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 356,
											"end": 421,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 356,
											"end": 421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 356,
											"end": 421,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 356,
											"end": 421,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 218,
											"end": 428,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 218,
											"end": 428,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 218,
											"end": 428,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 218,
											"end": 428,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 218,
											"end": 428,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 434,
											"end": 511,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 434,
											"end": 511,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 471,
											"end": 478,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 500,
											"end": 505,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 489,
											"end": 505,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 489,
											"end": 505,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 434,
											"end": 511,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 434,
											"end": 511,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 434,
											"end": 511,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 434,
											"end": 511,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 517,
											"end": 635,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 517,
											"end": 635,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 604,
											"end": 628,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 622,
											"end": 627,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 604,
											"end": 628,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 604,
											"end": 628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 604,
											"end": 628,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 604,
											"end": 628,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 599,
											"end": 602,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 592,
											"end": 629,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 517,
											"end": 635,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 517,
											"end": 635,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 517,
											"end": 635,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 641,
											"end": 863,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 641,
											"end": 863,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 734,
											"end": 738,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 772,
											"end": 774,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 761,
											"end": 770,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 757,
											"end": 775,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 749,
											"end": 775,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 749,
											"end": 775,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 785,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 853,
											"end": 854,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 842,
											"end": 851,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 838,
											"end": 855,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 829,
											"end": 835,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 785,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 785,
											"end": 856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 785,
											"end": 856,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 785,
											"end": 856,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 641,
											"end": 863,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 641,
											"end": 863,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 641,
											"end": 863,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 641,
											"end": 863,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 641,
											"end": 863,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"contracts/DexhuneBase.sol",
								"contracts/DexhuneRoot.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"cooldownTimeout()": "bbf79246",
							"transferCooldown()": "68f16293"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"cooldownTimeout\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"transferCooldown\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"PROPOSAL_DURATION\":{\"details\":\"Total proposal duration in seconds\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DexhuneRoot.sol\":\"DexhuneConfig\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/DexhuneBase.sol\":{\"keccak256\":\"0x787845030bdec105b35d758918e69bf4b37dac9086fb8b8538ec9e085a840780\",\"license\":\"BSD-3-Clause\",\"urls\":[\"bzz-raw://d7997e80a720dcb31a750c3d7cf6652452d01b9a23b03fbef05234ec3c4a7ebe\",\"dweb:/ipfs/QmajW3QhELKZNNvpDdbwKiFhBpKvk57PkX97A7r5CCG8Z4\"]},\"contracts/DexhuneRoot.sol\":{\"keccak256\":\"0xb4cd3668f90db8720925d98dcd4705604a4930c29ec49c5281a6be74a242fd15\",\"license\":\"BSD-3-Clause\",\"urls\":[\"bzz-raw://427c2d9d7b6ee793cfb639ed3f636bbcd6fea88537298b06e1399f3b701af4ca\",\"dweb:/ipfs/QmRQ8ACxfmzVnPFWsPJegKR6SFcUdcZNtNkQfg8HrR3VXY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 50,
								"contract": "contracts/DexhuneRoot.sol:DexhuneConfig",
								"label": "transferCooldown",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 55,
								"contract": "contracts/DexhuneRoot.sol:DexhuneConfig",
								"label": "cooldownTimeout",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"DexhuneRoot": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "collectionAddress",
									"type": "address"
								}
							],
							"name": "addedNFTCollection",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "collectionAddress",
									"type": "address"
								}
							],
							"name": "removedNFTCollection",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "transferredOwnership",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_contractAddress",
									"type": "address"
								}
							],
							"name": "addNFTCollection",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "cooldownTimeout",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_index",
									"type": "uint256"
								}
							],
							"name": "removeNFTCollection",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_timeout",
									"type": "uint256"
								}
							],
							"name": "setCooldownTimeout",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "_enabled",
									"type": "bool"
								}
							],
							"name": "setTransferTimeout",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "transferCooldown",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"addedNFTCollection(uint256,address)": {
								"details": "Adds an NFT collection",
								"params": {
									"id": "Id of the collection"
								}
							},
							"removedNFTCollection(uint256,address)": {
								"details": "Removes an NFT collection",
								"params": {
									"id": "Id of the collection"
								}
							},
							"transferredOwnership(address,address)": {
								"details": "Transfers ownership of the contract to another address",
								"params": {
									"from": "Address of the previous owner",
									"to": "Address of the new owner"
								}
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"addNFTCollection(address)": "30002eef",
							"cooldownTimeout()": "bbf79246",
							"owner()": "8da5cb5b",
							"removeNFTCollection(uint256)": "8b98ecaa",
							"setCooldownTimeout(uint256)": "c2d52751",
							"setTransferTimeout(bool)": "7c14a418",
							"transferCooldown()": "68f16293",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"collectionAddress\",\"type\":\"address\"}],\"name\":\"addedNFTCollection\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"collectionAddress\",\"type\":\"address\"}],\"name\":\"removedNFTCollection\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"transferredOwnership\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contractAddress\",\"type\":\"address\"}],\"name\":\"addNFTCollection\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cooldownTimeout\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"removeNFTCollection\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_timeout\",\"type\":\"uint256\"}],\"name\":\"setCooldownTimeout\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_enabled\",\"type\":\"bool\"}],\"name\":\"setTransferTimeout\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"transferCooldown\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"addedNFTCollection(uint256,address)\":{\"details\":\"Adds an NFT collection\",\"params\":{\"id\":\"Id of the collection\"}},\"removedNFTCollection(uint256,address)\":{\"details\":\"Removes an NFT collection\",\"params\":{\"id\":\"Id of the collection\"}},\"transferredOwnership(address,address)\":{\"details\":\"Transfers ownership of the contract to another address\",\"params\":{\"from\":\"Address of the previous owner\",\"to\":\"Address of the new owner\"}}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"events\":{\"addedNFTCollection(uint256,address)\":{\"notice\":\"An NFT collection has been added\"},\"removedNFTCollection(uint256,address)\":{\"notice\":\"An NFT collection has been removed\"},\"transferredOwnership(address,address)\":{\"notice\":\"Ownership of Dexhune has been transferred\"}},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DexhuneRoot.sol\":\"DexhuneRoot\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/DexhuneBase.sol\":{\"keccak256\":\"0x787845030bdec105b35d758918e69bf4b37dac9086fb8b8538ec9e085a840780\",\"license\":\"BSD-3-Clause\",\"urls\":[\"bzz-raw://d7997e80a720dcb31a750c3d7cf6652452d01b9a23b03fbef05234ec3c4a7ebe\",\"dweb:/ipfs/QmajW3QhELKZNNvpDdbwKiFhBpKvk57PkX97A7r5CCG8Z4\"]},\"contracts/DexhuneRoot.sol\":{\"keccak256\":\"0xb4cd3668f90db8720925d98dcd4705604a4930c29ec49c5281a6be74a242fd15\",\"license\":\"BSD-3-Clause\",\"urls\":[\"bzz-raw://427c2d9d7b6ee793cfb639ed3f636bbcd6fea88537298b06e1399f3b701af4ca\",\"dweb:/ipfs/QmRQ8ACxfmzVnPFWsPJegKR6SFcUdcZNtNkQfg8HrR3VXY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 50,
								"contract": "contracts/DexhuneRoot.sol:DexhuneRoot",
								"label": "transferCooldown",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 55,
								"contract": "contracts/DexhuneRoot.sol:DexhuneRoot",
								"label": "cooldownTimeout",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 60,
								"contract": "contracts/DexhuneRoot.sol:DexhuneRoot",
								"label": "owner",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 63,
								"contract": "contracts/DexhuneRoot.sol:DexhuneRoot",
								"label": "nftCollections",
								"offset": 0,
								"slot": "3",
								"type": "t_array(t_address)dyn_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"events": {
							"addedNFTCollection(uint256,address)": {
								"notice": "An NFT collection has been added"
							},
							"removedNFTCollection(uint256,address)": {
								"notice": "An NFT collection has been removed"
							},
							"transferredOwnership(address,address)": {
								"notice": "Ownership of Dexhune has been transferred"
							}
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/DexhuneBase.sol": {
				"ast": {
					"absolutePath": "contracts/DexhuneBase.sol",
					"exportedSymbols": {
						"DexhuneBase": [
							29
						]
					},
					"id": 30,
					"license": "BSD-3-Clause",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".22",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "535:32:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "DexhuneBase",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 29,
							"linearizedBaseContracts": [
								29
							],
							"name": "DexhuneBase",
							"nameLocation": "580:11:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "DexhuneBase.PriceProposal",
									"id": 20,
									"members": [
										{
											"constant": false,
											"id": 3,
											"mutability": "mutable",
											"name": "id",
											"nameLocation": "644:2:0",
											"nodeType": "VariableDeclaration",
											"scope": 20,
											"src": "636:10:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "636:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 5,
											"mutability": "mutable",
											"name": "description",
											"nameLocation": "664:11:0",
											"nodeType": "VariableDeclaration",
											"scope": 20,
											"src": "657:18:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 4,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "657:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 7,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "691:8:0",
											"nodeType": "VariableDeclaration",
											"scope": 20,
											"src": "686:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 6,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "686:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 9,
											"mutability": "mutable",
											"name": "votesUp",
											"nameLocation": "718:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 20,
											"src": "710:15:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 8,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "710:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 11,
											"mutability": "mutable",
											"name": "votesDown",
											"nameLocation": "744:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 20,
											"src": "736:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 10,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "736:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 13,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "772:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 20,
											"src": "764:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 12,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "764:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 17,
											"mutability": "mutable",
											"name": "votes",
											"nameLocation": "813:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 20,
											"src": "788:30:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_int8_$",
												"typeString": "mapping(address => int8)"
											},
											"typeName": {
												"id": 16,
												"keyName": "",
												"keyNameLocation": "-1:-1:-1",
												"keyType": {
													"id": 14,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "796:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "788:24:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_int8_$",
													"typeString": "mapping(address => int8)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 15,
													"name": "int8",
													"nodeType": "ElementaryTypeName",
													"src": "807:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int8",
														"typeString": "int8"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 19,
											"mutability": "mutable",
											"name": "finalized",
											"nameLocation": "834:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 20,
											"src": "829:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 18,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "829:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "PriceProposal",
									"nameLocation": "611:13:0",
									"nodeType": "StructDefinition",
									"scope": 29,
									"src": "604:247:0",
									"visibility": "public"
								},
								{
									"canonicalName": "DexhuneBase.Account",
									"id": 28,
									"members": [
										{
											"constant": false,
											"id": 22,
											"mutability": "mutable",
											"name": "addr",
											"nameLocation": "893:4:0",
											"nodeType": "VariableDeclaration",
											"scope": 28,
											"src": "885:12:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 21,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "885:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 24,
											"mutability": "mutable",
											"name": "balance",
											"nameLocation": "916:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 28,
											"src": "908:15:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 23,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "908:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 27,
											"mutability": "mutable",
											"name": "nfts",
											"nameLocation": "944:4:0",
											"nodeType": "VariableDeclaration",
											"scope": 28,
											"src": "934:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
												"typeString": "address[]"
											},
											"typeName": {
												"baseType": {
													"id": 25,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "934:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 26,
												"nodeType": "ArrayTypeName",
												"src": "934:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
													"typeString": "address[]"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Account",
									"nameLocation": "866:7:0",
									"nodeType": "StructDefinition",
									"scope": 29,
									"src": "859:97:0",
									"visibility": "public"
								}
							],
							"scope": 30,
							"src": "571:388:0",
							"usedErrors": []
						}
					],
					"src": "535:424:0"
				},
				"id": 0
			},
			"contracts/DexhuneRoot.sol": {
				"ast": {
					"absolutePath": "contracts/DexhuneRoot.sol",
					"exportedSymbols": {
						"DexhuneBase": [
							29
						],
						"DexhuneConfig": [
							56
						],
						"DexhuneRoot": [
							245
						]
					},
					"id": 246,
					"license": "BSD-3-Clause",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 31,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".22",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "540:32:1"
						},
						{
							"absolutePath": "contracts/DexhuneBase.sol",
							"file": "./DexhuneBase.sol",
							"id": 32,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 246,
							"sourceUnit": 30,
							"src": "574:27:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "DexhuneConfig",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 56,
							"linearizedBaseContracts": [
								56
							],
							"name": "DexhuneConfig",
							"nameLocation": "614:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 35,
									"mutability": "constant",
									"name": "MAXIMUM_VOTES_PER_PROPOSAL",
									"nameLocation": "741:26:1",
									"nodeType": "VariableDeclaration",
									"scope": 56,
									"src": "715:59:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 33,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "715:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31303030",
										"id": 34,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "770:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000_by_1",
											"typeString": "int_const 1000"
										},
										"value": "1000"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 38,
									"mutability": "constant",
									"name": "BLOCKS_PER_SECOND",
									"nameLocation": "807:17:1",
									"nodeType": "VariableDeclaration",
									"scope": 56,
									"src": "781:47:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 36,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "781:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 37,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "827:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 39,
										"nodeType": "StructuredDocumentation",
										"src": "835:43:1",
										"text": "@dev Total proposal duration in seconds"
									},
									"id": 42,
									"mutability": "constant",
									"name": "PROPOSAL_DURATION",
									"nameLocation": "910:17:1",
									"nodeType": "VariableDeclaration",
									"scope": 56,
									"src": "884:49:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 40,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "884:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "333030",
										"id": 41,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "930:3:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_300_by_1",
											"typeString": "int_const 300"
										},
										"value": "300"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 47,
									"mutability": "constant",
									"name": "PROPOSAL_BLOCKS",
									"nameLocation": "994:15:1",
									"nodeType": "VariableDeclaration",
									"scope": 56,
									"src": "968:81:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 43,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "968:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 46,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"id": 44,
											"name": "BLOCKS_PER_SECOND",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 38,
											"src": "1012:17:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"id": 45,
											"name": "PROPOSAL_DURATION",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 42,
											"src": "1032:17:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "1012:37:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "68f16293",
									"id": 50,
									"mutability": "mutable",
									"name": "transferCooldown",
									"nameLocation": "1070:16:1",
									"nodeType": "VariableDeclaration",
									"scope": 56,
									"src": "1058:35:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 48,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "1058:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"hexValue": "74727565",
										"id": 49,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1089:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "true"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "bbf79246",
									"id": 55,
									"mutability": "mutable",
									"name": "cooldownTimeout",
									"nameLocation": "1112:15:1",
									"nodeType": "VariableDeclaration",
									"scope": 56,
									"src": "1100:52:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 51,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "1100:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 54,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"id": 52,
											"name": "BLOCKS_PER_SECOND",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 38,
											"src": "1130:17:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"hexValue": "3630",
											"id": 53,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1150:2:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_60_by_1",
												"typeString": "int_const 60"
											},
											"value": "60"
										},
										"src": "1130:22:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								}
							],
							"scope": 246,
							"src": "605:551:1",
							"usedErrors": []
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 57,
										"name": "DexhuneConfig",
										"nameLocations": [
											"1193:13:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 56,
										"src": "1193:13:1"
									},
									"id": 58,
									"nodeType": "InheritanceSpecifier",
									"src": "1193:13:1"
								}
							],
							"canonicalName": "DexhuneRoot",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 245,
							"linearizedBaseContracts": [
								245,
								56
							],
							"name": "DexhuneRoot",
							"nameLocation": "1178:11:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "8da5cb5b",
									"id": 60,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "1229:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 245,
									"src": "1214:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 59,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1214:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 63,
									"mutability": "mutable",
									"name": "nftCollections",
									"nameLocation": "1251:14:1",
									"nodeType": "VariableDeclaration",
									"scope": 245,
									"src": "1241:24:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 61,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1241:7:1",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 62,
										"nodeType": "ArrayTypeName",
										"src": "1241:9:1",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 79,
										"nodeType": "Block",
										"src": "1288:81:1",
										"statements": [
											{
												"expression": {
													"id": 69,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 66,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 60,
														"src": "1299:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 67,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1307:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 68,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1311:6:1",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1307:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1299:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 70,
												"nodeType": "ExpressionStatement",
												"src": "1299:18:1"
											},
											{
												"expression": {
													"id": 77,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 71,
														"name": "nftCollections",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 63,
														"src": "1328:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage",
															"typeString": "address[] storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 75,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1359:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 74,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "NewExpression",
															"src": "1345:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
																"typeString": "function (uint256) pure returns (address[] memory)"
															},
															"typeName": {
																"baseType": {
																	"id": 72,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1349:7:1",
																	"stateMutability": "nonpayable",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 73,
																"nodeType": "ArrayTypeName",
																"src": "1349:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																	"typeString": "address[]"
																}
															}
														},
														"id": 76,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1345:16:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[] memory"
														}
													},
													"src": "1328:33:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage",
														"typeString": "address[] storage ref"
													}
												},
												"id": 78,
												"nodeType": "ExpressionStatement",
												"src": "1328:33:1"
											}
										]
									},
									"id": 80,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1285:2:1"
									},
									"returnParameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1288:0:1"
									},
									"scope": 245,
									"src": "1274:95:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 91,
										"nodeType": "Block",
										"src": "1421:117:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 87,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 84,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1440:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 85,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1444:6:1",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1440:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 86,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 60,
																"src": "1454:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1440:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54686973206d6574686f642063616e206f6e6c792062652063616c6c656420627920746865206f776e6572206f66207468697320736d61727420636f6e7472616374",
															"id": 88,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1461:68:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c74b02dae53b330f9d5247c6e914bb95735dd9ac40c869ba889a7550aa5762f7",
																"typeString": "literal_string \"This method can only be called by the owner of this smart contract\""
															},
															"value": "This method can only be called by the owner of this smart contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c74b02dae53b330f9d5247c6e914bb95735dd9ac40c869ba889a7550aa5762f7",
																"typeString": "literal_string \"This method can only be called by the owner of this smart contract\""
															}
														],
														"id": 83,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1432:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 89,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1432:98:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 90,
												"nodeType": "ExpressionStatement",
												"src": "1432:98:1"
											}
										]
									},
									"id": 92,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ensureOwnership",
									"nameLocation": "1390:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 81,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1405:2:1"
									},
									"returnParameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1421:0:1"
									},
									"scope": 245,
									"src": "1381:157:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 113,
										"nodeType": "Block",
										"src": "1598:157:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 97,
														"name": "ensureOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 92,
														"src": "1609:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 98,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1609:17:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 99,
												"nodeType": "ExpressionStatement",
												"src": "1609:17:1"
											},
											{
												"assignments": [
													101
												],
												"declarations": [
													{
														"constant": false,
														"id": 101,
														"mutability": "mutable",
														"name": "oldAddress",
														"nameLocation": "1647:10:1",
														"nodeType": "VariableDeclaration",
														"scope": 113,
														"src": "1639:18:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 100,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1639:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 103,
												"initialValue": {
													"id": 102,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 60,
													"src": "1660:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1639:26:1"
											},
											{
												"expression": {
													"id": 106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 104,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 60,
														"src": "1676:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 105,
														"name": "_address",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "1684:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1676:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 107,
												"nodeType": "ExpressionStatement",
												"src": "1676:16:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 109,
															"name": "oldAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "1729:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 110,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 60,
															"src": "1741:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 108,
														"name": "transferredOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 230,
														"src": "1708:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1708:39:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 112,
												"nodeType": "EmitStatement",
												"src": "1703:44:1"
											}
										]
									},
									"functionSelector": "f2fde38b",
									"id": 114,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferOwnership",
									"nameLocation": "1555:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "1581:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "1573:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1573:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1572:18:1"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1598:0:1"
									},
									"scope": 245,
									"src": "1546:209:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 148,
										"nodeType": "Block",
										"src": "1822:290:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 119,
														"name": "ensureOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 92,
														"src": "1833:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1833:17:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 121,
												"nodeType": "ExpressionStatement",
												"src": "1833:17:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 128,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 123,
																"name": "_contractAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 116,
																"src": "1869:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 126,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1897:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 125,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1889:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 124,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1889:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 127,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1889:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1869:30:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416e204e465420636f6c6c656374696f6e2063616e6e6f74206861766520616e20656d7074792061646472657373",
															"id": 129,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1901:48:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_816703eb58b6307b3b27d351a49312606d8e715e2707bbade1aaddb79342c4e3",
																"typeString": "literal_string \"An NFT collection cannot have an empty address\""
															},
															"value": "An NFT collection cannot have an empty address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_816703eb58b6307b3b27d351a49312606d8e715e2707bbade1aaddb79342c4e3",
																"typeString": "literal_string \"An NFT collection cannot have an empty address\""
															}
														],
														"id": 122,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1861:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1861:89:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 131,
												"nodeType": "ExpressionStatement",
												"src": "1861:89:1"
											},
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "index",
														"nameLocation": "1968:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 148,
														"src": "1963:10:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 132,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1963:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 136,
												"initialValue": {
													"expression": {
														"id": 134,
														"name": "nftCollections",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 63,
														"src": "1976:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage",
															"typeString": "address[] storage ref"
														}
													},
													"id": 135,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1991:6:1",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "1976:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1963:34:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 140,
															"name": "_contractAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 116,
															"src": "2028:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 137,
															"name": "nftCollections",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 63,
															"src": "2008:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 139,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2023:4:1",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "2008:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
															"typeString": "function (address[] storage pointer,address)"
														}
													},
													"id": 141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2008:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 142,
												"nodeType": "ExpressionStatement",
												"src": "2008:37:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 144,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "2080:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 145,
															"name": "_contractAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 116,
															"src": "2087:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 143,
														"name": "addedNFTCollection",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 237,
														"src": "2061:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (uint256,address)"
														}
													},
													"id": 146,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2061:43:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 147,
												"nodeType": "EmitStatement",
												"src": "2056:48:1"
											}
										]
									},
									"functionSelector": "30002eef",
									"id": 149,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "addNFTCollection",
									"nameLocation": "1772:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "_contractAddress",
												"nameLocation": "1797:16:1",
												"nodeType": "VariableDeclaration",
												"scope": 149,
												"src": "1789:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1789:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1788:26:1"
									},
									"returnParameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1822:0:1"
									},
									"scope": 245,
									"src": "1763:349:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 196,
										"nodeType": "Block",
										"src": "2178:441:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 154,
														"name": "ensureOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 92,
														"src": "2189:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2189:17:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 156,
												"nodeType": "ExpressionStatement",
												"src": "2189:17:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 165,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 160,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 158,
																	"name": "_index",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 151,
																	"src": "2235:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 159,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2245:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "2235:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 164,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 161,
																	"name": "_index",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 151,
																	"src": "2250:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"expression": {
																		"id": 162,
																		"name": "nftCollections",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 63,
																		"src": "2259:14:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 163,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2274:6:1",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "2259:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2250:30:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2235:45:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54686520726571756573746564204e465420636f6c6c656374696f6e20646f6573206e6f74206578697374",
															"id": 166,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2282:45:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bdf277b96bba45ab4f7ec9d006adfc37cb52d45787409103f95d177d319c7292",
																"typeString": "literal_string \"The requested NFT collection does not exist\""
															},
															"value": "The requested NFT collection does not exist"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_bdf277b96bba45ab4f7ec9d006adfc37cb52d45787409103f95d177d319c7292",
																"typeString": "literal_string \"The requested NFT collection does not exist\""
															}
														],
														"id": 157,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2227:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2227:101:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 168,
												"nodeType": "ExpressionStatement",
												"src": "2227:101:1"
											},
											{
												"assignments": [
													170
												],
												"declarations": [
													{
														"constant": false,
														"id": 170,
														"mutability": "mutable",
														"name": "addr",
														"nameLocation": "2349:4:1",
														"nodeType": "VariableDeclaration",
														"scope": 196,
														"src": "2341:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 169,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2341:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 174,
												"initialValue": {
													"baseExpression": {
														"id": 171,
														"name": "nftCollections",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 63,
														"src": "2356:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage",
															"typeString": "address[] storage ref"
														}
													},
													"id": 173,
													"indexExpression": {
														"id": 172,
														"name": "_index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 151,
														"src": "2371:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2356:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2341:37:1"
											},
											{
												"expression": {
													"id": 184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 175,
															"name": "nftCollections",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 63,
															"src": "2454:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 177,
														"indexExpression": {
															"id": 176,
															"name": "_index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 151,
															"src": "2469:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2454:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"id": 178,
															"name": "nftCollections",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 63,
															"src": "2479:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 183,
														"indexExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 182,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 179,
																	"name": "nftCollections",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 63,
																	"src": "2494:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_storage",
																		"typeString": "address[] storage ref"
																	}
																},
																"id": 180,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2509:6:1",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "2494:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"hexValue": "31",
																"id": 181,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2518:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "2494:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2479:41:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2454:66:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 185,
												"nodeType": "ExpressionStatement",
												"src": "2454:66:1"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 186,
															"name": "nftCollections",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 63,
															"src": "2531:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 188,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2546:3:1",
														"memberName": "pop",
														"nodeType": "MemberAccess",
														"src": "2531:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
															"typeString": "function (address[] storage pointer)"
														}
													},
													"id": 189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2531:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 190,
												"nodeType": "ExpressionStatement",
												"src": "2531:20:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 192,
															"name": "_index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 151,
															"src": "2598:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 193,
															"name": "addr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 170,
															"src": "2606:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 191,
														"name": "removedNFTCollection",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 244,
														"src": "2577:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (uint256,address)"
														}
													},
													"id": 194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2577:34:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 195,
												"nodeType": "EmitStatement",
												"src": "2572:39:1"
											}
										]
									},
									"functionSelector": "8b98ecaa",
									"id": 197,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "removeNFTCollection",
									"nameLocation": "2135:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 151,
												"mutability": "mutable",
												"name": "_index",
												"nameLocation": "2163:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "2155:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 150,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2155:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2154:16:1"
									},
									"returnParameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2178:0:1"
									},
									"scope": 245,
									"src": "2126:493:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 209,
										"nodeType": "Block",
										"src": "2677:74:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 202,
														"name": "ensureOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 92,
														"src": "2688:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2688:17:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 204,
												"nodeType": "ExpressionStatement",
												"src": "2688:17:1"
											},
											{
												"expression": {
													"id": 207,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 205,
														"name": "transferCooldown",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 50,
														"src": "2716:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 206,
														"name": "_enabled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 199,
														"src": "2735:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2716:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 208,
												"nodeType": "ExpressionStatement",
												"src": "2716:27:1"
											}
										]
									},
									"functionSelector": "7c14a418",
									"id": 210,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setTransferTimeout",
									"nameLocation": "2636:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "_enabled",
												"nameLocation": "2660:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "2655:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 198,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2655:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2654:15:1"
									},
									"returnParameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2677:0:1"
									},
									"scope": 245,
									"src": "2627:124:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 222,
										"nodeType": "Block",
										"src": "2809:75:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 215,
														"name": "ensureOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 92,
														"src": "2820:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2820:17:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 217,
												"nodeType": "ExpressionStatement",
												"src": "2820:17:1"
											},
											{
												"expression": {
													"id": 220,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 218,
														"name": "cooldownTimeout",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 55,
														"src": "2850:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 219,
														"name": "_timeout",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 212,
														"src": "2868:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2850:26:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 221,
												"nodeType": "ExpressionStatement",
												"src": "2850:26:1"
											}
										]
									},
									"functionSelector": "c2d52751",
									"id": 223,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setCooldownTimeout",
									"nameLocation": "2768:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "_timeout",
												"nameLocation": "2792:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "2787:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 211,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2787:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2786:15:1"
									},
									"returnParameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2809:0:1"
									},
									"scope": 245,
									"src": "2759:125:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 224,
										"nodeType": "StructuredDocumentation",
										"src": "2894:217:1",
										"text": "@notice Ownership of Dexhune has been transferred\n @dev Transfers ownership of the contract to another address\n @param from Address of the previous owner\n @param to Address of the new owner"
									},
									"eventSelector": "a77b1597453f945cb89178ec89d7d37698b9f9b07adbbb854775e48131186d25",
									"id": 230,
									"name": "transferredOwnership",
									"nameLocation": "3123:20:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"indexed": false,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3152:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "3144:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 225,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3144:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 228,
												"indexed": false,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3166:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "3158:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 227,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3158:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3143:26:1"
									},
									"src": "3117:53:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 231,
										"nodeType": "StructuredDocumentation",
										"src": "3178:121:1",
										"text": "@notice An NFT collection has been added\n @dev Adds an NFT collection\n @param id Id of the collection"
									},
									"eventSelector": "82eda5d64185c894c1ba8ca4d84b96a074187302830b342fa1611e06c6805f28",
									"id": 237,
									"name": "addedNFTCollection",
									"nameLocation": "3311:18:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 233,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "3338:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "3330:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 232,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3330:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 235,
												"indexed": false,
												"mutability": "mutable",
												"name": "collectionAddress",
												"nameLocation": "3350:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "3342:25:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 234,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3342:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3329:39:1"
									},
									"src": "3305:64:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 238,
										"nodeType": "StructuredDocumentation",
										"src": "3377:126:1",
										"text": "@notice An NFT collection has been removed\n @dev Removes an NFT collection\n @param id Id of the collection"
									},
									"eventSelector": "b6f7db2d5083e9ae2b0b0e374dbcdc50d76e778e5e84b9186adbe5968b134dbb",
									"id": 244,
									"name": "removedNFTCollection",
									"nameLocation": "3515:20:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "3544:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 244,
												"src": "3536:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3536:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"indexed": false,
												"mutability": "mutable",
												"name": "collectionAddress",
												"nameLocation": "3556:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 244,
												"src": "3548:25:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 241,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3548:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3535:39:1"
									},
									"src": "3509:66:1"
								}
							],
							"scope": 246,
							"src": "1160:2418:1",
							"usedErrors": []
						}
					],
					"src": "540:3038:1"
				},
				"id": 1
			}
		}
	}
}