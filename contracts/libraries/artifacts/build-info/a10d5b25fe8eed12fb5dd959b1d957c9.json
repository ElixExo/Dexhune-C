{
	"id": "a10d5b25fe8eed12fb5dd959b1d957c9",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.21",
	"solcLongVersion": "0.8.21+commit.d9974bed",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/libraries/ERC165Checker.sol": {
				"content": "// SPDX-License-Identifier: BSD-3-Clause\r\n/// @title Simplified adaption from OpenZeppelin's ERC165Checker\r\n// Sources: \r\n// https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/ERC165Checker.sol\r\n/*\r\n*    ........................................................\r\n*    .%%%%%...%%%%%%..%%..%%..%%..%%..%%..%%..%%..%%..%%%%%%.\r\n*    .%%..%%..%%.......%%%%...%%..%%..%%..%%..%%%.%%..%%.....\r\n*    .%%..%%..%%%%......%%....%%%%%%..%%..%%..%%.%%%..%%%%...\r\n*    .%%..%%..%%.......%%%%...%%..%%..%%..%%..%%..%%..%%.....\r\n*    .%%%%%...%%%%%%..%%..%%..%%..%%...%%%%...%%..%%..%%%%%%.\r\n*    ........................................................\r\n*/\r\n\r\npragma solidity ^0.8.20;\r\n\r\nimport {IERC165} from \"../interfaces/IERC165.sol\";\r\n\r\n/**\r\n * @dev Library used to query support of an interface declared via {IERC165}.\r\n *\r\n * Note that these functions return the actual result of the query: they do not\r\n * `revert` if an interface is not supported. It is up to the caller to decide\r\n * what to do in these cases.\r\n */\r\nlibrary ERC165Checker {\r\n    // As per the EIP-165 spec, no interface should ever match 0xffffffff\r\n    bytes4 private constant INTERFACE_ID_INVALID = 0xffffffff;\r\n\r\n    /**\r\n     * @dev Returns true if `account` supports the {IERC165} interface.\r\n     */\r\n    function supportsERC165(address account) internal view returns (bool) {\r\n        // Any contract that implements ERC165 must explicitly indicate support of\r\n        // InterfaceId_ERC165 and explicitly indicate non-support of InterfaceId_Invalid\r\n        return\r\n            supportsERC165InterfaceUnchecked(account, type(IERC165).interfaceId) &&\r\n            !supportsERC165InterfaceUnchecked(account, INTERFACE_ID_INVALID);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns true if `account` supports the interface defined by\r\n     * `interfaceId`. Support for {IERC165} itself is queried automatically.\r\n     *\r\n     * See {IERC165-supportsInterface}.\r\n     */\r\n    function supportsInterface(address account, bytes4 interfaceId) internal view returns (bool) {\r\n        // query support of both ERC165 as per the spec and support of _interfaceId\r\n        return supportsERC165(account) && supportsERC165InterfaceUnchecked(account, interfaceId);\r\n    }\r\n\r\n    /**\r\n     * @notice Query if a contract implements an interface, does not check ERC165 support\r\n     * @param account The address of the contract to query for support of an interface\r\n     * @param interfaceId The interface identifier, as specified in ERC-165\r\n     * @return true if the contract at account indicates support of the interface with\r\n     * identifier interfaceId, false otherwise\r\n     * @dev Assumes that account contains a contract that supports ERC165, otherwise\r\n     * the behavior of this method is undefined. This precondition can be checked\r\n     * with {supportsERC165}.\r\n     *\r\n     * Some precompiled contracts will falsely indicate support for a given interface, so caution\r\n     * should be exercised when using this function.\r\n     *\r\n     * Interface identification is specified in ERC-165.\r\n     */\r\n    function supportsERC165InterfaceUnchecked(address account, bytes4 interfaceId) internal view returns (bool) {\r\n        // prepare call\r\n        bytes memory encodedParams = abi.encodeCall(IERC165.supportsInterface, (interfaceId));\r\n\r\n        // perform static call\r\n        bool success;\r\n        uint256 returnSize;\r\n        uint256 returnValue;\r\n        assembly {\r\n            success := staticcall(30000, account, add(encodedParams, 0x20), mload(encodedParams), 0x00, 0x20)\r\n            returnSize := returndatasize()\r\n            returnValue := mload(0x00)\r\n        }\r\n\r\n        return success && returnSize >= 0x20 && returnValue > 0;\r\n    }\r\n}"
			},
			"contracts/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: BSD-3-Clause\r\n/// @title Standard Interface for ERC165 contracts\r\n// Sources: \r\n// https://eips.ethereum.org/EIPS/eip-165\r\n// https://docs.google.com/document/d/1YLPtQxZu1UAvO9cZ1O2RPXBbT0mooh4DYKjA_jp-RLM\r\n// https://github.com/ethereum/EIPs/pull/881\r\n/*\r\n*    ........................................................\r\n*    .%%%%%...%%%%%%..%%..%%..%%..%%..%%..%%..%%..%%..%%%%%%.\r\n*    .%%..%%..%%.......%%%%...%%..%%..%%..%%..%%%.%%..%%.....\r\n*    .%%..%%..%%%%......%%....%%%%%%..%%..%%..%%.%%%..%%%%...\r\n*    .%%..%%..%%.......%%%%...%%..%%..%%..%%..%%..%%..%%.....\r\n*    .%%%%%...%%%%%%..%%..%%..%%..%%...%%%%...%%..%%..%%%%%%.\r\n*    ........................................................\r\n*/\r\n\r\npragma solidity ^0.8.20;\r\n\r\ninterface IERC165 {\r\n    /// @notice Query if a contract implements an interface\r\n    /// @param interfaceID The interface identifier, as specified in ERC-165\r\n    /// @dev Interface identification is specified in ERC-165. This function\r\n    ///  uses less than 30,000 gas.\r\n    /// @return `true` if the contract implements `interfaceID` and\r\n    ///  `interfaceID` is not 0xffffffff, `false` otherwise\r\n    function supportsInterface(bytes4 interfaceID) external view returns (bool);\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/interfaces/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceID",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Interface identification is specified in ERC-165. This function  uses less than 30,000 gas.",
								"params": {
									"interfaceID": "The interface identifier, as specified in ERC-165"
								},
								"returns": {
									"_0": "`true` if the contract implements `interfaceID` and  `interfaceID` is not 0xffffffff, `false` otherwise"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceID\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Interface identification is specified in ERC-165. This function  uses less than 30,000 gas.\",\"params\":{\"interfaceID\":\"The interface identifier, as specified in ERC-165\"},\"returns\":{\"_0\":\"`true` if the contract implements `interfaceID` and  `interfaceID` is not 0xffffffff, `false` otherwise\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"supportsInterface(bytes4)\":{\"notice\":\"Query if a contract implements an interface\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xb87c3638bb042a33348ef9126fd5c6e8ced8b05b1c4361ea4a3dae0f4c97f164\",\"license\":\"BSD-3-Clause\",\"urls\":[\"bzz-raw://21a82d7018fce3c3ade8a338df5f7a6ed7b7f8a16a69ff513317aafbba05f2c7\",\"dweb:/ipfs/QmVQ5x7qzn5hfZimYV5qM3A6sBxiRcE5XedpECse6PzJkf\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"supportsInterface(bytes4)": {
								"notice": "Query if a contract implements an interface"
							}
						},
						"version": 1
					}
				}
			},
			"contracts/libraries/ERC165Checker.sol": {
				"ERC165Checker": {
					"abi": [],
					"devdoc": {
						"details": "Library used to query support of an interface declared via {IERC165}. Note that these functions return the actual result of the query: they do not `revert` if an interface is not supported. It is up to the caller to decide what to do in these cases.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/libraries/ERC165Checker.sol\":1059:3758  library ERC165Checker {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/libraries/ERC165Checker.sol\":1059:3758  library ERC165Checker {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212209a2e161572a787ab19615c38953004a06389e01072c2cb4cd15ad28ded4b893a64736f6c63430008150033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212209a2e161572a787ab19615c38953004a06389e01072c2cb4cd15ad28ded4b893a64736f6c63430008150033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP11 0x2E AND ISZERO PUSH19 0xA787AB19615C38953004A06389E01072C2CB4C 0xD1 GAS 0xD2 DUP14 0xED 0x4B DUP10 GASPRICE PUSH5 0x736F6C6343 STOP ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "1059:2699:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212209a2e161572a787ab19615c38953004a06389e01072c2cb4cd15ad28ded4b893a64736f6c63430008150033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP11 0x2E AND ISZERO PUSH19 0xA787AB19615C38953004A06389E01072C2CB4C 0xD1 GAS 0xD2 DUP14 0xED 0x4B DUP10 GASPRICE PUSH5 0x736F6C6343 STOP ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "1059:2699:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"supportsERC165(address)": "infinite",
								"supportsERC165InterfaceUnchecked(address,bytes4)": "infinite",
								"supportsInterface(address,bytes4)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1059,
									"end": 3758,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1059,
									"end": 3758,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1059,
									"end": 3758,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 1059,
									"end": 3758,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1059,
									"end": 3758,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1059,
									"end": 3758,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1059,
									"end": 3758,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 1059,
									"end": 3758,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1059,
									"end": 3758,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1059,
									"end": 3758,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1059,
									"end": 3758,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 1059,
									"end": 3758,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 1059,
									"end": 3758,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 1059,
									"end": 3758,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1059,
									"end": 3758,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1059,
									"end": 3758,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1059,
									"end": 3758,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1059,
									"end": 3758,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1059,
									"end": 3758,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1059,
									"end": 3758,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1059,
									"end": 3758,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1059,
									"end": 3758,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1059,
									"end": 3758,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1059,
									"end": 3758,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1059,
									"end": 3758,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1059,
									"end": 3758,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1059,
									"end": 3758,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 1059,
									"end": 3758,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1059,
									"end": 3758,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1059,
									"end": 3758,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 1059,
									"end": 3758,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1059,
									"end": 3758,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 1059,
									"end": 3758,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1059,
									"end": 3758,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1059,
									"end": 3758,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209a2e161572a787ab19615c38953004a06389e01072c2cb4cd15ad28ded4b893a64736f6c63430008150033",
									".code": [
										{
											"begin": 1059,
											"end": 3758,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 1059,
											"end": 3758,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 1059,
											"end": 3758,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1059,
											"end": 3758,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1059,
											"end": 3758,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1059,
											"end": 3758,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1059,
											"end": 3758,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1059,
											"end": 3758,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1059,
											"end": 3758,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"contracts/interfaces/IERC165.sol",
								"contracts/libraries/ERC165Checker.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library used to query support of an interface declared via {IERC165}. Note that these functions return the actual result of the query: they do not `revert` if an interface is not supported. It is up to the caller to decide what to do in these cases.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/ERC165Checker.sol\":\"ERC165Checker\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xb87c3638bb042a33348ef9126fd5c6e8ced8b05b1c4361ea4a3dae0f4c97f164\",\"license\":\"BSD-3-Clause\",\"urls\":[\"bzz-raw://21a82d7018fce3c3ade8a338df5f7a6ed7b7f8a16a69ff513317aafbba05f2c7\",\"dweb:/ipfs/QmVQ5x7qzn5hfZimYV5qM3A6sBxiRcE5XedpECse6PzJkf\"]},\"contracts/libraries/ERC165Checker.sol\":{\"keccak256\":\"0xf04ff40709fd892658be1b8b4a3e1554a4e90ae0ef2f1bb40064003612c03a05\",\"license\":\"BSD-3-Clause\",\"urls\":[\"bzz-raw://684059eb4840f2d883785521a661f97836f15cd61f251e9b2207c0e7ab427bbd\",\"dweb:/ipfs/QmWR93PdG8YnkfucWEbm7zDtWgFskeCZgMg8Exa32yiLtW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							10
						]
					},
					"id": 11,
					"license": "BSD-3-Clause",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "732:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 10,
							"linearizedBaseContracts": [
								10
							],
							"name": "IERC165",
							"nameLocation": "770:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2,
										"nodeType": "StructuredDocumentation",
										"src": "785:378:0",
										"text": "@notice Query if a contract implements an interface\n @param interfaceID The interface identifier, as specified in ERC-165\n @dev Interface identification is specified in ERC-165. This function\n  uses less than 30,000 gas.\n @return `true` if the contract implements `interfaceID` and\n  `interfaceID` is not 0xffffffff, `false` otherwise"
									},
									"functionSelector": "01ffc9a7",
									"id": 9,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1178:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "interfaceID",
												"nameLocation": "1203:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 9,
												"src": "1196:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 3,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1196:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1195:20:0"
									},
									"returnParameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 9,
												"src": "1239:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 6,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1239:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1238:6:0"
									},
									"scope": 10,
									"src": "1169:76:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 11,
							"src": "760:488:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "732:516:0"
				},
				"id": 0
			},
			"contracts/libraries/ERC165Checker.sol": {
				"ast": {
					"absolutePath": "contracts/libraries/ERC165Checker.sol",
					"exportedSymbols": {
						"ERC165Checker": [
							103
						],
						"IERC165": [
							10
						]
					},
					"id": 104,
					"license": "BSD-3-Clause",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 12,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "692:24:1"
						},
						{
							"absolutePath": "contracts/interfaces/IERC165.sol",
							"file": "../interfaces/IERC165.sol",
							"id": 14,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 104,
							"sourceUnit": 11,
							"src": "720:50:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 13,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 10,
										"src": "728:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ERC165Checker",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 15,
								"nodeType": "StructuredDocumentation",
								"src": "774:283:1",
								"text": " @dev Library used to query support of an interface declared via {IERC165}.\n Note that these functions return the actual result of the query: they do not\n `revert` if an interface is not supported. It is up to the caller to decide\n what to do in these cases."
							},
							"fullyImplemented": true,
							"id": 103,
							"linearizedBaseContracts": [
								103
							],
							"name": "ERC165Checker",
							"nameLocation": "1067:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 18,
									"mutability": "constant",
									"name": "INTERFACE_ID_INVALID",
									"nameLocation": "1187:20:1",
									"nodeType": "VariableDeclaration",
									"scope": 103,
									"src": "1163:57:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes4",
										"typeString": "bytes4"
									},
									"typeName": {
										"id": 16,
										"name": "bytes4",
										"nodeType": "ElementaryTypeName",
										"src": "1163:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"value": {
										"hexValue": "30786666666666666666",
										"id": 17,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1210:10:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_4294967295_by_1",
											"typeString": "int_const 4294967295"
										},
										"value": "0xffffffff"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 40,
										"nodeType": "Block",
										"src": "1390:362:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 38,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 27,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 21,
																"src": "1628:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"expression": {
																	"arguments": [
																		{
																			"id": 29,
																			"name": "IERC165",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 10,
																			"src": "1642:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC165_$10_$",
																				"typeString": "type(contract IERC165)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC165_$10_$",
																				"typeString": "type(contract IERC165)"
																			}
																		],
																		"id": 28,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1637:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 30,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1637:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$10",
																		"typeString": "type(contract IERC165)"
																	}
																},
																"id": 31,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1651:11:1",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1637:25:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"id": 26,
															"name": "supportsERC165InterfaceUnchecked",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 102,
															"src": "1595:32:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (address,bytes4) view returns (bool)"
															}
														},
														"id": 32,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1595:68:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 37,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "1680:64:1",
														"subExpression": {
															"arguments": [
																{
																	"id": 34,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "1714:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 35,
																	"name": "INTERFACE_ID_INVALID",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1723:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																],
																"id": 33,
																"name": "supportsERC165InterfaceUnchecked",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 102,
																"src": "1681:32:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes4_$returns$_t_bool_$",
																	"typeString": "function (address,bytes4) view returns (bool)"
																}
															},
															"id": 36,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1681:63:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1595:149:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 25,
												"id": 39,
												"nodeType": "Return",
												"src": "1575:169:1"
											}
										]
									},
									"documentation": {
										"id": 19,
										"nodeType": "StructuredDocumentation",
										"src": "1229:85:1",
										"text": " @dev Returns true if `account` supports the {IERC165} interface."
									},
									"id": 41,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsERC165",
									"nameLocation": "1329:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1352:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "1344:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 20,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1344:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1343:17:1"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "1384:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 23,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1384:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1383:6:1"
									},
									"scope": 103,
									"src": "1320:432:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 60,
										"nodeType": "Block",
										"src": "2071:192:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 58,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 52,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 44,
																"src": "2189:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 51,
															"name": "supportsERC165",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 41,
															"src": "2174:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																"typeString": "function (address) view returns (bool)"
															}
														},
														"id": 53,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2174:23:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"arguments": [
															{
																"id": 55,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 44,
																"src": "2234:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 56,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 46,
																"src": "2243:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"id": 54,
															"name": "supportsERC165InterfaceUnchecked",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 102,
															"src": "2201:32:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (address,bytes4) view returns (bool)"
															}
														},
														"id": 57,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2201:54:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2174:81:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 50,
												"id": 59,
												"nodeType": "Return",
												"src": "2167:88:1"
											}
										]
									},
									"documentation": {
										"id": 42,
										"nodeType": "StructuredDocumentation",
										"src": "1760:212:1",
										"text": " @dev Returns true if `account` supports the interface defined by\n `interfaceId`. Support for {IERC165} itself is queried automatically.\n See {IERC165-supportsInterface}."
									},
									"id": 61,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1987:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2013:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "2005:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 43,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2005:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "2029:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "2022:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 45,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2022:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2004:37:1"
									},
									"returnParameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "2065:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 48,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2065:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2064:6:1"
									},
									"scope": 103,
									"src": "1978:285:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 101,
										"nodeType": "Block",
										"src": "3216:539:1",
										"statements": [
											{
												"assignments": [
													72
												],
												"declarations": [
													{
														"constant": false,
														"id": 72,
														"mutability": "mutable",
														"name": "encodedParams",
														"nameLocation": "3265:13:1",
														"nodeType": "VariableDeclaration",
														"scope": 101,
														"src": "3252:26:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 71,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3252:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 80,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 75,
																"name": "IERC165",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "3296:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC165_$10_$",
																	"typeString": "type(contract IERC165)"
																}
															},
															"id": 76,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "3304:17:1",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 9,
															"src": "3296:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_declaration_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function IERC165.supportsInterface(bytes4) view returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 77,
																	"name": "interfaceId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 66,
																	"src": "3324:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																}
															],
															"id": 78,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3323:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_declaration_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function IERC165.supportsInterface(bytes4) view returns (bool)"
															},
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														],
														"expression": {
															"id": 73,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "3281:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "3285:10:1",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "3281:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 79,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3281:56:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3252:85:1"
											},
											{
												"assignments": [
													82
												],
												"declarations": [
													{
														"constant": false,
														"id": 82,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3387:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 101,
														"src": "3382:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 81,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3382:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 83,
												"nodeType": "VariableDeclarationStatement",
												"src": "3382:12:1"
											},
											{
												"assignments": [
													85
												],
												"declarations": [
													{
														"constant": false,
														"id": 85,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "3413:10:1",
														"nodeType": "VariableDeclaration",
														"scope": 101,
														"src": "3405:18:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 84,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3405:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 86,
												"nodeType": "VariableDeclarationStatement",
												"src": "3405:18:1"
											},
											{
												"assignments": [
													88
												],
												"declarations": [
													{
														"constant": false,
														"id": 88,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "3442:11:1",
														"nodeType": "VariableDeclaration",
														"scope": 101,
														"src": "3434:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 87,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3434:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 89,
												"nodeType": "VariableDeclarationStatement",
												"src": "3434:19:1"
											},
											{
												"AST": {
													"nativeSrc": "3473:207:1",
													"nodeType": "YulBlock",
													"src": "3473:207:1",
													"statements": [
														{
															"nativeSrc": "3488:97:1",
															"nodeType": "YulAssignment",
															"src": "3488:97:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3510:5:1",
																		"nodeType": "YulLiteral",
																		"src": "3510:5:1",
																		"type": "",
																		"value": "30000"
																	},
																	{
																		"name": "account",
																		"nativeSrc": "3517:7:1",
																		"nodeType": "YulIdentifier",
																		"src": "3517:7:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "encodedParams",
																				"nativeSrc": "3530:13:1",
																				"nodeType": "YulIdentifier",
																				"src": "3530:13:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3545:4:1",
																				"nodeType": "YulLiteral",
																				"src": "3545:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3526:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3526:3:1"
																		},
																		"nativeSrc": "3526:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3526:24:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "encodedParams",
																				"nativeSrc": "3558:13:1",
																				"nodeType": "YulIdentifier",
																				"src": "3558:13:1"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3552:5:1",
																			"nodeType": "YulIdentifier",
																			"src": "3552:5:1"
																		},
																		"nativeSrc": "3552:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3552:20:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3574:4:1",
																		"nodeType": "YulLiteral",
																		"src": "3574:4:1",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3580:4:1",
																		"nodeType": "YulLiteral",
																		"src": "3580:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "staticcall",
																	"nativeSrc": "3499:10:1",
																	"nodeType": "YulIdentifier",
																	"src": "3499:10:1"
																},
																"nativeSrc": "3499:86:1",
																"nodeType": "YulFunctionCall",
																"src": "3499:86:1"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nativeSrc": "3488:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "3488:7:1"
																}
															]
														},
														{
															"nativeSrc": "3599:30:1",
															"nodeType": "YulAssignment",
															"src": "3599:30:1",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "3613:14:1",
																	"nodeType": "YulIdentifier",
																	"src": "3613:14:1"
																},
																"nativeSrc": "3613:16:1",
																"nodeType": "YulFunctionCall",
																"src": "3613:16:1"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "3599:10:1",
																	"nodeType": "YulIdentifier",
																	"src": "3599:10:1"
																}
															]
														},
														{
															"nativeSrc": "3643:26:1",
															"nodeType": "YulAssignment",
															"src": "3643:26:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3664:4:1",
																		"nodeType": "YulLiteral",
																		"src": "3664:4:1",
																		"type": "",
																		"value": "0x00"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3658:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "3658:5:1"
																},
																"nativeSrc": "3658:11:1",
																"nodeType": "YulFunctionCall",
																"src": "3658:11:1"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "3643:11:1",
																	"nodeType": "YulIdentifier",
																	"src": "3643:11:1"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 64,
														"isOffset": false,
														"isSlot": false,
														"src": "3517:7:1",
														"valueSize": 1
													},
													{
														"declaration": 72,
														"isOffset": false,
														"isSlot": false,
														"src": "3530:13:1",
														"valueSize": 1
													},
													{
														"declaration": 72,
														"isOffset": false,
														"isSlot": false,
														"src": "3558:13:1",
														"valueSize": 1
													},
													{
														"declaration": 85,
														"isOffset": false,
														"isSlot": false,
														"src": "3599:10:1",
														"valueSize": 1
													},
													{
														"declaration": 88,
														"isOffset": false,
														"isSlot": false,
														"src": "3643:11:1",
														"valueSize": 1
													},
													{
														"declaration": 82,
														"isOffset": false,
														"isSlot": false,
														"src": "3488:7:1",
														"valueSize": 1
													}
												],
												"id": 90,
												"nodeType": "InlineAssembly",
												"src": "3464:216:1"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 99,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 95,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 91,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 82,
															"src": "3699:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 92,
																"name": "returnSize",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 85,
																"src": "3710:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"hexValue": "30783230",
																"id": 93,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3724:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_32_by_1",
																	"typeString": "int_const 32"
																},
																"value": "0x20"
															},
															"src": "3710:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "3699:29:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 98,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 96,
															"name": "returnValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 88,
															"src": "3732:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 97,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3746:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3732:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3699:48:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 70,
												"id": 100,
												"nodeType": "Return",
												"src": "3692:55:1"
											}
										]
									},
									"documentation": {
										"id": 62,
										"nodeType": "StructuredDocumentation",
										"src": "2271:831:1",
										"text": " @notice Query if a contract implements an interface, does not check ERC165 support\n @param account The address of the contract to query for support of an interface\n @param interfaceId The interface identifier, as specified in ERC-165\n @return true if the contract at account indicates support of the interface with\n identifier interfaceId, false otherwise\n @dev Assumes that account contains a contract that supports ERC165, otherwise\n the behavior of this method is undefined. This precondition can be checked\n with {supportsERC165}.\n Some precompiled contracts will falsely indicate support for a given interface, so caution\n should be exercised when using this function.\n Interface identification is specified in ERC-165."
									},
									"id": 102,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsERC165InterfaceUnchecked",
									"nameLocation": "3117:32:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3158:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "3150:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3150:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 66,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "3174:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "3167:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 65,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "3167:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3149:37:1"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "3210:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 68,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3210:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3209:6:1"
									},
									"scope": 103,
									"src": "3108:647:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 104,
							"src": "1059:2699:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "692:3066:1"
				},
				"id": 1
			}
		}
	}
}