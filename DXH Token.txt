/// Premise /// 
A time based dividend token.

/// Parameters ///
Name : Dexhune
Ticker : DXH 
Price : 0.0001XAU (Gold Troy Ounces) 
Decimals : 0

/// General ///
The DXH token is an ERC-20 used to issue dividends to holders, issue rewards to the 'priceDAO' and deposit units of itself into the DXH-Dx exchange contract. 

! Function: mint ! 
This can be called once every 4 days or once every 86,400 blocks. This issues new tokens to all holders. 
This can only be called 3650 times, if called on time then dividends would cease after 40 years or after 315360000 blocks.  

The amount distributed is always 0.12% of existing supply, holders receive an amount proportional to what percent of the supply they own. [See E1] 

! Function: prepareMintToExchange !
This mints 300,000DXH to the token contract (self), in preparation for 'depositToExchange'. 
Can only be called once every 24 hours (21600 blocks) in perpetuity. 

! Function: depositToExchange !
This calls 'deposit' at the DXH-Dx exchange contract for 300,000DXH, thereby depositing 300,000DXH from the token address to the DXH-Dx under DXH's Balance-y. 

If the 'Deposit' function requires (4) fields, the DXH token contract writes them as follows;

Token contract; (self address) 
Balance type; false
Amount; 300000 
fromAddress; (self address) 

! Function: MintToDAO ! 
A third mint function that specifically targets the 'Price DAO', minting 300,000DXH every 21600 blocks (1 day), and can be called in perpetuity.   

! Function: setExchangeAddress ! 
Determines which contract to call 'Deposit' on. Required field; 'Contract address' (string).

! Function: setDAOAddress !
Determines where to send DAO rewards once called. Required field; 'Contract Address' (string). 

! Data: wenMint ! 
Shows how long till 'mint' can be called again (uint).

! Data: nextExchangeMint ! 
Shows how long till 'prepareMintToExchange' can be called again (uint). 

! Data: NextDAOMint ! 
Shows how long till 'MintToDAO' can be called again (uint). 

! Data: remainingMints ! 
Shows how many times left for calling the 'mint' function (uint). 

! Data: exchangeAddress ! 
Shows which address is currently set as the DXH-Dx contract address (string). 

! Data: DAOAddress !
Shows which address is currently set as the 'PriceDAO' address (string). 

/// Boilerplate Functions ///
- owner: returns the address of the owner.

- transferOwnership: specifies a new owner, requires; Address (string). 

- *ERC-20 standard functions*

/// Examples ///
E1: If an address owns 0.1% of the supply then they get 0.1% of the mint. If the supply is 10,000,000 at the time of 'mint' with a yield of 0.12% then the minted total is; 12,000.  

/// Notes ///
- The token has no decimals. 

- The Contract cannot be directly controlled by the owner to 'withdraw' or 'halt', these functions are simply not available.

- When the DXH contract is created a total of 10,000,000DXH is minted to the deployer. 

- At first, there will be no one to call the mint functions, so the team will have to do that. 

- All percentage calculations should use approximate values or nearest whole numbers since DXH cannot be broken down. If an address is owed 0.5DXH or less, then they get 0, but if they are owed 0.6DXH or more then they get 1DXH. 

- The DXH contract should be renounced after setting the Exchange address and 'Price DAO' address. 

- The DXH contract will be eligible for a payout as soon as it is deployed, this means the deployer should set the respective addresses and then call the 'mint' function(s). 