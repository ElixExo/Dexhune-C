"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const ethers_1 = require("ethers");
const utils_1 = require("ethers/lib/utils");
const utils_2 = require("../utils");
const WAD = (0, utils_1.parseUnits)("1");
const CompoundMath = {
    WAD,
    mul: (x, y) => {
        x = ethers_1.BigNumber.from(x);
        return x.mul(y).div(WAD);
    },
    div: (x, y) => WAD.mul(x).mul(WAD).div(y).div(WAD),
    min: (a, b, c) => (0, utils_2.minBNS)(a, b, c),
    safeSub: (a, b) => {
        a = ethers_1.BigNumber.from(a);
        return a.gte(b) ? a.sub(b) : ethers_1.constants.Zero;
    },
    average: (a, b) => {
        a = ethers_1.BigNumber.from(a);
        b = ethers_1.BigNumber.from(b);
        return a // (a + b) / 2 can overflow, so we distribute.
            .div(2)
            .add(b.div(2))
            .add(a.mod(2).add(b.mod(2)).div(2));
    },
};
exports.default = CompoundMath;
