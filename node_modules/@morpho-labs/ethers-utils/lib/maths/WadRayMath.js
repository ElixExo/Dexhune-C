"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const ethers_1 = require("ethers");
const utils_1 = require("ethers/lib/utils");
const WAD = ethers_1.BigNumber.from(10).pow(18);
const halfWAD = WAD.div(2);
const RAY = ethers_1.BigNumber.from(10).pow(27);
const halfRAY = RAY.div(2);
const WAD_RAY_RATIO = ethers_1.BigNumber.from(10).pow(9);
const WadRayMath = {
    WAD,
    halfWAD,
    RAY,
    halfRAY,
    wadMul: (a, b) => {
        a = ethers_1.BigNumber.from(a);
        b = ethers_1.BigNumber.from(b);
        if (a.eq(0) || b.eq(0))
            return ethers_1.constants.Zero;
        return halfWAD.add(a.mul(b)).div(WAD);
    },
    wadDiv: (a, b) => {
        a = ethers_1.BigNumber.from(a);
        b = ethers_1.BigNumber.from(b);
        return a.mul(WAD).add(b.div(2)).div(b);
    },
    rayMul: (a, b) => {
        a = ethers_1.BigNumber.from(a);
        b = ethers_1.BigNumber.from(b);
        if (a.eq(0) || b.eq(0))
            return ethers_1.constants.Zero;
        return halfRAY.add(a.mul(b)).div(RAY);
    },
    rayDiv: (a, b) => {
        a = ethers_1.BigNumber.from(a);
        b = ethers_1.BigNumber.from(b);
        return a.mul(RAY).add(b.div(2)).div(b);
    },
    rayToWad: (a) => ethers_1.BigNumber.from(a).div(WAD_RAY_RATIO),
    wadToRay: (a) => ethers_1.BigNumber.from(a).mul(WAD_RAY_RATIO),
    formatRay: (a) => (0, utils_1.formatUnits)(a, 27),
    parseRay: (a) => (0, utils_1.parseUnits)(a, 27),
    parseWad: (a) => (0, utils_1.parseUnits)(a),
    formatWad: (a) => (0, utils_1.formatUnits)(a),
    wadDivUp: (a, b) => {
        a = ethers_1.BigNumber.from(a);
        b = ethers_1.BigNumber.from(b);
        return a.mul(WAD).add(b.sub(1)).div(b);
    },
    rayDivUp: (a, b) => {
        a = ethers_1.BigNumber.from(a);
        b = ethers_1.BigNumber.from(b);
        return a.mul(RAY).add(b.sub(1)).div(b);
    },
};
exports.default = WadRayMath;
