"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const ethers_1 = require("ethers");
const utils_1 = require("ethers/lib/utils");
const utils_2 = require("../utils");
const BASE_PERCENT = ethers_1.BigNumber.from(10000);
const HALF_PERCENT = BASE_PERCENT.div(2);
const percentMul = (x, pct) => {
    x = ethers_1.BigNumber.from(x);
    if (x.eq(0) || ethers_1.BigNumber.from(pct).eq(0))
        return ethers_1.constants.Zero;
    return x.mul(pct).add(HALF_PERCENT).div(BASE_PERCENT);
};
const percentDiv = (x, pct) => {
    x = ethers_1.BigNumber.from(x);
    pct = ethers_1.BigNumber.from(pct);
    if (x.eq(0) || ethers_1.BigNumber.from(pct).eq(0))
        return ethers_1.constants.Zero;
    return x.mul(BASE_PERCENT).add(pct.div(2)).div(pct);
};
const weiToPercent = (weiNumber) => ethers_1.BigNumber.from(weiNumber).mul(BASE_PERCENT).div((0, utils_2.pow10)(14)).add(HALF_PERCENT).div(BASE_PERCENT);
const percentDivUp = (x, pct) => {
    x = ethers_1.BigNumber.from(x);
    pct = ethers_1.BigNumber.from(pct);
    return x.mul(BASE_PERCENT).add(pct.sub(1)).div(pct);
};
const parsePercent = (a, pow100 = false) => (0, utils_1.parseUnits)(a, pow100 ? 2 : 4);
const PercentMath = {
    BASE_PERCENT,
    HALF_PERCENT,
    percentMul,
    percentDiv,
    weiToPercent,
    percentDivUp,
    parsePercent,
};
exports.default = PercentMath;
