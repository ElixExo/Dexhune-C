/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { MockERC20, MockERC20Interface } from "../../mockups/MockERC20";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    name: "setBalance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "dec",
        type: "uint8",
      },
    ],
    name: "setDecimals",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040526012600160006101000a81548160ff021916908360ff16021790555034801561002c57600080fd5b506109d38061003c6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c806370a082311161007157806370a08231146101685780637a1395aa1461019857806395d89b41146101b4578063a9059cbb146101d2578063dd62ed3e14610202578063e30443bc14610232576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b661024e565b6040516100c3919061065b565b60405180910390f35b6100e660048036038101906100e19190610716565b61028b565b6040516100f39190610771565b60405180910390f35b610104610297565b604051610111919061079b565b60405180910390f35b610134600480360381019061012f91906107b6565b6102bf565b6040516101419190610771565b60405180910390f35b6101526103c1565b60405161015f9190610825565b60405180910390f35b610182600480360381019061017d9190610840565b6103d8565b60405161018f919061079b565b60405180910390f35b6101b260048036038101906101ad9190610899565b610420565b005b6101bc61043e565b6040516101c9919061065b565b60405180910390f35b6101ec60048036038101906101e79190610716565b61047b565b6040516101f99190610771565b60405180910390f35b61021c600480360381019061021791906108c6565b61057c565b604051610229919061079b565b60405180910390f35b61024c60048036038101906102479190610716565b610584565b005b60606040518060400160405280600981526020017f4d6f636b45524332300000000000000000000000000000000000000000000000815250905090565b60006001905092915050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff905090565b6000816000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101561030c57600080fd5b816000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461035a9190610935565b92505081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546103af9190610969565b92505081905550600190509392505050565b6000600160009054906101000a900460ff16905090565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b80600160006101000a81548160ff021916908360ff16021790555050565b60606040518060400160405280600881526020017f4d434b4552433230000000000000000000000000000000000000000000000000815250905090565b6000816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156104c857600080fd5b816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546105169190610935565b92505081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461056b9190610969565b925050819055506001905092915050565b600092915050565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050565b600081519050919050565b600082825260208201905092915050565b60005b838110156106055780820151818401526020810190506105ea565b60008484015250505050565b6000601f19601f8301169050919050565b600061062d826105cb565b61063781856105d6565b93506106478185602086016105e7565b61065081610611565b840191505092915050565b600060208201905081810360008301526106758184610622565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006106ad82610682565b9050919050565b6106bd816106a2565b81146106c857600080fd5b50565b6000813590506106da816106b4565b92915050565b6000819050919050565b6106f3816106e0565b81146106fe57600080fd5b50565b600081359050610710816106ea565b92915050565b6000806040838503121561072d5761072c61067d565b5b600061073b858286016106cb565b925050602061074c85828601610701565b9150509250929050565b60008115159050919050565b61076b81610756565b82525050565b60006020820190506107866000830184610762565b92915050565b610795816106e0565b82525050565b60006020820190506107b0600083018461078c565b92915050565b6000806000606084860312156107cf576107ce61067d565b5b60006107dd868287016106cb565b93505060206107ee868287016106cb565b92505060406107ff86828701610701565b9150509250925092565b600060ff82169050919050565b61081f81610809565b82525050565b600060208201905061083a6000830184610816565b92915050565b6000602082840312156108565761085561067d565b5b6000610864848285016106cb565b91505092915050565b61087681610809565b811461088157600080fd5b50565b6000813590506108938161086d565b92915050565b6000602082840312156108af576108ae61067d565b5b60006108bd84828501610884565b91505092915050565b600080604083850312156108dd576108dc61067d565b5b60006108eb858286016106cb565b92505060206108fc858286016106cb565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610940826106e0565b915061094b836106e0565b925082820390508181111561096357610962610906565b5b92915050565b6000610974826106e0565b915061097f836106e0565b925082820190508082111561099757610996610906565b5b9291505056fea26469706673582212206fc3ebba197daaa4cd4096b46c112a67db27fcc380d5a523b3787668e35b685864736f6c63430008150033";

type MockERC20ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockERC20ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockERC20__factory extends ContractFactory {
  constructor(...args: MockERC20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      MockERC20 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MockERC20__factory {
    return super.connect(runner) as MockERC20__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockERC20Interface {
    return new Interface(_abi) as MockERC20Interface;
  }
  static connect(address: string, runner?: ContractRunner | null): MockERC20 {
    return new Contract(address, _abi, runner) as unknown as MockERC20;
  }
}
