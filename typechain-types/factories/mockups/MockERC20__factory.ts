/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { MockERC20, MockERC20Interface } from "../../mockups/MockERC20";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    name: "setBalance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "dec",
        type: "uint8",
      },
    ],
    name: "setDecimals",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "szName",
        type: "string",
      },
    ],
    name: "setName",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "szSym",
        type: "string",
      },
    ],
    name: "setSymbol",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c0604052600960809081526804d6f636b45524332360bc1b60a0526001906200002a90826200018f565b5060408051808201909152600881526704d434b45524332360c41b60208201526002906200005990826200018f565b506003805460ff191660121790553480156200007457600080fd5b506200025f565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052602260045260246000fd5b600281046001821680620000bc57607f821691505b602082108103620000d157620000d162000091565b50919050565b6000620000e8620000e58381565b90565b92915050565b620000f983620000d7565b815460001960089490940293841b1916921b91909117905550565b600062000123818484620000ee565b505050565b8181101562000147576200013e60008262000114565b60010162000128565b5050565b601f82111562000123576000818152602090206020601f85010481016020851015620001745750805b620001886020601f86010483018262000128565b5050505050565b81516001600160401b03811115620001ab57620001ab6200007b565b620001b78254620000a7565b620001c48282856200014b565b6020601f831160018114620001fb5760008415620001e25750858201515b600019600886021c198116600286021786555062000257565b600085815260208120601f198616915b828110156200022d57888501518255602094850194600190920191016200020b565b868310156200024a5784890151600019601f89166008021c191682555b6001600288020188555050505b505050505050565b61094f806200026f6000396000f3fe608060405234801561001057600080fd5b50600436106100df5760003560e01c80637a1395aa1161008c578063b84c824611610066578063b84c8246146101c3578063c47f0027146101d6578063dd62ed3e146101e9578063e30443bc146101ff57600080fd5b80637a1395aa1461018257806395d89b41146101a8578063a9059cbb146101b057600080fd5b806323b872dd116100bd57806323b872dd14610133578063313ce5671461014657806370a082311461015957600080fd5b806306fdde03146100e4578063095ea7b31461010257806318160ddd14610122575b600080fd5b6100ec610229565b6040516100f99190610444565b60405180910390f35b6101156101103660046104a0565b6102bb565b6040516100f991906104e7565b6000195b6040516100f991906104fb565b610115610141366004610509565b6102c4565b60035460ff166040516100f99190610562565b610126610167366004610570565b6001600160a01b031660009081526020819052604090205490565b6101a66101903660046105ad565b6003805460ff191660ff92909216919091179055565b005b6100ec61034d565b6101156101be3660046104a0565b61035c565b6101a66101d13660046106c9565b6103d2565b6101a66101e43660046106c9565b6103e2565b6101266101f7366004610704565b600092915050565b6101a661020d3660046104a0565b6001600160a01b03909116600090815260208190526040902055565b6060600180546102389061074d565b80601f01602080910402602001604051908101604052809291908181526020018280546102649061074d565b80156102b15780601f10610286576101008083540402835291602001916102b1565b820191906000526020600020905b81548152906001019060200180831161029457829003601f168201915b5050505050905090565b60015b92915050565b6001600160a01b0383166000908152602081905260408120548211156102e957600080fd5b6001600160a01b0384166000908152602081905260408120805484929061031190849061078f565b90915550506001600160a01b0383166000908152602081905260408120805484929061033e9084906107a2565b90915550600195945050505050565b6060600280546102389061074d565b3360009081526020819052604081205482111561037857600080fd5b336000908152602081905260408120805484929061039790849061078f565b90915550506001600160a01b038316600090815260208190526040812080548492906103c49084906107a2565b909155506001949350505050565b60026103de8282610855565b5050565b60016103de8282610855565b60005b838110156104095781810151838201526020016103f1565b50506000910152565b600061041c825190565b8084526020840193506104338185602086016103ee565b601f01601f19169290920192915050565b602080825281016104558184610412565b9392505050565b60006001600160a01b0382166102be565b6104768161045c565b811461048157600080fd5b50565b80356102be8161046d565b80610476565b80356102be8161048f565b600080604083850312156104b6576104b6600080fd5b60006104c28585610484565b92505060206104d385828601610495565b9150509250929050565b8015155b82525050565b602081016102be82846104dd565b806104e1565b602081016102be82846104f5565b60008060006060848603121561052157610521600080fd5b600061052d8686610484565b935050602061053e86828701610484565b925050604061054f86828701610495565b9150509250925092565b60ff81166104e1565b602081016102be8284610559565b60006020828403121561058557610585600080fd5b60006105918484610484565b949350505050565b60ff8116610476565b80356102be81610599565b6000602082840312156105c2576105c2600080fd5b600061059184846105a2565b634e487b7160e01b600052604160045260246000fd5b601f19601f830116810181811067ffffffffffffffff8211171561060a5761060a6105ce565b6040525050565b600061061c60405190565b905061062882826105e4565b919050565b600067ffffffffffffffff821115610647576106476105ce565b601f19601f83011660200192915050565b82818337506000910152565b60006106776106728461062d565b610611565b90508281526020810184848401111561069257610692600080fd5b61069d848285610658565b509392505050565b600082601f8301126106b9576106b9600080fd5b8135610591848260208601610664565b6000602082840312156106de576106de600080fd5b813567ffffffffffffffff8111156106f8576106f8600080fd5b610591848285016106a5565b6000806040838503121561071a5761071a600080fd5b60006107268585610484565b92505060206104d385828601610484565b634e487b7160e01b600052602260045260246000fd5b60028104600182168061076157607f821691505b60208210810361077357610773610737565b50919050565b634e487b7160e01b600052601160045260246000fd5b818103818111156102be576102be610779565b808201808211156102be576102be610779565b60006102be6107c18381565b90565b6107cd836107b5565b815460001960089490940293841b1916921b91909117905550565b60006107f58184846107c4565b505050565b818110156103de5761080d6000826107e8565b6001016107fa565b601f8211156107f5576000818152602090206020601f8501048101602085101561083c5750805b61084e6020601f8601048301826107fa565b5050505050565b815167ffffffffffffffff81111561086f5761086f6105ce565b610879825461074d565b610884828285610815565b6020601f8311600181146108b857600084156108a05750858201515b600019600886021c1981166002860217865550610911565b600085815260208120601f198616915b828110156108e857888501518255602094850194600190920191016108c8565b868310156109045784890151600019601f89166008021c191682555b6001600288020188555050505b50505050505056fea2646970667358221220eafe584da6f3b52804b8a6c1604ac65c714782f57f76a1cf5b12e932e0c3c50c64736f6c63430008160033";

type MockERC20ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockERC20ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockERC20__factory extends ContractFactory {
  constructor(...args: MockERC20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      MockERC20 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MockERC20__factory {
    return super.connect(runner) as MockERC20__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockERC20Interface {
    return new Interface(_abi) as MockERC20Interface;
  }
  static connect(address: string, runner?: ContractRunner | null): MockERC20 {
    return new Contract(address, _abi, runner) as unknown as MockERC20;
  }
}
