/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { MockERC20, MockERC20Interface } from "../../mockups/MockERC20";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    name: "setBalance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "dec",
        type: "uint8",
      },
    ],
    name: "setDecimals",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040526001805460ff1916601217905534801561001d57600080fd5b5061058f8061002d6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c806370a082311161007157806370a082311461013c5780637a1395aa1461016557806395d89b411461018b578063a9059cbb146101af578063dd62ed3e146101c2578063e30443bc146101d857600080fd5b806306fdde03146100ae578063095ea7b3146100e557806318160ddd1461010557806323b872dd14610116578063313ce56714610129575b600080fd5b60408051808201909152600981526804d6f636b45524332360bc1b60208201525b6040516100dc9190610360565b60405180910390f35b6100f86100f33660046103bc565b610202565b6040516100dc9190610403565b6000195b6040516100dc9190610417565b6100f8610124366004610425565b61020b565b60015460ff166040516100dc919061047e565b61010961014a36600461048c565b6001600160a01b031660009081526020819052604090205490565b6101896101733660046104c9565b6001805460ff191660ff92909216919091179055565b005b60408051808201909152600881526704d434b45524332360c41b60208201526100cf565b6100f86101bd3660046103bc565b610294565b6101096101d03660046104ea565b600092915050565b6101896101e63660046103bc565b6001600160a01b03909116600090815260208190526040902055565b60015b92915050565b6001600160a01b03831660009081526020819052604081205482111561023057600080fd5b6001600160a01b03841660009081526020819052604081208054849290610258908490610533565b90915550506001600160a01b03831660009081526020819052604081208054849290610285908490610546565b90915550600195945050505050565b336000908152602081905260408120548211156102b057600080fd5b33600090815260208190526040812080548492906102cf908490610533565b90915550506001600160a01b038316600090815260208190526040812080548492906102fc908490610546565b909155506001949350505050565b60005b8381101561032557818101518382015260200161030d565b50506000910152565b6000610338825190565b80845260208401935061034f81856020860161030a565b601f01601f19169290920192915050565b60208082528101610371818461032e565b9392505050565b60006001600160a01b038216610205565b61039281610378565b811461039d57600080fd5b50565b803561020581610389565b80610392565b8035610205816103ab565b600080604083850312156103d2576103d2600080fd5b60006103de85856103a0565b92505060206103ef858286016103b1565b9150509250929050565b8015155b82525050565b6020810161020582846103f9565b806103fd565b602081016102058284610411565b60008060006060848603121561043d5761043d600080fd5b600061044986866103a0565b935050602061045a868287016103a0565b925050604061046b868287016103b1565b9150509250925092565b60ff81166103fd565b602081016102058284610475565b6000602082840312156104a1576104a1600080fd5b60006104ad84846103a0565b949350505050565b60ff8116610392565b8035610205816104b5565b6000602082840312156104de576104de600080fd5b60006104ad84846104be565b6000806040838503121561050057610500600080fd5b600061050c85856103a0565b92505060206103ef858286016103a0565b634e487b7160e01b600052601160045260246000fd5b818103818111156102055761020561051d565b808201808211156102055761020561051d56fea264697066735822122044b0357a466f25c0f1b7a9ec62dc055f22326b993a484e77f93312845e6596b264736f6c63430008160033";

type MockERC20ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockERC20ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockERC20__factory extends ContractFactory {
  constructor(...args: MockERC20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      MockERC20 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MockERC20__factory {
    return super.connect(runner) as MockERC20__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockERC20Interface {
    return new Interface(_abi) as MockERC20Interface;
  }
  static connect(address: string, runner?: ContractRunner | null): MockERC20 {
    return new Contract(address, _abi, runner) as unknown as MockERC20;
  }
}
