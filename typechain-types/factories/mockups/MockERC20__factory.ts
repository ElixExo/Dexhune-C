/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { MockERC20, MockERC20Interface } from "../../mockups/MockERC20";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    name: "setBalance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "dec",
        type: "uint8",
      },
    ],
    name: "setDecimals",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040526001805460ff1916601217905534801561001d57600080fd5b506105f18061002d6000396000f3fe608060405234801561001057600080fd5b50600436106100c95760003560e01c806370a0823111610081578063a9059cbb1161005b578063a9059cbb146101f8578063dd62ed3e1461020b578063e30443bc1461022157600080fd5b806370a08231146101705780637a1395aa1461019957806395d89b41146101bf57600080fd5b806318160ddd116100b257806318160ddd1461013957806323b872dd1461014a578063313ce5671461015d57600080fd5b806306fdde03146100ce578063095ea7b314610119575b600080fd5b60408051808201909152600981527f4d6f636b4552433230000000000000000000000000000000000000000000000060208201525b60405161011091906103a9565b60405180910390f35b61012c610127366004610405565b61024b565b604051610110919061044c565b6000195b6040516101109190610460565b61012c61015836600461046e565b610254565b60015460ff1660405161011091906104c7565b61013d61017e3660046104d5565b6001600160a01b031660009081526020819052604090205490565b6101bd6101a7366004610512565b6001805460ff191660ff92909216919091179055565b005b60408051808201909152600881527f4d434b45524332300000000000000000000000000000000000000000000000006020820152610103565b61012c610206366004610405565b6102dd565b61013d610219366004610533565b600092915050565b6101bd61022f366004610405565b6001600160a01b03909116600090815260208190526040902055565b60015b92915050565b6001600160a01b03831660009081526020819052604081205482111561027957600080fd5b6001600160a01b038416600090815260208190526040812080548492906102a1908490610595565b90915550506001600160a01b038316600090815260208190526040812080548492906102ce9084906105a8565b90915550600195945050505050565b336000908152602081905260408120548211156102f957600080fd5b3360009081526020819052604081208054849290610318908490610595565b90915550506001600160a01b038316600090815260208190526040812080548492906103459084906105a8565b909155506001949350505050565b60005b8381101561036e578181015183820152602001610356565b50506000910152565b6000610381825190565b808452602084019350610398818560208601610353565b601f01601f19169290920192915050565b602080825281016103ba8184610377565b9392505050565b60006001600160a01b03821661024e565b6103db816103c1565b81146103e657600080fd5b50565b803561024e816103d2565b806103db565b803561024e816103f4565b6000806040838503121561041b5761041b600080fd5b600061042785856103e9565b9250506020610438858286016103fa565b9150509250929050565b8015155b82525050565b6020810161024e8284610442565b80610446565b6020810161024e828461045a565b60008060006060848603121561048657610486600080fd5b600061049286866103e9565b93505060206104a3868287016103e9565b92505060406104b4868287016103fa565b9150509250925092565b60ff8116610446565b6020810161024e82846104be565b6000602082840312156104ea576104ea600080fd5b60006104f684846103e9565b949350505050565b60ff81166103db565b803561024e816104fe565b60006020828403121561052757610527600080fd5b60006104f68484610507565b6000806040838503121561054957610549600080fd5b600061055585856103e9565b9250506020610438858286016103e9565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b8181038181111561024e5761024e610566565b8082018082111561024e5761024e61056656fea2646970667358221220e1428b851023fe335e51a78ffa52bc008bb0da083f6f283b0b61aaf7a006e83264736f6c63430008160033";

type MockERC20ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockERC20ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockERC20__factory extends ContractFactory {
  constructor(...args: MockERC20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      MockERC20 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MockERC20__factory {
    return super.connect(runner) as MockERC20__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockERC20Interface {
    return new Interface(_abi) as MockERC20Interface;
  }
  static connect(address: string, runner?: ContractRunner | null): MockERC20 {
    return new Contract(address, _abi, runner) as unknown as MockERC20;
  }
}
