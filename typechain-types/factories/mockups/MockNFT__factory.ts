/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { MockNFT, MockNFTInterface } from "../../mockups/MockNFT";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mintAmount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610245806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80630e583dd2146100465780636a6278421461005b57806370a082311461006e575b600080fd5b61005961005436600461015a565b6100ad565b005b610059610069366004610197565b6100f1565b61009761007c366004610197565b6001600160a01b031660009081526020819052604090205490565b6040516100a491906101c0565b60405180910390f35b6001600160a01b0382166000908152602081905260409020546100d082826101e2565b6001600160a01b039093166000908152602081905260409020929092555050565b6001600160a01b038116600090815260208190526040902054806100d0816101f5565b60006001600160a01b0382165b92915050565b61013081610114565b811461013b57600080fd5b50565b803561012181610127565b80610130565b803561012181610149565b6000806040838503121561017057610170600080fd5b600061017c858561013e565b925050602061018d8582860161014f565b9150509250929050565b6000602082840312156101ac576101ac600080fd5b60006101b8848461013e565b949350505050565b81815260208101610121565b634e487b7160e01b600052601160045260246000fd5b80820180821115610121576101216101cc565b60006000198203610208576102086101cc565b506001019056fea2646970667358221220b8bba2ebae79e63dd4c42aef8c90b3de6bf69333b8d092e0e05e83703751c8d264736f6c63430008160033";

type MockNFTConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockNFTConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockNFT__factory extends ContractFactory {
  constructor(...args: MockNFTConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      MockNFT & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MockNFT__factory {
    return super.connect(runner) as MockNFT__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockNFTInterface {
    return new Interface(_abi) as MockNFTInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): MockNFT {
    return new Contract(address, _abi, runner) as unknown as MockNFT;
  }
}
