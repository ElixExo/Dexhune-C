/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  ERC20Normalizer,
  ERC20NormalizerInterface,
} from "../../utils/ERC20Normalizer";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "decimals",
        type: "uint256",
      },
    ],
    name: "IERC20Normalizer_TokenDecimalsGreaterThan18",
    type: "error",
  },
] as const;

export class ERC20Normalizer__factory {
  static readonly abi = _abi;
  static createInterface(): ERC20NormalizerInterface {
    return new Interface(_abi) as ERC20NormalizerInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ERC20Normalizer {
    return new Contract(address, _abi, runner) as unknown as ERC20Normalizer;
  }
}
